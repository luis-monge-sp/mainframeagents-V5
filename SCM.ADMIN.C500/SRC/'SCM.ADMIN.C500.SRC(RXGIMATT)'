         IRXARGTB DECLARE=NO                                            00010000
*                                                                       00020000
BALAPI   CSECT                                                          00030000
         STM    14,12,12(13)                                            00040000
         LR     12,15                                                   00050000
@PSTART  EQU    BALAPI                                                  00060000
         USING  @PSTART,12                                              00070000
         ST     13,SAVE+4                                               00080000
         LA     14,SAVE                                                 00090000
         ST     14,8(13)                                                00100000
         LR     13,14                                                   00110000
*                                                                       00120000
* END OF STANDARD LINKAGE                                               00130000
*                                                                       00140000
BALAPI   AMODE 31                                                       00150000
*                                                                       00160000
* SET UP PARAMETERS FOR QUERY                                           00170000
*                                                                       00180000
         LA    9,QUERY_PARMS                                            00190000
         XC    QUERY_PARMS,QUERY_PARMS                                  00200000
*                                                                       00210000
         LR    2,1                            POINT BEGINNING OF ARGS   00220002
*                                                                       00230000
         LA    8,5                            LOOP NUMBER               00240000
PARMLOOP DS    0H                                                       00250000
         BAL   7,FILLPARM                     FILL CURRENT PARM         00260000
         BCT   8,PARMLOOP                                               00270000
         B     ARGDONE                        YES. PARMS ARE DONE       00280000
*                                                                       00290000
FILLPARM DS    0H                                                       00300000
         L     6,0(2)                         current parm pointer      00310001
         LA    4,2(6)                         ADDRESS OF PARM           00320003
         LH    3,0(6)                         LENGTH OF PARM            00330001
         ST    4,0(9)                         STORE APARM               00340000
         ST    3,4(9)                         STORE ALEN                00350000
         LA    2,4(2)                         ADVANCE TO NEXT IN  PARM  00360001
         LA    9,8(9)                         ADVANCE TO NEXT OUT PARM  00370001
         BR    7                              RETURN FROM ROUTINE       00380000
*                                                                       00390000
ARGDONE  DS    0H              YES. PARMS ARE DONE                      00400000
*                                                                       00410000
* NOW LOAD THE API                                                      00420000
*                                                                       00430000
         LA    2,APIPGM                                                 00440000
         LOAD EPLOC=(2),LOADPT=PGMADR                                   00450000
*                                                                       00460000
* NOW DO THE QUERY                                                      00470000
*                                                                       00480000
         L     15,PGMADR                                                00490000
         CALL (15),(QUERYCMD,QUERY_PARMS@,CMDOUT,APILANG,RC,CC,MSG@)    00500000
*                                                                       00510000
*                                                                       00520000
* NOW SEE WHAT WAS RETURNED                                             00530000
*                                                                       00540000
         L     3,RC                                                     00550000
         LTR   3,3                                                      00560000
         BNZ   ERRPRINT                                                 00570000
*                                                                       00580000
* ESTABLISH ADDRESSABILITY                                              00590000
*                                                                       00600000
         OPEN (SYSPRINT,OUTPUT)                                         00610000
         L     3,CMDOUT                 * Set up addr to list of..      00620000
         USING ENTRY_LIST,3             * ..entry types                 00630000
*                                                                       00640000
* PRINT ENTRY TYPES                                               @01A  00650000
*                                                                       00660000
PRTTYP   LTR    3,3                     * If no more entry types  @01A  00670000
         BZ     CLOSEOUT                * ...stop processing      @01A  00680000
         L      4,ENTRIES               * Set up addr to first entry..  00690000
         USING CSIENTRY,4               * ..of the first type     @01A  00700000
         MVI    BUFFER,C' '             * load the entry type     @01A  00710000
         MVC    BUFFER+1(119),BUFFER    * ..in the output buffer  @01A  00720000
         MVC    BUFFER(1),EQSIGNS       *                         @01A  00730000
         MVC    BUFFER+2(11),TYPE       *                         @01A  00740000
         PUT    SYSPRINT,BUFFER         * write the buffer        @01A  00750016
         B      PRTENT                  * branch to entry data    @01A  00760000
MORETYP  L      3,NEXT                  * point to next ent type  @01A  00770000
         B      PRTTYP                  * branch to next ent type @01A  00780000
*                                                                       00790000
* PRINT ENTRIES                                                         00800000
*                                                                       00810000
PRTENT   LTR    4,4                     * If no more entries            00820000
         BZ     MORETYP                 * ...get next entry type  @01C  00830000
         L      5,SUBENTRIES            * Set addr to subent list @01M  00840000
         USING SUBENTRY,5               * ...types for this entry @01M  00850000
         MVI    BUFFER,C' '             * load the entry name and       00860000
         MVC    BUFFER+1(119),BUFFER    * ...zone name in the output    00870000
         MVC    BUFFER(2),EQSIGNS       *                         @01A  00880000
         MVC    BUFFER+3(8),ENTRYNAME   * ...buffer                     00890000
         MVC    BUFFER+13(7),ZONENAME                                   00900000
         PUT    SYSPRINT,BUFFER         * write the buffer              00910016
         B      PRTSUB                  * branch to process subent data 00920000
MOREENT  L      4,CSINEXT               * point to next entry           00930000
         B      PRTENT                  * branch to process next entry  00940000
*                                                                       00950000
* PRINT SUBENTRIES                                                      00960000
* GLAPIDUS :                                                            00970025
* SPECIAL SE TYPE "VER" IS NOW SUPPORTED: SUPING,REQ,PRE,etc.           00980030
* THERE WAS NO SUCH SUPPORT IN THE ORIGINAL IBM FRONT-END.              00990025
* SEE SMP/E REFERENCE. CSI APPL PROGRAMMING INTERFACE GIMAPI,           01000025
* VER STRUCTURE.                                                        01010030
*                                                                       01020025
PRTSUB   LTR    5,5                     * If no more subentry types     01030000
         BZ     MOREENT                 * ...branch to get next entry   01040000
         L      6,SUBENTDATA            * Set addr to the list    @01M  01050000
         USING ITEM_LIST,6              * ...of subentry values   @01M  01060000
         CLC    SUBTYPE(3),=CL3'VER'    IS THIS VER REQUEST ?           01070031
         BZ     PRTDATA                 AVOID PRINTING TITLE RECORD     01080031
         MVI    BUFFER,C' '             * load subent type on buffer    01090000
         MVC    BUFFER+1(119),BUFFER                                    01100000
         MVC    BUFFER(3),EQSIGNS       *                         @01A  01110000
         MVC    BUFFER+4(12),SUBTYPE                                    01120032
         PUT    SYSPRINT,BUFFER         * write the buffer              01130016
         B      PRTDATA                 * branch to process sub values  01140000
MORESUB  L      5,SUBNEXT               * get next subentry             01150000
         B      PRTSUB                  * branch to next subent type    01160000
*                                                                       01170000
* PRINT DATA                                                            01180000
*                                                                       01190000
MOREDATA L      6,ITMNEXT               * get next subentry value @01A  01200000
PRTDATA  LTR    6,6                     * no more values in chain @01C  01210000
         BZ     MORESUB                 * ...branch to get next subent  01220000
         USING  RETDATA,7               * ...subentry value       @01M  01230015
         L      7,DATA                  * Set addr to current     @01M  01240010
         L      8,DATALEN                                               01250013
         CLC    SUBTYPE(3),=CL3'VER'  IS THIS VER REQUEST               01260025
         BNZ    CHECKLEN              NO                                01270025
         L      1,4(6)                YES.      POINT CURR VER SE       01280026
DONEXTSE DS     0H                                                      01290026
         L      10,0(1)                   POINT NEXT VER SE             01300026
*                                                                       01310027
         LR     2,1                       STORE R1                      01320028
         MVI    BUFFER,C' '                                             01330027
         MVC    BUFFER+1(119),BUFFER                                    01340027
         MVC    BUFFER(3),EQSIGNS       *                         @01A  01350027
         MVC    BUFFER+4(12),8(1)        PROPER SUBTYPE                 01360032
         PUT    SYSPRINT,BUFFER                                         01370027
         LR     1,2                     RESTORE R1                      01380027
*                                                                       01390028
         L      1,4(1)                    POINT CURR VER SE I_L         01400028
*                                                                       01410027
DONEXTIL DS     0H                                                      01420025
         L      2,0(1)                    POINT CURR VER SE I_L NEXT    01430026
         L      7,8(1)                    POINT CURR VER SE I_L DATA    01440026
         MVC    DATALEN,4(1)              CURR VER SE I_L DATA LENGTH   01450026
         L      8,DATALEN                 LOAD DL TO REG                01460026
CHECKLEN C      8,OUTRECLN                                              01470000
         BNH    SETLEN                                                  01480000
         L      8,OUTRECLN                                              01490000
SETLEN   LA     15,1                                                    01500015
         SLR    8,15                                                    01510000
         MVI    BUFFER,C' '                                             01520015
         MVC    BUFFER+1(119),BUFFER                                    01530015
         MVC    BUFFER(4),EQSIGNS                                       01540015
         EX     8,@MOVDATA                                              01550000
         PUT    SYSPRINT,BUFFER         * write the buffer              01560016
         L      8,DATALEN               * check if value too long       01570000
         C      8,OUTRECLN              * ...for buffer.  If not,       01580000
         BNH    ROUTNXTA                * ...branch get next val  @01C  01590023
         S      8,OUTRECLN              * If value too long,            01600000
         ST     8,DATALEN               * ...determine start and length 01610000
         A      7,OUTRECLN              * ...of the remainder, and      01620000
         B      CHECKLEN                * ...branch to print rest of it 01630007
ROUTNXTA DS     0H                                                      01640023
         CLC    SUBTYPE(3),=CL3'VER'    IS THIS VER REQUEST             01650025
         BNZ    MOREDATA                NO. CONTINUE REGULAR WAY        01660025
         LTR    1,2                     RESTORE => NEXT VER SE I_L      01670026
         BNZ    DONEXTIL                GOTO NEXT VER SE I_L IF =><>0   01680026
         LTR    1,10                    RESTORE => NEXT VER SE          01690027
         BNZ    DONEXTSE                GOTO VER SE IF PTR<>0           01700026
         B      MOREDATA                BOTH PTRS=0 GET NEXT REGULAR SE 01710026
*                                                                       01720000
* PRINT ERROR MESSAGES                                                  01730000
*                                                                       01740000
ERRPRINT OPEN   (SYSPRINT,OUTPUT)                                       01750000
         L      6,MSG@                                                  01760000
         L      7,DATA                                                  01770000
         L      8,DATALEN                                               01780000
CHKMSGLN C      8,OUTRECLN                                              01790000
         BNH    SETMSGLN                                                01800000
         L      8,OUTRECLN                                              01810000
SETMSGLN LA     15,1                                                    01820000
         SLR    8,15                                                    01830000
         MVI    BUFFER,C' '                                             01840000
         MVC    BUFFER+1(119),BUFFER                                    01850000
         MVC    BUFFER(4),=C'ER: '      *                         @01A  01860000
         EX     8,@MOVDATA                                              01870000
         PUT    SYSPRINT,BUFFER                                         01880016
         L      8,DATALEN                                               01890000
         C      8,OUTRECLN                                              01900000
         BNH    CLOSEOUT                                                01910000
         S      8,OUTRECLN                                              01920000
         ST     8,DATALEN                                               01930000
         A      4,OUTRECLN                                              01940000
         B      CHKMSGLN                                                01950000
*                                                                       01960000
CLOSEOUT DS     0H                                                      01970004
         MVI    BUFFER,C' '                                             01980004
         MVC    BUFFER+1(119),BUFFER                                    01990004
         MVC    BUFFER(11),=C'+++ EOF +++'                              02000004
         PUT    SYSPRINT,BUFFER                                         02010016
         CLOSE  SYSPRINT                                                02020004
*                                                                       02030000
* NOW FREE THE STORAGE OBTAINED DURING THE QUERY                        02040000
*                                                                       02050000
CLEANUP  L     15,PGMADR                                                02060000
         CALL (15),(FREECMD,0,0,APILANG,RC,CC,MSG@)                     02070000
*                                                                       02080000
* NOW DELETE GIMAPI                                                     02090000
*                                                                       02100000
         DELETE EPLOC=APIPGM                                            02110000
*                                                                       02120000
* EXIT                                                                  02130000
*                                                                       02140000
EXIT     LA     15,0                                                    02150000
         L      13,4(,13)                                               02160000
         L      14,12(,13)                                              02170000
         LM     0,12,20(13)                                             02180000
         BR     14                                                      02190000
*                                                                       02200000
*                                                                       02210000
@MOVDATA MVC   BUFFER+5(0),RETDATA                                      02220000
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=120,RECFM=FB     02230000
BUFFER   DS     CL120                                                   02240000
APIPGM   DC     CL8'GIMAPI  '                                           02250000
QUERYCMD DC     CL8'QUERY   '                                           02260000
FREECMD  DC     CL8'FREE    '                                           02270000
APILANG  DC     CL3'ENU'                                                02280000
EQSIGNS  DC     CL4'===='                                               02290000
         DS     0F                                                      02300000
QUERY_PARMS@ DC AL4(QUERY_PARMS)                                        02310000
PGMADR   DC     AL4(0)                                                  02320000
CMDOUT   DC     AL4(0)                                                  02330000
MSG@     DC     AL4(0)                                                  02340000
OUTRECLN DC     F'120'                                                  02350006
RC       DS     F'0'                                                    02360000
CC       DS     F'0'                                                    02370000
SAVE     DC     18F'0'                                                  02380000
         GIMMASM                                                        02390000
RETDATA  DSECT  CL0                                                     02400000
         END                                                            02410000
