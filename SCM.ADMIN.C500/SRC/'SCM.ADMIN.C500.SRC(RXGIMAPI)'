         IRXARGTB DECLARE=NO                                            00010000
*                                                                       00020000
BALAPI   CSECT                                                          00060000
         STM    14,12,12(13)                                            00070000
         LR     12,15                                                   00080000
@PSTART  EQU    BALAPI                                                  00090000
         USING  @PSTART,12                                              00100000
         ST     13,SAVE+4                                               00110000
         LA     14,SAVE                                                 00120000
         ST     14,8(13)                                                00130000
         LR     13,14                                                   00140000
*                                                                       00150000
* END OF STANDARD LINKAGE                                               00160000
*                                                                       00170000
BALAPI   AMODE 31                                                       00180000
*                                                                       00190000
* SET UP PARAMETERS FOR QUERY                                           00200000
*                                                                       00210000
         LA    9,QUERY_PARMS                                            00211000
         XC    QUERY_PARMS,QUERY_PARMS                                  00220000
*                                                                       00221000
         L     2,16(1)                         POINT BEGINNING OF ARGS  00221100
         USING ARGTABLE_ENTRY,2                                         00221300
*                                                                       00222000
         LA    8,5                            LOOP NUMBER               00222100
PARMLOOP DS    0H                                                       00222200
         BAL   7,FILLPARM                     FILL CURRENT PARM         00222400
         LTR   15,15                          ARG LIST END ?            00222500
         BNZ   ARGDONE                        YES. PARMS ARE DONE       00222600
         BCT   8,PARMLOOP                                               00222700
         B     ARGDONE                        YES. PARMS ARE DONE       00222800
*                                                                       00223000
FILLPARM DS    0H                                                       00224000
         LA    15,4                           SET RC = 4                00225000
         L     3,ARGTABLE_ARGSTRING_PTR        *   CSI                  00230000
         CLC   0(4,3),=AL4(-1)                NO PARM ?                 00241000
         BER   7                              NO PARM. RETURN ,RC=4     00242000
         XR    15,15                          SET RC=0                  00243000
         ST    3,0(9)                                                   00244000
         LA    9,4(9)                                                   00245000
         L     3,ARGTABLE_ARGSTRING_LENGTH                              00250000
         ST    3,0(9)                                                   00260000
         LA    9,4(9)                                                   00260100
         LA    2,ARGTABLE_NEXT                POINT NEXT ENTRY          00260200
         BR    7                              RETURN FROM ROUTINE       00260300
*                                                                       00261000
ARGDONE  DS    0H              YES. PARMS ARE DONE                      00262000
*                                                                       00430000
* NOW LOAD THE API                                                      00440000
*                                                                       00450000
         LA    2,APIPGM                                                 00460000
         LOAD EPLOC=(2),LOADPT=PGMADR                                   00470000
*                                                                       00480000
* NOW DO THE QUERY                                                      00490000
*                                                                       00500000
         L     15,PGMADR                                                00510000
         CALL (15),(QUERYCMD,QUERY_PARMS@,CMDOUT,APILANG,RC,CC,MSG@)    00520000
*                                                                       00530000
*                                                                       00540000
* NOW SEE WHAT WAS RETURNED                                             00550000
*                                                                       00560000
         L     3,RC                                                     00570000
         LTR   3,3                                                      00580000
         BNZ   ERRPRINT                                                 00590000
*                                                                       00600000
* ESTABLISH ADDRESSABILITY                                              00610000
*                                                                       00620000
         OPEN (SYSPRINT,OUTPUT)                                         00630000
         L     3,CMDOUT                 * Set up addr to list of..      00640000
         USING ENTRY_LIST,3             * ..entry types                 00650000
*                                                                       00680000
* PRINT ENTRY TYPES                                               @01A  00690000
*                                                                       00700000
PRTTYP   LTR    3,3                     * If no more entry types  @01A  00710000
         BZ     CLOSEOUT                * ...stop processing      @01A  00720000
         L      4,ENTRIES               * Set up addr to first entry..  00721000
         USING CSIENTRY,4               * ..of the first type     @01A  00722000
         MVI    BUFFER,C' '             * load the entry type     @01A  00732000
         MVC    BUFFER+1(119),BUFFER    * ..in the output buffer  @01A  00733000
         MVC    BUFFER(1),EQSIGNS       *                         @01A  00734000
         MVC    BUFFER+2(11),TYPE       *                         @01A  00735000
         LA     2,ANSICHAR              *                         @01A  00736000
         PUT    SYSPRINT,(2)            * write the buffer        @01A  00737000
         B      PRTENT                  * branch to entry data    @01A  00738000
MORETYP  L      3,NEXT                  * point to next ent type  @01A  00739000
         B      PRTTYP                  * branch to next ent type @01A  00739100
*                                                                       00740000
* PRINT ENTRIES                                                         00750000
*                                                                       00760000
PRTENT   LTR    4,4                     * If no more entries            00770000
         BZ     MORETYP                 * ...get next entry type  @01C  00780000
         L      5,SUBENTRIES            * Set addr to subent list @01M  00781000
         USING SUBENTRY,5               * ...types for this entry @01M  00782000
         MVI    BUFFER,C' '             * load the entry name and       00790000
         MVC    BUFFER+1(119),BUFFER    * ...zone name in the output    00800000
         MVC    BUFFER(2),EQSIGNS       *                         @01A  00801000
         MVC    BUFFER+3(8),ENTRYNAME   * ...buffer                     00810000
         MVC    BUFFER+13(7),ZONENAME                                   00820000
         LA     2,ANSICHAR                                              00830000
         PUT    SYSPRINT,(2)            * write the buffer              00840000
         B      PRTSUB                  * branch to process subent data 00850000
MOREENT  L      4,CSINEXT               * point to next entry           00860000
         B      PRTENT                  * branch to process next entry  00870000
*                                                                       00880000
* PRINT SUBENTRIES                                                      00890000
*                                                                       00900000
PRTSUB   LTR    5,5                     * If no more subentry types     00910000
         BZ     MOREENT                 * ...branch to get next entry   00920000
         L      6,SUBENTDATA            * Set addr to the list    @01M  00921000
         USING ITEM_LIST,6              * ...of subentry values   @01M  00922000
         MVI    BUFFER,C' '             * load subent type on buffer    00930000
         MVC    BUFFER+1(119),BUFFER                                    00940000
         MVC    BUFFER(3),EQSIGNS       *                         @01A  00941000
         MVC    BUFFER+4(11),SUBTYPE                                    00950000
         PUT    SYSPRINT,(2)            * write the buffer              00960000
         B      PRTDATA                 * branch to process sub values  00970000
MORESUB  L      5,SUBNEXT               * get next subentry             00980000
         B      PRTSUB                  * branch to next subent type    00990000
*                                                                       01000000
* PRINT DATA                                                            01010000
*                                                                       01020000
MOREDATA L      6,ITMNEXT               * get next subentry value @01A  01021000
PRTDATA  LTR    6,6                     * no more values in chain @01C  01030000
         BZ     MORESUB                 * ...branch to get next subent  01040000
         L      7,DATA                  * Set addr to current     @01M  01041000
         USING RETDATA,7                * ...subentry value       @01M  01042000
         L      8,DATALEN                                               01050000
CHECKLEN C      8,OUTRECLN                                              01060000
         BNH    SETLEN                                                  01070000
         L      8,OUTRECLN                                              01080000
SETLEN   LA    15,1                                                     01090000
         SLR    8,15                                                    01100000
         MVI   BUFFER,C' '                                              01110000
         MVC   BUFFER+1(119),BUFFER                                     01120000
         MVC    BUFFER(4),EQSIGNS       *                         @01A  01121000
         EX     8,@MOVDATA                                              01130000
         LA   2,ANSICHAR                                                01140000
         PUT  SYSPRINT,(2)              * write the buffer              01150000
         L      8,DATALEN               * check if value too long       01160000
         C      8,OUTRECLN              * ...for buffer.  If not,       01170000
         BNH    MOREDATA                * ...branch get next val  @01C  01180000
         S      8,OUTRECLN              * If value too long,            01190000
         ST     8,DATALEN               * ...determine start and length 01200000
         A      7,OUTRECLN              * ...of the remainder, and      01210000
         B      CHECKLEN                * ...branch to print rest of it 01220000
*                                                                       01230000
* PRINT ERROR MESSAGES                                                  01240000
*                                                                       01250000
ERRPRINT OPEN   (SYSPRINT,OUTPUT)                                       01260000
         L      6,MSG@                                                  01270000
         L      7,DATA                                                  01280000
         L      8,DATALEN                                               01290000
CHKMSGLN C      8,OUTRECLN                                              01300000
         BNH    SETMSGLN                                                01310000
         L      8,OUTRECLN                                              01320000
SETMSGLN LA     15,1                                                    01330000
         SLR    8,15                                                    01340000
         MVI    BUFFER,C' '                                             01350000
         MVC    BUFFER+1(119),BUFFER                                    01360000
         MVC    BUFFER(4),=C'ER: '      *                         @01A  01361000
         EX     8,@MOVDATA                                              01370000
         LA     2,ANSICHAR                                              01380000
         PUT    SYSPRINT,(2)                                            01390000
         L      8,DATALEN                                               01400000
         C      8,OUTRECLN                                              01410000
         BNH    CLOSEOUT                                                01420000
         S      8,OUTRECLN                                              01430000
         ST     8,DATALEN                                               01440000
         A      4,OUTRECLN                                              01450000
         B      CHKMSGLN                                                01460000
*                                                                       01470000
CLOSEOUT CLOSE  SYSPRINT                                                01480000
*                                                                       01490000
* NOW FREE THE STORAGE OBTAINED DURING THE QUERY                        01500000
*                                                                       01510000
CLEANUP  L     15,PGMADR                                                01520000
         CALL (15),(FREECMD,0,0,APILANG,RC,CC,MSG@)                     01530001
*                                                                       01540000
* NOW DELETE GIMAPI                                                     01550000
*                                                                       01560000
         DELETE EPLOC=APIPGM                                            01570000
*                                                                       01580000
* EXIT                                                                  01590000
*                                                                       01600000
EXIT     LA     15,0                                                    01610000
         L      13,4(,13)                                               01620000
         L      14,12(,13)                                              01630000
         LM     0,12,20(13)                                             01640000
         BR     14                                                      01650000
*                                                                       01660000
*                                                                       01670000
@MOVDATA MVC   BUFFER+5(0),RETDATA                                      01680000
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=120,RECFM=FB     01690000
ANSICHAR DC     0C                                                      01700000
BUFFER   DS     CL120                                                   01710000
APIPGM   DC     CL8'GIMAPI  '                                           01770000
QUERYCMD DC     CL8'QUERY   '                                           01780000
FREECMD  DC     CL8'FREE    '                                           01790000
APILANG  DC     CL3'ENU'                                                01800000
EQSIGNS  DC     CL4'===='                                               01801000
         DS     0F                                                      01810000
QUERY_PARMS@ DC AL4(QUERY_PARMS)                                        01820000
PGMADR   DC     AL4(0)                                                  01830000
CMDOUT   DC     AL4(0)                                                  01840000
MSG@     DC     AL4(0)                                                  01850000
OUTRECLN DC     F'120'                                                  01860000
RC       DS     F'0'                                                    01870000
CC       DS     F'0'                                                    01880000
SAVE     DC     18F'0'                                                  01890000
         GIMMASM                                                        01900000
RETDATA  DSECT  CL0                                                     01910000
         END                                                            01920000
