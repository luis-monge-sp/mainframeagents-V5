/* REXX */                                                              00010000
interpret "retcode = INJ"||"STUB('"arg(1)"')" /*invisible to INJECTOR*/ 00020000
if rexxname <> '?'                                                      00030000
   then                                                                 00040000
     do   /* submitted by TSO */                                        00050000
     ZISPFRC = retcode                                                  00060000
     "ISPEXEC VPUT (ZISPFRC)"                                           00070000
     exit retcode                                                       00080000
     end                                                                00090000
   else                                                                 00100000
     do   /* submitted by injector */                                   00110000
     return retcode                                                     00120000
     end                                                                00130000
                                                                        00140000
/* ================================================================ */  00150000
/*          INJECTOR STUB                                           */  00160000
/* ================================================================ */  00170000
INJSTUB : procedure                                                     00171000
parse source . . rexxname  . rexxlib  .                                 00172000
rcode = PARM_VALIDATION(arg(1))                                         00173000
if word(rcode,1) <> 0                                                   00174000
  then                                                                  00175000
    return 8                                                            00176000
  else                                                                  00177000
    do                                                                  00178000
    msg_level = word(rcode,2)                                           00179000
    return INJREXX(rexxname rexxlib msg_level arg(1))                   00180000
    end                                                                 00180100
/* ================================================================ */  00180200
/*          PARAMETER VALIDATION                                    */  00180300
/* ================================================================ */  00180400
/* == User may change parsing of parameter of his application.   == */  00180500
/* == But MSG_LEVEL at return should be in interval <1,10>       == */  00180600
/* ================================================================ */  00180700
PARM_VALIDATION : procedure expose timeout percent system_response      00180800
parse arg timeout percent system_response msg_level .                   00180900
upper msg_level                                                         00181000
if datatype(msg_level) <> "NUM" & msg_level <> "ALL" & msg_level <> ''  00182000
  then                                                                  00183000
    do                                                                  00184000
    say "MESSAGE LEVEL should be NULL, ALL or in interval 1-10"         00185000
    say "please correct the parameter and resubmit"                     00186000
    return 8                                                            00187000
    end                                                                 00188000
if msg_level = ''                                                       00189000
  then                                                                  00190000
    msg_level=1                                                         00190100
if msg_level = "ALL"                                                    00190200
  then                                                                  00190300
    msg_level=10                                                        00190400
return 0 msg_level                                                      00190500
                                                                        00190600
/* ================================================================ */  00190700
/*          MAIN PROCEDURE                                          */  00190800
/* ================================================================ */  00190900
SUMRX_MAIN : procedure expose msg_level timeout percent system_response,00191000
                              HEAP.                                     00191100
++INC SETWCHVV,ENV                                                      00191200
token_num = 0                                                           00191300
                                                                        00191400
MSG("SPOOL WATCHDOG started ,period(sec)          =" timeout)           00191500
MSG("                        spool threshold(%)   =" percent)           00191600
MSG("                        system response(sec) =" system_response)   00191700
MSG("                               message level =" msg_level)         00191800
                                                                        00191900
                                                                        00192000
Address TSO                                                             00193000
"CONSPROF SOLDISPLAY(NO) SOLNUM(400)"                                   00194000
"CONSOLE ACTIVATE NAME(CONS0001)"                                       00195000
                                                                        00196000
do forever     /* loop to control sppol percentage */                   00197000
token_num = token_num + 1                                               00198000
if token_num > 9999                                                     00199000
  then                                                                  00200000
   token_num = 1                                                        00210000
                                                                        00220000
token = "SPMF" || right(token_num,4,'0')                                00230000
                                                                        00240000
cmd = "$DS(*ACS,*ACD,*AONI),SPL=(%>"percent")"                          00250000
MSG(".....Command" cmd "will be issued via CONSOLE")                    00260000
Address TSO                                                             00270000
"CONSOLE SYSCMD("cmd") CART("token")"                                   00280000
MSG(".....Call GETALLMSGS() to merge all GETMSG chunks")                00290000
retcode = GETALLMSGS()                                                  00300000
                                                                        00310000
MSG(".....Extracting candidates JOBS with their SPOOL percentages")     00320000
call CREATE_CANDIDATES_ARRAY                                            00330000
                                                                        00340000
/* loop over all candidates array */                                    00350000
if stmjob.0 > 0                                                         00360000
  then                                                                  00370000
    do                                                                  00380000
      /* loop over all candidates and stop them */                      00390000
      do i = 1 to stmjob.0                                              00400000
      parse var stmjob.i jobname job_percent  .                         00410000
      l = length(jobname)                                               00420000
      postfix = substr(jobname,l-2,3)                                   00430000
      if postfix = "ONI"                                                00440000
        then                                                            00450000
          postfix = "AONI"                                              00460000
      parse var jobname prefix (postfix) .                              00470000
      cmd = "P" prefix || "GATE"                                        00480000
      MSG("..Command '"cmd"' will be issued via CONSOLE")               00490000
      Address TSO                                                       00500000
      "CONSOLE SYSCMD("cmd")"                                           00510000
      end                                                               00520000
    /* let system stop all candidates and then clear queues */          00530000
    call SLEEP(system_response)                                         00540000
    cmd = "$P O JOBQ,ALL"                                               00550000
    MSG("..Command '"cmd"' will be issued via CONSOLE")                 00560000
    "CONSOLE SYSCMD("cmd")"                                             00570000
    cmd = "$C O JOBQ,ALL"                                               00580000
    MSG("..Command '" cmd"' will be issued via CONSOLE")                00590000
    "CONSOLE SYSCMD("cmd")"                                             00600000
    end                                                                 00610000
                                                                        00620000
call SLEEP(timeout)                                                     00630000
end     /* loop to control sppol percentage */                          00640000
return 0                                                                00650000
                                                                        00660000
/***********************************************************/           00670000
/* this crestes array of jobs candidates to be stopped.    */           00680000
/* JESOUT. contains the quesy jes2 output                  */           00690000
/* STMJOB. is created stem to have <jobname-percent> pairs */           00700000
/***********************************************************/           00710000
CREATE_CANDIDATES_ARRAY : procedure expose jesout. stmjob.              00720000
                                                                        00730000
 MSG(".....Returned" jesout.0 "lines")                                  00740000
 call TRACE_STEM  "JESOUT"                                              00750000
                                                                        00760000
 j = 0                                                                  00770000
 stmjob.0 = 0                                                           00780000
 if jesout.0  > 0                                                       00790000
  then                                                                  00800000
    do  /* Create STMJOB */                                             00810000
     do i = 1 to jesout.0   /* loop over jes output */                  00820000
     k = i + 1                                                          00830000
     if wordindex(jesout.i,2) = 11          &  ,                        00840000
        word(jesout.k,1) = word(jesout.i,1) &  ,                        00850000
        word(jesout.k,2) = word(jesout.i,2)                             00860000
         then                                                           00870000
           do   /* new item */                                          00880000
            job = ''                                                    00890000
            k = i                                                       00900000
            i = i + 1                                                   00910000
            temp =  word(jesout.i,2)                                    00920000
            parse var temp "JOB(" job ")" .                             00930000
            if job = ''                                                 00940000
             then                                                       00950000
               iterate                                                  00960000
             do i = k+1 to jesout.0 /* loop within item related lines */00970000
             l = i + 1                                                  00980000
             if wordindex(jesout.l,2) = 11          &  ,                00990000
                word(jesout.l,2) <> job                                 01000000
                 then /* unexpectedly found new item before PERCENT= */ 01010000
                   do                                                   01020000
                   say 'Error : can not collect data for job' job       01030000
                   job = ''                                             01040000
                   i = l -1                                             01050000
                   leave                                                01060000
                   end                                                  01070000
             if pos("PERCENT=",jesout.l) > 0                            01080000
              then                                                      01090000
                do /* found PERCENT= */                                 01100000
                parse var jesout.l "PERCENT=" job_percent ")" .         01110000
                j = j + 1                                               01120000
                stmjob.j = job job_percent                              01130000
                stmjob.0 = j                                            01140000
                leave                                                   01150000
                end                                                     01160000
             end         /* loop within item related lines */           01170000
           end /* new item */                                           01180000
     end   /* loop over jes output */                                   01190000
    MSG(".....Created STMJOB array,#:"stmjob.0)                         01200000
    call TRACE_STEM  "STMJOB"                                           01210000
    end   /* Create STMJOB */                                           01220000
  else                                                                  01230000
    do                                                                  01240000
    MSG(".....STMJOB will not be created")                              01250000
    end                                                                 01260000
 return                                                                 01270000
                                                                        01280000
/*********************************************************/             01290000
/* this call GETMSG service recursively and builds       */             01300000
/* JESOUT. stem.  Such tecnique is used due to a bug     */             01310000
/* of JES2 when workin with the CONSOLE interface        */             01320000
/*********************************************************/             01330000
GETALLMSGS : procedure expose token jesout.                             01340000
retcode = getmsg('TEMP.','sol',token,,3)                                01350000
if retcode <> 0                                                         01360000
  then                                                                  01370000
    return 0                                                            01380000
                                                                        01390000
/* 1st time , when not recursive call,  arg(1) = '' */                  01400000
if arg(1) = ''                                                          01410000
 then                                                                   01420000
   jesout.0 = 0                                                         01430000
                                                                        01440000
do i = 1 to temp.0                                                      01450000
k = jesout.0 + i                                                        01460000
jesout.k = temp.i                                                       01470000
end                                                                     01480000
jesout.0 = k                                                            01490000
return GETALLMSGS("N")                                                  01500000
                                                                        01510000
                                                                        01520000
++INC HELPERS                                                           01530000
