/* REXX */                                                              00010000
                                                                        00020000
retcode = INJSTUFF(arg(1))                                              00030000
if rexxname <> '?'                                                      00040000
   then                                                                 00050000
     do   /* submitted by TSO */                                        00060000
     ZISPFRC = retcode                                                  00070000
     "ISPEXEC VPUT (ZISPFRC)"                                           00080000
     exit                                                               00090000
     end                                                                00100000
   else                                                                 00110000
     do   /* submitted by injector */                                   00120000
     if retcode <> 0                                                    00130000
       then                                                             00140000
         return retcode                                                 00150000
     end                                                                00160000
                                                                        00170000
++INC SETENVV                                                           00180000
token_num = 0                                                           00190000
                                                                        00200000
MSG("SPOOL WATCHDOG started ,period(sec)          =" timeout)           00210000
MSG("                        spool threshold(%)   =" percent)           00220000
MSG("                        system response(sec) =" system_response)   00230000
MSG("                               message level =" msg_level)         00240000
                                                                        00250000
                                                                        00260000
Address TSO                                                             00270000
"CONSPROF SOLDISPLAY(NO) SOLNUM(400)"                                   00280000
"CONSOLE ACTIVATE NAME(CONS0001)"                                       00290000
                                                                        00300000
do forever     /* loop to control sppol percentage */                   00310000
token_num = token_num + 1                                               00320000
if token_num > 9999                                                     00330000
  then                                                                  00340000
   token_num = 1                                                        00350000
                                                                        00360000
token = "SPMF" || right(token_num,4,'0')                                00370000
                                                                        00380000
cmd = "$DS(*ACS,*ACD,*AONI),SPL=(%>"percent")"                          00390000
MSG(".....Command" cmd "will be issued via CONSOLE")                    00400000
Address TSO                                                             00410000
"CONSOLE SYSCMD("cmd") CART("token")"                                   00420000
MSG(".....Call GETALLMSGS() to merge all GETMSG chunks")                00430000
retcode = GETALLMSGS()                                                  00440000
                                                                        00450000
MSG(".....Extracting candidates JOBS with their SPOOL percentages")     00460000
call CREATE_CANDIDATES_ARRAY                                            00470000
                                                                        00480000
/* loop over all candidates array */                                    00490000
if stmjob.0 > 0                                                         00500000
  then                                                                  00510000
    do                                                                  00520000
      /* loop over all candidates and stop them */                      00530000
      do i = 1 to stmjob.0                                              00540000
      parse var stmjob.i jobname job_percent  .                         00550000
      l = length(jobname)                                               00560000
      postfix = substr(jobname,l-2,3)                                   00570000
      if postfix = "ONI"                                                00580000
        then                                                            00590000
          postfix = "AONI"                                              00600000
      parse var jobname prefix (postfix) .                              00610000
      cmd = "P" prefix || "GATE"                                        00620000
      MSG("..Command '"cmd"' will be issued via CONSOLE")               00630000
      Address TSO                                                       00640000
      "CONSOLE SYSCMD("cmd")"                                           00650000
      end                                                               00660000
    /* let system stop all candidates and then clear queues */          00670000
    call SLEEP(system_response)                                         00680000
    cmd = "$P O JOBQ,ALL"                                               00690000
    MSG("..Command '"cmd"' will be issued via CONSOLE")                 00700000
    "CONSOLE SYSCMD("cmd")"                                             00710000
    cmd = "$C O JOBQ,ALL"                                               00720000
    MSG("..Command '" cmd"' will be issued via CONSOLE")                00730000
    "CONSOLE SYSCMD("cmd")"                                             00740000
    end                                                                 00750000
                                                                        00760000
call SLEEP(timeout)                                                     00770000
end     /* loop to control sppol percentage */                          00780000
exit                                                                    00790000
                                                                        00800000
/***********************************************************/           00810000
/* this crestes array of jobs candidates to be stopped.    */           00820000
/* JESOUT. contains the quesy jes2 output                  */           00830000
/* STMJOB. is created stem to have <jobname-percent> pairs */           00840000
/***********************************************************/           00850000
CREATE_CANDIDATES_ARRAY : procedure expose jesout. stmjob.              00860000
                                                                        00870000
 MSG(".....Returned" jesout.0 "lines")                                  00880000
 call TRACE_STEM  "JESOUT"                                              00890000
                                                                        00900000
 j = 0                                                                  00910000
 stmjob.0 = 0                                                           00920000
 if jesout.0  > 0                                                       00930000
  then                                                                  00940000
    do  /* Create STMJOB */                                             00950000
     do i = 1 to jesout.0   /* loop over jes output */                  00960000
     k = i + 1                                                          00970000
     if wordindex(jesout.i,2) = 11          &  ,                        00980000
        word(jesout.k,1) = word(jesout.i,1) &  ,                        00990000
        word(jesout.k,2) = word(jesout.i,2)                             01000000
         then                                                           01010000
           do   /* new item */                                          01020000
            job = ''                                                    01030000
            k = i                                                       01040000
            i = i + 1                                                   01050000
            temp =  word(jesout.i,2)                                    01060000
            parse var temp "JOB(" job ")" .                             01070000
            if job = ''                                                 01080000
             then                                                       01090000
               iterate                                                  01100000
             do i = k+1 to jesout.0 /* loop within item related lines */01110000
             l = i + 1                                                  01120000
             if wordindex(jesout.l,2) = 11          &  ,                01130000
                word(jesout.l,2) <> job                                 01140000
                 then /* unexpectedly found new item before PERCENT= */ 01150000
                   do                                                   01160000
                   say 'Error : can not collect data for job' job       01170000
                   job = ''                                             01180000
                   i = l -1                                             01190000
                   leave                                                01200000
                   end                                                  01210000
             if pos("PERCENT=",jesout.l) > 0                            01220000
              then                                                      01230000
                do /* found PERCENT= */                                 01240000
                parse var jesout.l "PERCENT=" job_percent ")" .         01250000
                j = j + 1                                               01260000
                stmjob.j = job job_percent                              01270000
                stmjob.0 = j                                            01280000
                leave                                                   01290000
                end                                                     01300000
             end         /* loop within item related lines */           01310000
           end /* new item */                                           01320000
     end   /* loop over jes output */                                   01330000
    MSG(".....Created STMJOB array,#:"stmjob.0)                         01340000
    call TRACE_STEM  "STMJOB"                                           01350000
    end   /* Create STMJOB */                                           01360000
  else                                                                  01370000
    do                                                                  01380000
    MSG(".....STMJOB will not be created")                              01390000
    end                                                                 01400000
 return                                                                 01410000
                                                                        01420000
/*********************************************************/             01430000
/* this call GETMSG service recursively and builds       */             01440000
/* JESOUT. stem.  Such tecnique is used due to a bug     */             01450000
/* of JES2 when workin with the CONSOLE interface        */             01460000
/*********************************************************/             01470000
GETALLMSGS : procedure expose token jesout.                             01480000
retcode = getmsg('TEMP.','sol',token,,3)                                01490000
if retcode <> 0                                                         01500000
  then                                                                  01510000
    return 0                                                            01520000
                                                                        01530000
/* 1st time , when not recursive call,  arg(1) = '' */                  01540000
if arg(1) = ''                                                          01550000
 then                                                                   01560000
   jesout.0 = 0                                                         01570000
                                                                        01580000
do i = 1 to temp.0                                                      01590000
k = jesout.0 + i                                                        01600000
jesout.k = temp.i                                                       01610000
end                                                                     01620000
jesout.0 = k                                                            01630000
return GETALLMSGS("N")                                                  01640000
                                                                        01650000
/* ================================================================ */  01660000
/*          INJECTION routine                                       */  01670000
/* ================================================================ */  01680000
INJSTUFF : procedure expose how_parm msg_level rexxname           ,     01690000
                     timeout percent system_response                    01700000
parse source . . rexxname  . rexxlib  . how_parm .                      01710000
                                                                        01720000
exec_parm = arg(1)                                                      01730000
upper exec_parm                                                         01740000
parse var exec_parm timeout percent system_response msg_level .         01750000
pipecmd = "pipe"                                                        01760000
                                                                        01770000
if msg_level = ''                                                       01780000
  then                                                                  01790000
    msg_level=3                                                         01800000
if msg_level = "ALL"                                                    01810000
  then                                                                  01820000
    msg_level=10                                                        01830000
if datatype(msg_level) <> "NUM"                                         01840000
  then                                                                  01850000
    do                                                                  01860000
    say "MESSAGE LEVEL should be null, ALL or in interval 1-10"         01870000
    say "please correct the parameter and resubmit"                     01880000
    exit                                                                01890000
    end                                                                 01900000
                                                                        01910000
rcode=0                                                                 01920000
                                                                        01930000
rcode=INJREXX(rexxname rexxlib msg_level exec_parm)                     01940000
                                                                        01950000
return rcode                                                            01960000
                                                                        01970000
++INC INJHLPR                                                           01980000
++INC CFHELPER                                                          01990000
++INC UNIXHLPR                                                          02000000
