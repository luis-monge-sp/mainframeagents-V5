/********************************************************/              00010054
/* INJECTED ROUTINES                                    */              00020054
/********************************************************/              00030054
/* pipemode routine                                     */              00040054
/********************************************************/              00050054
PIPEMODE : procedure                                                    00060054
PIPEMODE_PIPE_INJECTED=INJDATA                                          00070054
return PIPEMODE_PIPE_INJECTED                                           00080054
/********************************************************/              00090054
/* message routine                                      */              00100054
/* called with ether one or two + parameters:           */              00110071
/* One : the paramter is message data from appl         */              00120054
/* Two : 1st parameter indicates FW called the routine  */              00130071
/*     :  - H, heap                                     */              00140054
/*     :  - T, TCP/IP                                   */              00150054
/*     :  - D, 3270                                     */              00160054
/*     :  - L, LIB                                      */              00170054
/*     :  - F, File System                              */              00180054
/*     :  - C, Common Layer of Framework                */              00190054
/*     : 2nd parameter is message data/index of FW      */              00200071
/*     : + , additional parameteres for substitution    */              00201071
/********************************************************/              00210054
MSG  : procedure expose HEAP.                                           00220054
APPLPFX  = "SPIX"                                                       00230058
FWPFX    = "SMRX"                                                       00240058
/* only NEW fashion messages need HEAP */                               00250058
if datatype(arg(1))  = "NUM"                  | ,                       00260058
   (arg() > 1  &  datatype(arg(2))  = "NUM")                            00270057
   then                                                                 00280057
    do      /* NEW FASHION MESSAGE */                                   00290057
    lock_name = "START_MSGS"                                            00300057
    /* This  will filter messages until HEAP is fully ready. */         00310057
    /* If MSG_RDY is not STA or STO (no MSG arrays yet       */         00320057
    /*  built) then entering                                 */         00330057
    /* If HEAP is not allocated we call HEAP API "Set var    */         00340057
    /*  MSG_RDY to STA" to cause HEAP allocation             */         00350057
    /* If HEAP is allocated we call HEAP API "Set var        */         00360057
    /*  MSG_RDY to STA" external to prevent HEAP messaging   */         00370057
    /* Setting MSG_RDY to STA by either abov method will     */         00380057
    /*  reject any incoming message !!!                      */         00390057
    /* During HEAP allocation a HEAP message may come (no    */         00400057
    /*  main stream) and it's filtered if HEAP is not ready  */         00410057
    /* Main stream after setting MSG_RDY to STA - at this    */         00420057
    /*  time HEAP ia already READY - loads message arrays    */         00430057
    /* Afte the message arrays loeded we call "Set var       */         00440057
    /*  MSG_RDY to FIN" to accept incoming nessages          */         00450057
    /*                                                       */         00460057
                                                                        00470057
    /* if MSGARRAY & FRMARRAY are not started to load - load them */    00480057
                                                                        00490057
    msg_ready_value =  GET_VARIABLE_VALUE_EXT("MSG_RDY")                00500057
                                                                        00510057
    if msg_ready_value  <> "STA"  & ,                                   00520057
       msg_ready_value  <> "FIN"                                        00530057
      then                                                              00540057
       do             /* Load MSGARRAY & FRMARRAY */                    00550057
        /* reject if it's locked */                                     00560057
        if IS_HEAP_LOCK_SET_EXT(lock_name) = 1                          00570057
          then                                                          00580057
            return 0                                                    00590057
        /* set lock */                                                  00600057
        call SET_HEAP_LOCK_EXT(lock_name)                               00610057
                                                                        00620057
        if IS_HEAP_ALLOC_EXT() <> 0    /* heap not allocated ? */       00630057
         then                                                           00640057
          do                    /* set MSG_RDY will allocate HEAP */    00650057
          retcode = CLSMNGR("set","variable","MSG_RDY","STA")           00660057
          if word(retcode,1) <> 0                                       00670057
           then                                                         00680057
             do                                                         00690057
             say "Set MSG_RDY API to STA failed. Terminating"           00700057
             exit 8                                                     00710057
             end                                                        00720057
          end                   /* set MSG_RDY will allocate HEAP */    00730057
         else                                                           00740057
          do                    /* set MSG_RDY external */              00750057
           if SET_VARIABLE_VALUE_EXT("MSG_RDY","STA") <> 0              00760057
            then                                                        00770057
              do                                                        00780057
               say "Set MSG_RDY EXT API to STA failed. Terminating"     00790057
               exit 8                                                   00800057
               end                                                      00810057
          end                   /* set MSG_RDY external */              00820057
                                                                        00830057
        /* unset lock */                                                00840057
        call UNSET_HEAP_LOCK_EXT(lock_name)                             00850057
                                                                        00860057
        call FRMARRAY       /* prepare stem of FW messages   */         00870057
        if FILL_MSG_STORAGE("FW",FWPFX) <> 0                            00880057
          then                                                          00890057
            exit 8                                                      00900057
        call MSGARRAY       /* prepare stem of appl messages */         00910057
        if FILL_MSG_STORAGE("APPL",APPLPFX) <> 0                        00920057
          then                                                          00930057
            exit 8                                                      00940057
                                                                        00950057
        CALL SAY_OK  "Message storage has been successfully created"    00960064
                                                                        00970057
        /* set MSGARRAY & FRMARRAY  loaded */                           00980057
        if  SET_VARIABLE_VALUE_EXT("MSG_RDY","FIN") <> 0                00990057
         then                                                           01000057
           do                                                           01010057
            SAY "HEAP failure at setting MSG_RDY to FIN"                01020057
            exit 8                                                      01030057
            end                                                         01040057
       end            /* Load MSGARRAY & FRMARRAY */                    01050057
    end     /* NEW FASHION MESSAGE */                                   01060058
                                                                        01070058
 /* For both OLD and NEW fashions :                          */         01080068
 /* - When NO HEAP it will not filter OLD FASHION MSG        */         01090068
 /* - When HEAP it locks NEW FASHION messages until          */         01100068
 /*   MSG ARRAY LOADER completed                             */         01101068
 msg_ready_value =  GET_VARIABLE_VALUE_EXT("MSG_RDY")                   01110058
 /* filter NEW messages until MSGARRAY & FRMARARY load finished */      01120068
 if (symbol('HEAP.0') = "VAR" & msg_ready_value <> "FIN")           & , 01130070
    (datatype(arg(1)) = "NUM" | (arg() > 1 & datatype(arg(2)) = "NUM")) 01131069
   then                                                                 01140059
     return 0                                                           01150059
                                                                        01160058
                                                                        01170054
/* possible message types : OLD & NEW                               */  01180054
/* OLD : message level as periods with or without FW name byte      */  01190054
/* NEW : 1st byte is message level                                  */  01200054
/*     : 2nd byte is message seveity : I/W/E                        */  01210054
/*     : 3rd byte is th action : T- terminate                       */  01220054
/*     : data since 5th byte. With parms in format $$P<i> to        */  01230054
/*       substitue from function arguments                          */  01240054
                                                                        01250054
msg_id = 0                                                              01260054
msg_type = 'I'                                                          01270054
msg_data_explain = ''                                                   01280054
if arg() = 1                                                            01290054
  then  /* old or new fashion message with no parm */                   01300060
    do                                                                  01310054
    args = 0                                                            01320054
    FW = ''                                                             01330054
    fw_eye_catcher = ' '                                                01340054
    PFX = APPLPFX                                                       01350054
    if datatype(arg(1))  = "NUM"                                        01360054
     then                                                               01370054
       do  /* new fasion messages kept in HEAP */                       01380054
       msg_data = GET_MSG_FROM_HEAP_ELEMENT(FW,arg(1))                  01390054
       fashion    = "NEW"                                               01400067
       msg_id     = arg(1)                                              01410067
       msg_type   = substr(msg_data,2,1)                                01420067
       msg_action = substr(msg_data,3,1)                                01421067
       warning = CHECK_PARMS_SIGNATURE(msg_id,msg_data,args)            01430054
       if warning <> 0                                                  01440054
          then                                                          01450054
            call PRINT_ARGS_WARNING warning                             01460054
       if msg_type = 'W' | msg_type = 'E'                               01470061
        then                                                            01480061
         msg_data_explain = GET_MSG_EXPLAIN(FW,msg_id,msg_data,args)    01490061
       end                                                              01500054
     else                                                               01510054
       do                                                               01520054
       msg_data = arg(1)                                                01530054
       fashion = "OLD"                                                  01540054
       msg_action = ''                                                  01541067
       end                                                              01550054
    end                                                                 01560054
  else  /* a number of arguments */                                     01570054
  if datatype(arg(1))  = "NUM"                                          01580054
   then                                                                 01590054
     do  /* new fashion messages kept in HEAP, no prefix */             01600054
     PFX = APPLPFX                                                      01610054
     FW = ''                                                            01620054
     fw_eye_catcher = ' '                                               01630054
     msg_data = GET_MSG_FROM_HEAP_ELEMENT(FW,arg(1))                    01640054
     fashion    = "NEW"                                                 01650067
     args       = arg() - 1                                             01660067
     msg_id     = arg(1)                                                01670067
     msg_type   = substr(msg_data,2,1)                                  01680067
     msg_action = substr(msg_data,3,1)                                  01681067
     warning = CHECK_PARMS_SIGNATURE(msg_id,msg_data,args)              01690054
     if warning <> 0                                                    01700054
       then                                                             01710054
         call PRINT_ARGS_WARNING warning                                01720054
       else                                                             01730054
        do                                                              01740054
        msg_data=INJECT_VALS(msg_data,arg(2),arg(3),arg(4),arg(5))      01750054
        if msg_type = 'W' | msg_type = 'E'                              01760054
         then                                                           01770054
          msg_data_explain = GET_MSG_EXPLAIN(FW,msg_id,msg_data,args,  ,01780054
                                        arg(2),arg(3),arg(4),arg(5))    01790054
        end                                                             01800054
     end                                                                01810054
   else                                                                 01820054
     do  /* old & new fashion messages , with FW prefix */              01830054
     FW = arg(1)                                                        01840054
     if FW <> "C"                                                       01850054
       then                                                             01860054
          do                                                            01870054
          fw_eye_catcher = " <" || FW || "> "                           01880054
          end                                                           01890054
       else                                                             01900054
          do                                                            01910054
          fw_eye_catcher = ' '                                          01920054
          end                                                           01930054
     PFX = FWPFX                                                        01940054
     if datatype(arg(2))  = "NUM"                                       01950054
      then /* new fashion type  message */                              01960054
        do                                                              01970054
        msg_data = GET_MSG_FROM_HEAP_ELEMENT(FW,arg(2))                 01980054
        fashion    = "NEW"                                              01990067
        args       = arg() - 2                                          02000067
        msg_id     = arg(2)                                             02010067
        msg_type   = substr(msg_data,2,1)                               02020067
        msg_action = substr(msg_data,3,1)                               02021067
        warning = CHECK_PARMS_SIGNATURE(msg_id,msg_data,args)           02030054
        if warning <> 0                                                 02040054
         then                                                           02050054
          call PRINT_ARGS_WARNING warning                               02060054
         else                                                           02070054
          do                                                            02080054
          msg_data=INJECT_VALS(msg_data,arg(3),arg(4),arg(5),arg(6))    02090054
          if msg_type = 'W' | msg_type = 'E'                            02100054
           then                                                         02110054
             msg_data_explain = GET_MSG_EXPLAIN(FW,msg_id,msg_data, ,   02120054
                                args,arg(3),arg(4),arg(5),arg(6))       02130054
          end                                                           02140054
        end                                                             02150054
      else /* old fashion type  message */                              02160054
        do                                                              02170054
        msg_data = arg(2)                                               02180054
        fashion = "OLD"                                                 02190054
        args = arg() - 1                                                02200054
        msg_action = ''                                                 02201067
        end                                                             02210054
     end                                                                02220054
                                                                        02230054
MSG_MESSAGES_TRACE_SESSION=''                                           02240054
 if  ESTIMATE_PUT_ELIGIBILITY(fashion,msg_data) = 1                     02250055
     then                                                               02260054
       do                                                               02270054
       TIMESTAMP = DATE('E') substr(TIME('L'),1,12)                     02280054
       message = TIMESTAMP                                       || ,   02290054
                 fw_eye_catcher                                  || ,   02300054
                 PFX || right(msg_id,4,0) || msg_type  || ' '    || ,   02310054
                 MSG_MESSAGES_TRACE_SESSION                      || ,   02320054
                 strip(MSG_2_PRT(fashion,msg_data),'L','.')             02330054
                                                                        02340054
       call PUT_MSG_TO_LOG  message , msg_action                        02350067
       if msg_data_explain <> ''                                        02360054
        then                                                            02370054
         do                                                             02380054
         message = TIMESTAMP                                       || , 02390054
                   fw_eye_catcher                                  || , 02400054
                   PFX || right(msg_id_ex,4,0) || msg_type || ' '  || , 02410054
                   MSG_MESSAGES_TRACE_SESSION                      || , 02420054
                   strip(MSG_2_PRT(fashion,msg_data_explain),'L','.')   02430054
         call PUT_MSG_TO_LOG  message , "EXPL"                          02440054
         end                                                            02450054
       end                                                              02460054
                                                                        02470055
 /* stop application if that's required by the message prefix */        02480055
 if substr(msg_data,2,2) = "ET"  & fashion = "NEW" & ,                  02490062
    datatype(substr(msg_data,1,1)) = "NUM"                              02500062
   then                                                                 02510055
     do                                                                 02520063
     /* do HEAP serialization */                                        02530063
     rcode = POST_MAIN(8)                                               02540063
     exit 8                                                             02550055
     end                                                                02560063
 return 0                                                               02570054
                                                                        02580054
/*****************************************************************/     02590067
/* Put message to the appropriate log                            */     02600067
/* PARM : message                                                */     02610067
/*      : message type : action,"A" means print to appl SYSTSPRT */     02620067
/*                     : EXPL - exlain message print to SYSEXPRT */     02621067
/*****************************************************************/     02630067
PUT_MSG_TO_LOG : procedure expose FW                                    02640054
messages.0 = 1                                                          02650054
messages.1 = arg(1)                                                     02660054
MSG_MESSAGES_TRACE_MODE=INJMODE                                         02670054
 /* if ONLINE : it will include FW 3270 + APPL messages */              02680054
 if MSG_MESSAGES_TRACE_MODE="ONLINE"                                    02690054
   then                                                                 02700054
     "EXECIO 1 DISKW TRM3270 ( stem messages.) "                        02710054
   else                                                                 02720054
   /* in TSO FG all msgs except 3270                      => SYSTSPRT */02730067
   /* in TSO BG : application msgs (fw=''  & arg(2)<>EXPL => SYSTSPRT */02740067
   /*           : framework   msgs (fw<>'' & arg(2)=A     => SYSTSPRT */02750067
   /*           : framework   msgs (fw<>'' & arg(2)=''    => SYSFWPRT */02751067
   /*           : explanation msgs (arg(2)='EXPL')        => SYSEXPRT */02760067
     if sysvar('SYSENV')  = "FORE"                                      02770054
       then                                                             02780054
         say arg(1)                                                     02790054
       else                                                             02800054
         IF FW = '' & arg(2) <> 'EXPL'                                  02810067
           then                                                         02820054
             say arg(1)                                                 02830067
           else                                                         02840054
             IF FW <> '' & arg(2) = 'A'                                 02841067
               then                                                     02842067
                 say arg(1)                                             02843067
               else                                                     02844067
                 if fw <> '' & arg(2) = ''                              02850067
                  then                                                  02860067
                    "EXECIO 1 DISKW SYSFWPRT ( stem messages.) "        02870067
                  else                                                  02880067
                    if arg(2) = "EXPL"                                  02890067
                     then                                               02900067
                       "EXECIO 1 DISKW SYSEXPRT ( stem messages.) "     02910067
 return                                                                 02920054
                                                                        02930054
/*                                                             */       02940054
/* returns 1 if the current message should be printed to log   */       02950054
/*                                                             */       02960054
ESTIMATE_PUT_ELIGIBILITY : procedure                                    02970054
fashion  = arg(1)                                                       02980054
msg_data = arg(2)                                                       02990054
MSG_MESSAGES_TRACE_LEVEL=INJDATA                                        03000054
                                                                        03010056
/* print only those messages which have number of periods */            03020054
/* less or equal to  lvl)                                 */            03030054
if fashion = "OLD "                                                     03040054
  then                                                                  03050054
    do                                                                  03060054
    prefix=left(".",MSG_MESSAGES_TRACE_LEVEL,".")                       03070054
    if prefix <> substr(msg_data,1,MSG_MESSAGES_TRACE_LEVEL) | ,        03080054
       (prefix = substr(msg_data,1,MSG_MESSAGES_TRACE_LEVEL) & ,        03090054
        substr(msg_data,MSG_MESSAGES_TRACE_LEVEL+1,1) <> "." )          03100054
      then                                                              03110054
        put_eligibility = 1                                             03120054
      else                                                              03130054
        put_eligibility = 0                                             03140054
     end                                                                03150054
  else                                                                  03160054
    do                                                                  03170054
    if substr(msg_data,1,1) <= MSG_MESSAGES_TRACE_LEVEL                 03180054
      then                                                              03190054
        put_eligibility = 1                                             03200054
      else                                                              03210054
        put_eligibility = 0                                             03220054
    if substr(msg_data,2,1) = "W" | substr(msg_data,2,1) = "E"          03230054
      then                                                              03240054
        put_eligibility = 1                                             03250054
    end                                                                 03260054
 return put_eligibility                                                 03270054
/*                                                             */       03280054
/* returns message data to print                               */       03290054
/*                                                             */       03300054
MSG_2_PRT  : procedure                                                  03310054
fashion  = arg(1)                                                       03320054
msg_data = arg(2)                                                       03330054
if fashion = "OLD"                                                      03340054
  then                                                                  03350054
    return  msg_data                                                    03360054
  else                                                                  03370054
    return  substr(msg_data,5)                                          03380054
                                                                        03390054
/*                                      */                              03400054
/* returns message from HEAP            */                              03410054
/* PARM : byte of framework or blank    */                              03420054
/*        message number                */                              03430054
/*                                      */                              03440054
GET_MSG_FROM_HEAP_ELEMENT : procedure expose APPLPFX FWPFX PFX HEAP.    03450054
FW      = strip(arg(1))                                                 03460054
msg_num = arg(2)                                                        03470054
if FW=''                                                                03480054
  then                                                                  03490054
    PFX  = APPLPFX                                                      03500054
  else                                                                  03510054
    PFX  = FWPFX                                                        03520054
                                                                        03530054
 call GET_DATA_BY_ELEMENT_NAME_EXT PFX||msg_num                         03540054
 if STMXDATA.0 = 0                                                      03550054
   then                                                                 03560054
     return ''                                                          03570054
   else                                                                 03580054
     return STMXDATA.1                                                  03590054
                                                                        03600054
/*                           */                                         03610054
/* check that inline parms   */                                         03620054
/* number matches free args  */                                         03630054
/* arg1 - msg ID             */                                         03640054
/* arg3 - msg data           */                                         03650054
/* arg4 - free args          */                                         03660054
/*  0 - OK, othee - NOK      */                                         03670054
CHECK_PARMS_SIGNATURE : procedure EXPOSE PFX                            03680054
ID        = arg(1)                                                      03690054
msg_data  = arg(2)                                                      03700054
args      = arg(3)                                                      03710054
i = 0                                                                   03720054
do forever                                                              03730054
  j = pos("$$P",msg_data)                                               03740054
  if j > 0                                                              03750054
    then                                                                03760054
      do                                                                03770054
      i = i + 1                                                         03780054
      msg_data = substr(msg_data,j+2)                                   03790054
      end                                                               03800054
  else                                                                  03810054
    leave                                                               03820054
end                                                                     03830054
if i > args                                                             03840054
  then                                                                  03850054
    do                                                                  03860054
    return "MSGHNDLR:W Insufficient args for" PFX"."ID ,                03870054
           "ARGS="args  "MUST="i                                        03880054
    end                                                                 03890054
if i < args                                                             03900054
  then                                                                  03910054
    do                                                                  03920054
    return "MSGHNDLR:W Exceeded args for " PFX"."ID ,                   03930054
           "ARGS="args  "MUST="i                                        03940054
    end                                                                 03950054
return 0                                                                03960054
/*                                       */                             03970054
/*   Message handler warnings            */                             03980054
/*                                       */                             03990054
PRINT_ARGS_WARNING : procedure                                          04000054
CALL SAY_OK  DATE('E') substr(TIME('L'),1,12) arg(1)                    04010064
return                                                                  04020054
/*                                       */                             04030054
/*   Inject parameter values             */                             04040054
/*                                       */                             04050054
/*  parms : 1 messageg data              */                             04060054
/*          2 $$P1 value                 */                             04070054
/*          3 $$P2 value                 */                             04080054
/*          4 $$P3 value                 */                             04090054
/*          5 $$P4 value                 */                             04100054
/*                                       */                             04110054
INJECT_VALS : procedure                                                 04120054
  msg_data = arg(1)                                                     04130054
  p.1      = arg(2)                                                     04140054
  p.2      = arg(3)                                                     04150054
  p.3      = arg(4)                                                     04160054
  p.4      = arg(5)                                                     04170054
  i = 1                                                                 04180054
  do forever                                                            04190054
    j = pos("$$P",msg_data)                                             04200054
    if j > 0                                                            04210054
      then                                                              04220054
        do                                                              04230054
        msg_data = substr(msg_data,1,j-1)  || ,                         04240054
                   p.i                     || ,                         04250054
                   substr(msg_data,j+4)                                 04260054
        i = i + 1                                                       04270054
        end                                                             04280054
      else                                                              04290054
        leave                                                           04300054
  end                                                                   04310054
 return msg_data                                                        04320054
                                                                        04330054
/***************************************/                               04340054
/* Create and fill list & map of msgs  */                               04350054
/* PARM   :  REQUEST APPL or FW        */                               04360054
/*           PREFIX OF MESSAGE         */                               04370054
/* RETURN : 0 or 8                     */                               04380054
/*                                     */                               04390054
FILL_MSG_STORAGE : procedure expose SPIX. SMRX. HEAP.                   04400054
request = arg(1)                                                        04410054
PFX     = arg(2)                                                        04420054
 if request = "APPL"                                                    04430054
  then                                                                  04440054
    do                                                                  04450054
    listn = "APPLLST"                                                   04460054
    mapn  = GET_MAP_NAME(request)                                       04470054
    stem  = "SPIX"                                                      04480054
    end                                                                 04490054
  else                                                                  04500054
   if request = "FW"                                                    04510054
    then                                                                04520054
      do                                                                04530054
      listn = "FWLST"                                                   04540054
      mapn  = GET_MAP_NAME(request)                                     04550054
      stem  = "SMRX"                                                    04560054
      end                                                               04570054
    else                                                                04580054
      return 8                                                          04590054
                                                                        04600054
 interpret "arr_size  = "stem".0"                                       04610054
 do i = 1 to arr_size                                                   04620054
 interpret "item_data = strip("stem"."i")"                              04630054
 parse var item_data pfx_data msg_data                                  04640054
 if datatype(pfx_data) <> "NUM"                                         04650054
   then                                                                 04660054
     do                                                                 04670054
     if FILL_MSG_LIST(listn,PFX||i,item_data) <> 0                      04680054
       then                                                             04690054
         return 8                                                       04700054
     end                                                                04710054
   else                                                                 04720054
     do                                                                 04730054
     keyname = PFX || strip(pfx_data,'L','0')                           04740054
     if FILL_MSG_MAP(mapn,keyname,PFX||i,msg_data) <> 0                 04750054
       then                                                             04760054
         return 8                                                       04770054
     end                                                                04780054
 end                                                                    04790054
 return 0                                                               04800054
                                                                        04810054
/***************************************/                               04820054
/* Create and fill list of msgs        */                               04830054
/* PARM   :  LIST name                 */                               04840054
/*           ELEMENT name              */                               04850054
/*           MESSAGE data              */                               04860054
/* RETURN : 0 or 8                     */                               04870054
/*                                     */                               04880054
FILL_MSG_LIST : procedure expose HEAP.                                  04890054
LISTN   = arg(1)                                                        04900054
ELNAME  = arg(2)                                                        04910054
MSGDATA = arg(3)                                                        04920054
                                                                        04930054
/* create list for first message */                                     04940054
if IS_LIST_READY_EXT(LISTN) <> 0                                        04950054
 then                                                                   04960054
   do                                                                   04970054
    stmxdata.0 = 0                                                      04980054
    parse value CLSMNGR("create","list",listn) with retc retref .       04990054
    if retc <> 0                                                        05000054
      then                                                              05010054
        do                                                              05020054
        say "LIST" listn "creation failed with RC="retc                 05030054
        return 8                                                        05040054
        end                                                             05050054
      else                                                              05060054
        do                                                              05070054
        CALL SAY_OK "LIST" listn "created successfully,reference="retref05080064
        end                                                             05090054
   end                                                                  05100054
                                                                        05110054
  /* Add message to list */                                             05120054
  stmxdata.NAME = ELNAME                                                05130054
  stmxdata.0 = 1                                                        05140054
  stmxdata.1 = MSGDATA                                                  05150054
  parse value CLSMNGR("add","list",listn) with retc .                   05160054
  if retc <> 0                                                          05170054
    then                                                                05180054
      do                                                                05190054
      say "LIST" listn "ADD failed with RC="retc                        05200054
      return 8                                                          05210054
      end                                                               05220054
  return 0                                                              05230054
                                                                        05240054
/***************************************/                               05250054
/* Create and fill map of msgs         */                               05260054
/* PARM   :  MAP name                  */                               05270054
/*           KEY     name              */                               05280054
/*           ELEMENT name              */                               05290054
/*           MESSAGE data              */                               05300054
/* RETURN : 0 or 8                     */                               05310054
/*                                     */                               05320054
FILL_MSG_MAP : procedure expose HEAP.                                   05330054
MAPN    = arg(1)                                                        05340054
KEYNAME = arg(2)                                                        05350054
ELNAME  = arg(3)                                                        05360054
MSGDATA = arg(4)                                                        05370054
                                                                        05380054
/* create map for first message */                                      05390054
if IS_MAP_READY_EXT(MAPN) <> 0                                          05400054
 then                                                                   05410054
   do                                                                   05420054
    stmxdata.0 = 0                                                      05430054
    parse value CLSMNGR("create","map",mapn) with retc retref .         05440054
    if retc <> 0                                                        05450054
      then                                                              05460054
        do                                                              05470054
        say "MAP" mapn "creation failed with RC="retc                   05480054
        return 8                                                        05490054
        end                                                             05500054
      else                                                              05510054
        do                                                              05520054
        CALL SAY_OK "MAP" mapn "created successfully,reference="retref  05530064
        end                                                             05540054
   end                                                                  05550054
  /*  add item to MAP */                                                05560054
  stmxdata.NAME=ELNAME                                                  05570054
  stmxdata.0 = 1                                                        05580054
  stmxdata.1 = MSGDATA                                                  05590054
  parse value CLSMNGR("add","map",mapn,KEYNAME) with retc .             05600054
  if retc <> 0                                                          05610054
    then                                                                05620054
      do                                                                05630054
      say "MAP" mapn "ADD failed with RC="retc                          05640054
      return 8                                                          05650054
      end                                                               05660054
 return 0                                                               05670054
                                                                        05680054
/***************************************/                               05690054
/* Return MAP name by request name     */                               05700054
/* PARM   :  REQUEST name              */                               05710054
/* RETURN :  MAP name                  */                               05720054
/*                                     */                               05730054
GET_MAP_NAME : procedure                                                05740054
if arg(1)  = "APPL"                                                     05750054
  then                                                                  05760054
    return "APPLMAP"                                                    05770054
  else                                                                  05780054
   if arg(1)  = "FW"                                                    05790054
     then                                                               05800054
        return "FWMAP"                                                  05810054
     else                                                               05820054
        return ''                                                       05830054
                                                                        05840054
/**********************************************************/            05850054
/*  This gets explanation message , checks parameter      */            05860054
/*  signature and replace the parameters in the message   */            05870054
/*  data.  Returns data ready to print                    */            05880054
/*  PARM : FRAMEWORK byte                                 */            05890054
/*         MSG ID                                         */            05900054
/*         MSG DATA                                       */            05910054
/*         Number of actual arguments                     */            05920054
/*         arguments                                      */            05930054
/*   RET : message or ''                                  */            05940054
/**********************************************************/            05950054
GET_MSG_EXPLAIN : procedure expose PFX msg_id_ex HEAP.                  05960054
 FW       = arg(1)                                                      05970054
 msg_id   = arg(2)                                                      05980054
 msg_data = arg(3)                                                      05990054
 args     = arg(4)                                                      06000054
                                                                        06010054
 if strip(FW) = ''                                                      06020054
   then                                                                 06030054
     request = "APPL"                                                   06040054
   else                                                                 06050054
     request = "FW"                                                     06060054
                                                                        06070054
 mapn = GET_MAP_NAME(request)                                           06080054
                                                                        06090054
 keyname = PFX || strip(msg_id,'L','0')                                 06100054
 parse value CLSMNGR("find","map",mapn,keyname) ,                       06110054
                                     with retc elhash msg_name_ex       06120054
 if retc <> 0                                                           06130054
   then                                                                 06140054
     msg_data_explain = ''                                              06150054
   else                                                                 06160054
     do                                                                 06170054
     call GET_DATA_BY_ELEMENT_NAME_EXT msg_name_ex                      06180054
     parse var msg_name_ex (PFX) msg_id_ex .                            06190054
     msg_data_explain = STMXDATA.1                                      06200054
     end                                                                06210054
                                                                        06220054
 if msg_data_explain = ''                                               06230054
   then                                                                 06240054
    do                                                                  06250054
    warning = "MSGHNDLR:E for msg <"FW","msg_id">" ,                    06260054
              "no explanation message found"                            06270054
    call PRINT_ARGS_WARNING warning                                     06280054
    end                                                                 06290054
   else                                                                 06300054
    do                                                                  06310054
    msg_data_explain = substr(msg_data,1,3) msg_data_explain            06320054
    warning = CHECK_PARMS_SIGNATURE(msg_id_ex,msg_data_explain,args)    06330054
    if warning <> 0                                                     06340054
     then                                                               06350054
      do                                                                06360054
      call PRINT_ARGS_WARNING warning                                   06370054
      msg_data_explain = ''                                             06380054
      end                                                               06390054
     else                                                               06400054
      msg_data_explain = ,                                              06410054
          INJECT_VALS(msg_data_explain,arg(5),arg(6),arg(7),arg(8))     06420054
    end                                                                 06430054
return msg_data_explain                                                 06440054
                                                                        06450064
/* this is for quiet messaging in 3270 mode */                          06460064
SAY_OK : procedure                                                      06470064
MSG_MESSAGES_TRACE_MODE=INJMODE                                         06480064
if MSG_MESSAGES_TRACE_MODE <> "ONLINE"                                  06490064
 then                                                                   06500064
   SAY ARG(1)                                                           06510064
return                                                                  06520064
