/*  TSO FS  interface                                            */     00010058
FSMNGR : procedure  expose (alc_parm) fsattr. HEAP.                     00020065
 ADDRESS TSO                                                            00030000
 action=arg(1)                                                          00040000
 filename=arg(2)                                                        00050000
 model=arg(3)                                                           00060000
 attr=arg(3)                                                            00070047
                                                                        00080032
                                                                        00090016
 d_action=action                                                        00100016
 upper d_action                                                         00110016
                                                                        00120000
 call FMSG 33,d_action    /*  __________REQUEST : */                    00130069
 call FMSG 34,filename    /*  _________FILENAME : */                    00140069
 call FMSG 35,model       /*  ____________MODEL : */                    00150069
 call fMSG 36,attr        /*  _____________ATTR : */                    00160069
                                                                        00170056
                                                                        00180056
 select                                                                 00190000
   /* query file attributes */                                          00200002
   when action='qfile' then do                                          00210001
                     call FMSG 37,filename    /* query attributes */    00220069
                     return exqfile(filename)                           00230060
                     end                                                00240060
   /* query file specific attribute */                                  00250047
   when action='qfilesattr' then do                                     00260047
                     call FMSG 38,attr        /* query spec attr */     00270069
                     return exqfilesattr(filename,attr)                 00280060
                     end                                                00290060
   /* allocate file with attributes of model */                         00300002
   when action='alcbymod' then do                                       00310001
                     call FMSG 39,filename     /* alloc by model */     00320069
                     return exalcmod(filename,model)                    00340060
                     end                                                00350060
   /* allocate file with specific attributes */                         00360002
   when action='alcnfile' then do                                       00370002
                     call FMSG 40,filename    /* allocate new file */   00380069
                     return exalcnfile(filename,file_tp,rec_fm)         00390060
                     end                                                00400060
   /* check file state */                                               00410005
   when action='qfileste' then do                                       00420005
                     call FMSG 41,filename  /* check file existence */  00430069
                     return exqfileste(filename)                        00440060
                     end                                                00450060
   /* delete file  */                                                   00460054
   when action='delfile'  then do                                       00470054
                     call FMSG 42,filename    /* delete file */         00480069
                     return exdelfile(filename)                         00490060
                     end                                                00500060
   otehrwise call FMSG 43  /* parameter selection failed */ ; return -1;00510069
 end                                                                    00520000
                                                                        00530000
/* query specific attribute of file  */                                 00540047
exqfilesattr : procedure expose fsattr. HEAP.                           00550065
 if exqfile(arg(1)) <> 0                                                00560047
     then                                                               00570047
       return 8                                                         00580047
 return FA(arg(2))                                                      00590047
                                                                        00600000
/* query file attributes  */                                            00610005
exqfile : procedure expose fsattr. HEAP.                                00620065
if PIPEMODE() = 1       /* INJECTED FUNCTION */                         00630059
 then                                                                   00640057
  do                                                                    00650059
   rcode=fscmd(                                                       , 00660057
               lpipe() "  listdsi " arg(1) " directory            " ||, 00670062
                       "| specs  2-*                              " ||, 00680057
                       "| specs ws = w1 1 /=/ n /'/ n w2 n /'/ n  " ||, 00690057
                       "| change //fsattr./                       " ||, 00700057
                       "| stem rxcmds.                            "   , 00710057
               )                                                        00720057
  end                                                                   00730059
 else                                                                   00740057
  do                                                                    00750059
  if fscmd("rc=GET_FILE_ATTRIBUTES("arg(1)")") <> 0                     00760059
   then                                                                 00770059
     return 8                                                           00780059
  end                                                                   00790059
                                                                        00800059
 do i = 1 to rxcmds.0                                                   00810059
  parse var rxcmds.i  . "."  ndx "=" .                                  00820059
  fsattr.0 = i                                                          00830059
  fsattr.i = ndx                                                        00840059
  interpret rxcmds.i                                                    00850059
 end                                                                    00860059
                                                                        00870059
 return 0                                                               00880057
                                                                        00890033
/* check file existence */                                              00900005
exqfileste: procedure expose action HEAP.                               00910065
    return fscmd("rc=SYSDSN("arg(1)"); if rc='OK' then rc=0;")          00920024
                                                                        00930005
/* allocate file by model */                                            00940005
exalcmod: procedure expose action HEAP.                                 00950065
 if exqfileste(arg(1)) = 0                                              00960005
     then                                                               00970028
      return 0                                                          00980033
                                                                        00990041
 /* guery model file for all attributes */                              01000035
 if exqfile(arg(2)) <> 0                                                01010038
     then                                                               01020035
       return 8                                                         01030035
                                                                        01040054
 return ( g2b(fscmd(                   ,                                01050041
                    "allocate"         ,                                01060041
                    "da("arg(1)")"     ,                                01070041
                     FA(DSORG)         ,                                01080041
                     FA(SPACE)         ,                                01090041
                     FA(LRECL)         ,                                01100041
                     FA(BLKSIZE)       ,                                01110041
                    "like("arg(2)")"   ,                                01120041
                    )                  ,                                01130041
             )                         ,                                01140041
                                         |,                             01150041
          g2b(fscmd(                   ,                                01160041
                    "free"             ,                                01170041
                    "da("arg(1)")"     ,                                01180041
                    )                  ,                                01190041
               )                       ,                                01200041
        ) * 8                                                           01210041
                                                                        01220035
                                                                        01230033
/* allocate new file  */                                                01240035
exalcnfile: procedure expose action (alc_parm) HEAP.                    01250065
 if exqfileste(arg(1)) = 0                                              01260005
   then                                                                 01270003
      return 0                                                          01280003
 /* strip quotes and double quotes */                                   01290039
 fname = strip(strip(arg(1),,"'"),,'"')                                 01300057
 /* lpipe() "  var fname         " ||,  */                              01310062
 /*         "| strip anyof X7D7F " ||,  */                              01320057
 /*         "| var fname         "      */                              01330057
                                                                        01340039
 /* create model name */                                                01350062
 /* !!! you should change GETMODNM routine to provide  !!! */           01360062
 /* !!! your model name for the requested file name    !!! */           01370062
 model_name = GETMODNM(fname)                                           01380062
 if model_name = ''                                                     01390062
  then                                                                  01400062
    do                                                                  01410062
    if pos(pfx_wrk,fname) > 0                                           01420062
        then pfx_env = pfx_wrk                                          01430062
        else pfx_env = pfx_pkg                                          01440062
     parse var fname  .  (parm_ccid) '.'  short_fname                   01450062
     model_name = pfx_dev || "." || short_fname                         01460062
    end                                                                 01470062
 return exalcmod(arg(1),model_name)                                     01480030
                                                                        01490030
                                                                        01500001
/* delete existing file */                                              01510054
exdelfile:  procedure expose action HEAP.                               01520065
 if exqfileste(arg(1)) = 0                                              01530054
   then                                                                 01540054
      return fscmd("delete" arg(1) "scratch nonvsam")                   01550054
   else                                                                 01560055
      return 0                                                          01570055
                                                                        01580054
                                                                        01590054
/* Return DSN attributes                                 */             01600052
/* The following mnemonics used in request name :        */             01610052
/* 1.SYSxxxx means the field value returned as is        */             01620052
/* 2.PROCxxx means the elaborated value is returned      */             01630052
/* 3.Otherwise values returned in the format match TSO   */             01640052
/*   ALLOCATE command                                    */             01650052
/*                                                       */             01660052
FA      : procedure expose  fsattr. HEAP.                               01670065
what = arg(1)                                                           01680035
upper what                                                              01690035
if what = "BLKSIZE"                                                     01700035
  then                                                                  01710035
    return "blksize("fsattr.SYSBLKSIZE")"                               01720035
                                                                        01730043
if what = "LRECL"                                                       01740035
  then                                                                  01750035
    return "lrecl("fsattr.SYSLRECL")"                                   01760035
                                                                        01770043
if what = "DSORG"                                                       01780035
  then                                                                  01790035
     return "dsorg("fsattr.SYSDSORG")"                                  01800035
                                                                        01810043
if what = "RECFM"                                                       01820035
   then                                                                 01830035
     do                                                                 01840035
      rd = "recfm("                                                     01850035
      do i = 1 to length(fsattr.SYSRECFM)                               01860035
       if i = length(fsattr.SYSRECFM)                                   01870035
        then                                                            01880035
           dlmtr=")"                                                    01890035
        else                                                            01900035
           dlmtr=","                                                    01910035
       rd = rd || substr(fsattr.SYSRECFM,i,1) || dlmtr                  01920035
      end                                                               01930035
       return rd                                                        01940035
     end                                                                01950035
                                                                        01960043
if what = "SPACE"                                                       01970035
   then                                                                 01980035
     do                                                                 01990043
     space_units =  "space("fsattr.SYSPRIMARY","fsattr.SYSSECONDS")" ,  02000051
                     fsattr.SYSUNITS                                    02010051
     if fsattr.SYSUNITS = "TRACK" & fsattr.SYSPRIMARY = "1"             02020051
       then                                                             02030051
          space_units = "space(10,10) cylinders"                        02040051
     if datatype(fsattr.SYSADIRBLK) <> 'NUM'                            02050043
        then                                                            02060043
          space_dsntype = "dsntype(LIBRARY)"                            02070051
        else                                                            02080043
          space_dsntype  = "dsntype(PDS)"                               02090051
     return space_units space_dsntype                                   02100051
     end                                                                02110043
                                                                        02120043
if what = "PROCDSNTYPE"                                                 02130052
   then                                                                 02140047
     do                                                                 02150047
     if fsattr.SYSDSORG='PO' & datatype(fsattr.SYSADIRBLK) <> 'NUM'     02160048
       then                                                             02170048
          return "LIBRARY"                                              02180048
     if fsattr.SYSDSORG='PO' & datatype(fsattr.SYSADIRBLK) = 'NUM'      02190048
       then                                                             02200048
          return "PDS"                                                  02210048
     return fsattr.SYSDSORG                                             02220048
     end                                                                02230047
                                                                        02240048
if substr(what,1,3) = "SYS"                                             02250053
   then                                                                 02260052
     do                                                                 02270053
     interpret "val=fsattr."what                                        02280053
     return val                                                         02290053
     end                                                                02300053
                                                                        02310052
return -1                                                               02320047
                                                                        02330035
                                                                        02340035
/* execute command with log */                                          02350005
fscmd   : procedure expose fsattr. rxcmds. action HEAP.                 02360065
 call FMSG 44,'"'arg(1)'"'    /* FSCMD requested */                     02370069
 if word(arg(1),1) = lpipe()                                            02380062
    then                                                                02390039
      do                                                                02400040
      b=substr(arg(1),wordindex(arg(1),2))                              02410040
      lpipe() "var b | runpipe "                                        02420062
      end                                                               02430040
    else                                                                02440039
      if substr(arg(1),1,3)="rc="                                       02450039
        then                                                            02460039
          interpret arg(1)                                              02470039
        else                                                            02480039
           interpret '"'arg(1)'"'                                       02490039
                                                                        02500024
                                                                        02510026
                                                                        02520023
 retcode=rc                                                             02530000
 if retcode <> 0                                                        02540018
      then do                                                           02550000
           call fsshowerr left(arg(1),32,' ') , retcode                 02560057
           return retcode                                               02570000
           end                                                          02580000
                                                                        02590012
call FMSG 45            /* FSCMD Retcode=0 */                           02601069
if action="qfile"                                                       02610007
   then                                                                 02620007
     do                                                                 02630007
      do i = 1 to rxcmds.0                                              02640007
      interpret rxcmds.i                                                02650007
      end                                                               02660007
     end                                                                02670007
return 0                                                                02680000
                                                                        02690000
fsshowerr : procedure expose HEAP.                                      02700065
/* FSCMD:Failure on CMD=<$$P1>,RC=$$P2 */                               02710066
call FMSG 46,'"'arg(1)'"','"'arg(2)'"'                                  02711069
return                                                                  02720000
                                                                        02730000
GET_FILE_ATTRIBUTES : procedure expose fsattr. rxcmds.                  02740059
fn = arg(1)                                                             02750057
 x=listdsi(fn directory)                                                02760057
 rxcmds.1  =  "fsattr.SYSDSNAME='"SYSDSNAME"'"                          02770059
 rxcmds.2  =  "fsattr.SYSVOLUME='"SYSVOLUME"'"                          02780059
 rxcmds.3  =  "fsattr.SYSUNIT='"SYSUNIT"'"                              02790059
 rxcmds.4  =  "fsattr.SYSDSORG='"SYSDSORG"'"                            02800059
 rxcmds.5  =  "fsattr.SYSRECFM='"SYSRECFM"'"                            02810059
 rxcmds.6  =  "fsattr.SYSLRECL='"SYSLRECL"'"                            02820059
 rxcmds.7  =  "fsattr.SYSBLKSIZE='"SYSBLKSIZE"'"                        02830059
 rxcmds.8  =  "fsattr.SYSKEYLEN='"SYSKEYLEN"'"                          02840059
 rxcmds.9  =  "fsattr.SYSALLOC='"SYSALLOC"'"                            02850059
 rxcmds.10 =  "fsattr.SYSUSED='"SYSUSED"'"                              02860059
 rxcmds.11 =  "fsattr.SYSPRIMARY='"SYSPRIMARY"'"                        02870059
 rxcmds.12 =  "fsattr.SYSSECONDS='"SYSSECONDS"'"                        02880059
 rxcmds.13 =  "fsattr.SYSUNITS='"SYSUNITS"'"                            02890059
 rxcmds.14 =  "fsattr.SYSEXTENTS='"SYSEXTENTS"'"                        02900059
 rxcmds.15 =  "fsattr.SYSCREATE='"SYSCREATE"'"                          02910059
 rxcmds.16 =  "fsattr.SYSREFDATE='"SYSREFDATE"'"                        02920059
 rxcmds.17 =  "fsattr.SYSEXDATE='"SYSEXDATE"'"                          02930059
 rxcmds.18 =  "fsattr.SYSPASSWORD='"SYSPASSWORD"'"                      02940059
 rxcmds.19 =  "fsattr.SYSRACFA='"SYSRACFA"'"                            02950059
 rxcmds.20 =  "fsattr.SYSUPDATED='"SYSUPDATED"'"                        02960059
 rxcmds.21 =  "fsattr.SYSTRKSCYL='"SYSTRKSCYL"'"                        02970059
 rxcmds.22 =  "fsattr.SYSBLKSTRK='"SYSBLKSTRK"'"                        02980059
 rxcmds.23 =  "fsattr.SYSADIRBLK='"SYSADIRBLK"'"                        02990059
 rxcmds.24 =  "fsattr.SYSUDIRBLK='"SYSUDIRBLK"'"                        03000059
 rxcmds.25 =  "fsattr.SYSMEMBERS='"SYSMEMBERS"'"                        03010059
 rxcmds.26 =  "fsattr.SYSREASON='"SYSREASON"'"                          03020059
 rxcmds.0  = 26                                                         03030059
 return 0                                                               03040057
                                                                        03050060
/***********************************************/                       03060064
/* provides message interface with a variable  */                       03070064
/* number of arguments. Suitable with injector */                       03080064
/***********************************************/                       03090064
FMSG : procedure expose HEAP.                                           03100065
fw_pfx = 'F'                                                            03100164
l = arg()                                                               03101064
parms  = '("'fw_pfx'",'                                                 03102068
do i = 1 to l                                                           03103064
if i = l                                                                03103164
  then finc = ")"                                                       03103264
  else finc = ","                                                       03103364
p = arg(i)                                                              03103467
if strip(p) = ''                                                        03103567
  then                                                                  03103667
    p = "'"p"'"                                                         03103767
parms = parms || p || finc                                              03103867
end                                                                     03104064
function="MSG"                                                          03104164
interpret "rc="function||parms                                          03105064
return                                                                  03120064
                                                                        03130062
/*********************************************/                         03140062
/* provides model name for a filename passed */                         03150062
/* in arg(1)                                 */                         03160062
/*********************************************/                         03170062
GETMODNM : procedure expose HEAP.                                       03180065
/*  if arg(1) = ????       */                                           03190062
/*    then return  !!!!    */                                           03200062
return ''                                                               03210062
