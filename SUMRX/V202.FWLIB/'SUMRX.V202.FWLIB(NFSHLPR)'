/***************************************************/                   00013200
/*        COPY TO ZOS                              */                   00013300
/* parms : mvs file name                           */                   00013400
/*       : USS dir                                 */                   00013500
/*       : number of tracks                        */                   00013600
/* ret   : 0 - OK, 8 - NOK                         */                   00013700
/***************************************************/                   00013800
COPY2ZOS : procedure expose HEAP.                                       00013900
fname   = arg(1)                                                        00014000
u_dir   = arg(2)                                                        00014100
trk_num = arg(3)                                                        00014200
LF       = '0A'x                                                        00014400
NL       = '15'x                                                        00014500
                                                                        00014600
parse value getFileType(fname) with ftype .                             00014700
if ftype = "BIN"                                                        00014800
  then                                                                  00014900
   do                                                                   00015000
   call UMSG 71,fname,"BIN"   /* file will be copied in BIN */          00015100
                                                                        00015200
   parse value GetFileTypeAttr("BIN") with RECFM "," LRECL BLKSIZE      00015300
   RECFM = strip(RECFM)                                                 00015400
                                                                        00015500
   p = 'F:"'RECFM'";L:"'LRECL'";B:"'BLKSIZE'";T:"'trk_num'"'            00015600
   p = "'"p"'"                                                          00015700
   call UMSG 79, fname, p                                               00015800
   unix_cmd = 'cp -B -P'                      ||,                       00015900
                    ' "'                      ||,                       00016000
                    'space=(TRK,'trk_num'),'  ||,                       00016100
                    'recfm='RECFM','          ||,                       00016200
                    'lrecl='LRECL','          ||,                       00016300
                    'blksize='BLKSIZE         ||,                       00016400
                    '" '                      ||,                       00016500
                    u_dir'/'fname '"//'||"'"||fname"'"||'"'             00016600
   call bpxwunix unix_cmd,,out.,err.                                    00016700
   PIPEC() "stem err. | stem out. append | terminal"                    00016800
   if err.0 <> 0                                                        00016900
    then                                                                00017000
      rcode = 8                                                         00017100
   end                                                                  00017200
  else                                                                  00017300
   do                                                                   00017400
   call UMSG 71,fname,"TXT"   /* file will be copied in TXT */          00017500
   parse value GetFileTypeAttr("TXT") with RECFM "," LRECL BLKSIZE      00017600
   p = 'F:"'RECFM'";L:"'LRECL'";B:"'BLKSIZE'";T:"'trk_num'"'            00017700
   p = "'"p"'"                                                          00017800
   call UMSG 79, fname, p                                               00017900
                                                                        00018000
   "ALLOCATE NEW UNIT(SYSDA)"              ,                            00018100
             "RECFM("RECFM")"              ,                            00018200
             "LRECL("LRECL")"              ,                            00018300
             "BLKSIZE("BLKSIZE")"          ,                            00018400
             "SPACE("trk_num") TRACKS"     ,                            00018500
             "DA('"fname"')"                                            00018600
   if rc <> 0                                                           00018700
    then                                                                00018800
      do                                                                00018900
      call UMSG 80, fname          /* allocation failed */              00019000
      rcode = 8                                                         00019100
      end                                                               00019200
    else                                                                00019300
      do                                                                00019400
      /* A2E */                                                         00019500
      PIPEC() "  <oe '"u_dir"/"fname"'       " || ,                     00019600
              "| change /"LF"/"NL"/          " || ,                     00019700
              "| specs 1-* 1 /"NL"/ n        " || ,                     00019800
              "| split after  str /"NL"/     " || ,                     00019900
              "| specs 1;-2 1                " || ,                     00020000
              "| xlate 1-* A2E               " || ,                     00020100
              "| >" fname                                               00020200
      rcode = 0                                                         00020300
      end                                                               00020400
   end                                                                  00020500
return rcode                                                            00020600
                                                                        00020700
                                                                        00021000
                                                                        00022900
/***************************************************/                   00024000
/*        GET FILELIST IN LINUX BY PREFIX          */                   00024100
/*  parms: file prefix                             */                   00024200
/*  parms: NFS mount point                         */                   00024300
/***************************************************/                   00024400
getFileList: procedure expose flist. HEAP.                              00024500
file_pfx  = arg(1)                                                      00024600
lcl_dir   = arg(2)                                                      00024700
                                                                        00024800
cmd = "ls -R -1" lcl_dir || ,                                           00024900
      "| grep" file_pfx                                                 00025000
call bpxwunix cmd,,flist.,err.                                          00025100
if err.0 <> 0                                                           00025200
  then                                                                  00025300
    do                                                                  00025400
    call UMSG 81,file_pfx  /* search backups by prefix failed */        00025500
    PIPEC() "stem err. | terminal"                                      00025600
    flist.0 = 0                                                         00025700
    retc = 8                                                            00025800
    end                                                                 00025900
  else                                                                  00026000
    do                                                                  00026100
    call UMSG 82,flist.0   /* found backup files */                     00026200
    retc = 0                                                            00026400
    end                                                                 00026500
return retc                                                             00026600
                                                                        00026700
/***************************************************/                   00027000
/*        COPY TO USS                              */                   00028000
/* parms : mvs file name                           */                   00030000
/*       : USS dir                                 */                   00040000
/***************************************************/                   00050000
COPY2USS : procedure expose HEAP.                                       00060000
fname   = arg(1)                                                        00070000
u_dir   = arg(2)                                                        00080000
LF       = '0A'x                                                        00081000
                                                                        00082000
parse value getFileType(fname) with ftype .                             00090000
if ftype = "BIN"                                                        00110000
  then                                                                  00120000
   do                                                                   00130000
   call UMSG 71,fname,"BIN"   /* file will be copied in BIN */          00140000
   unix_cmd =  'cp -U -B "//'||"'"||fname"'"||'"' u_dir'/'fname         00150000
   call bpxwunix unix_cmd,,out.,err.                                    00160000
   PIPEC() "stem err. | stem out. append | terminal"                    00170000
   if err.0 <> 0                                                        00180000
    then                                                                00190000
      rcode = 8                                                         00200000
   end                                                                  00210000
  else                                                                  00220000
   do                                                                   00230000
   call UMSG 71,fname,"TXT"   /* file will be copied in TXT */          00240000
   PIPEC() "  < '"fname"'           " || ,                              00250000
           "| xlate 1-* E2A         " || ,                              00260000
           "| specs 1-* 1 /"LF"/ n  " || ,                              00270000
           "| join  *               " || ,                              00280000
           "| specs 1;-2 1          " || ,                              00290000
           "| >oe" u_dir"/"fname                                        00300000
   rcode = 0                                                            00310000
   end                                                                  00320000
return rcode                                                            00330000
                                                                        00340000
/***************************************************/                   00350000
/*        QUERY LAST BACKUP DATE                   */                   00360000
/*   parms : USS mount point dir                   */                   00370000
/*         : MVS file name prefix with/without     */                   00380000
/*               period at the end. It's supposed  */                   00390000
/*               that date is in the token that    */                   00400000
/*               follows file prefix               */                   00410000
/*   ret   : last date of taking backup            */                   00420000
/***************************************************/                   00430000
/* This returns the date in customizable user format, either in */      00440000
/* 1. The creation date of the last taken backup, which is part */      00450000
/*    of the backup file name. For that file prefix is used.    */      00460000
/* 2. The date from the data-time filestamp of the FS in case   */      00470000
/*    the file name prefix is empty.                            */      00480000
/* 3. Default date when both 1 & 2 are not found                */      00490000
/*                                                              */      00500000
/* Input arg: -local directory where backups reside             */      00510000
/*            -file name prefix with/without the period at the  */      00520000
/*             end                                              */      00530000
/*                                                              */      00540000
getLastBkpDate    : procedure expose HEAP.                              00550000
lcl_dir   = ARG(1)                                                      00560000
fname_pfx = ARG(2)                                                      00570000
default_date = getDefaultDate()                                         00580000
                                                                        00590000
/* Normalize file prefix name to have period at the and         */      00600000
PIPEC() "  var fname_pfx     "|| ,                                      00610000
        "| locate 1          "|| ,                                      00620000
        "| change /./ /      "|| ,                                      00630000
        "| strip             "|| ,                                      00640000
        "| specs 1-* 1 /./ n "|| ,                                      00650000
        "| change / /./      "|| ,                                      00660000
        "| var fname_pfx     "                                          00670000
                                                                        00680000
                                                                        00690000
if strip(fname_pfx) <> ""                                               00700000
  then                                                                  00710000
    do /* find file prefix and get 1st toke after it */                 00720000
     cmd   = "cd" lcl_dir ";                " || ,                      00730000
             "  ls -rd -1 $PWD/**/*         " || ,                      00740000
             "| sed 's/.\+"fname_pfx"//'    " || ,                      00750000
             "| cut -d '.' -f 1             " || ,                      00760000
             "| sed -e 1q                   "                           00770000
    call bpxwunix cmd,,out.,err.                                        00780000
    if err.0 <> 0                                                       00800002
     then                                                               00810002
       do                                                               00811002
       MSG("Error found at getting last backup date::::")               00821002
       MSG("Error :" err.1)                                             00822002
       if word(err.1,1) = "CEE5213S"                                    00822102
         then                                                           00822202
           MSG("This is allowed exception" word(err.1,1))               00822302
         else                                                           00822402
          exit 8                                                        00823002
      end                                                               00824002
    PIPEC() "stem out. | strip | var last_date"                         00825002
    end                                                                 00830000
  else /* without file prefix */                                        00840000
    do                                                                  00850000
    if syscalls('ON') > 3                                               00860000
     then                                                               00870000
      do                                                                00880000
      call UMSG 72 /* Unable to establish SYSCALL environment */        00890000
      return 8                                                          00900000
      end                                                               00910000
     /* get the last file in dir including its path */                  00920000
     cmd   = "cd" lcl_dir ";                " || ,                      00930000
             "ls -rd -1 $PWD/**/*           " || ,                      00940000
             "| sed -e 1q                   "                           00950000
     call bpxwunix cmd,,out.,err.                                       00960000
     PIPEC() "stem out. | strip | var file_path"                        00970000
     if err.0 <> 0                                                      00980000
       then                                                             00990000
         last_date = ''                                                 01000000
       else                                                             01010000
         do                                                             01020000
          /* get the file statistics */                                 01030000
          address syscall                                               01040000
          "open" file_path  O_RDONLY                                    01050000
          if RETVAL = -1                                                01060000
           then                                                         01070000
             do                                                         01080000
             call ERRPRINT     /* problem */                            01090000
             return 8                                                   01100000
             end                                                        01110000
          fd = RETVAL                                                   01120000
                                                                        01130000
          "fstat" fd "st."                                              01140000
          "gmtime" st.st_ctime "stm."                                   01150000
          last_date =  getDateByYMD(stm.tm_year,stm.tm_mon,stm_tm_mday) 01160000
          "close" fd                                                    01170000
         end                                                            01180000
    call syscalls 'OFF'                                                 01190000
    end                                                                 01200000
  if strip(last_date) = ''                                              01210000
    then                                                                01220000
      last_date = default_date                                          01230000
   return 0 last_date                                                   01240000
                                                                        01250000
/* print problem details */                                             01260000
ERRPRINT: procedure expose err.                                         01270000
 address SYSCALL 'strerror' ERRNO ERRNOJR 'err.'                        01280000
 call UMSG 73,err.SE_ERRNO                                              01290000
 parse var err.SE_REASON . '15'x errmsg                                 01300000
 call UMSG 73,errmsg                                                    01310000
 call UMSG 73,err.SE_ACTION                                             01320000
 return                                                                 01330000
                                                                        01340000
/***************************************************/                   01350000
/*        QUERY NFS CONNECTION                     */                   01360000
/*  parms : USS mount point dir                    */                   01370000
/*  ret   : 0-mounted ,>0 - not mounted            */                   01380000
/***************************************************/                   01390000
qryNFSConn:  procedure expose HEAP.                                     01400000
lcl_dir    = arg(1)                                                     01410000
                                                                        01420000
/* query if FS mounted */                                               01430000
cmd = "df -v" lcl_dir                                                   01440000
call bpxwunix cmd,,out.,err.                                            01450000
                                                                        01460000
PIPEC() " stem err. | stem out. append "                                01470000
                                                                        01480000
/* check system response */                                             01490000
PIPEC() "  (endchar ? escape % )         " ||  ,                        01500000
        "| stem out.                     " ||  ,                        01510000
        "| SCND:fanout                   " ||  ,                        01520000
        "| THRD:fanout                   " ||  ,                        01530000
        "| locate w1 /NFS,/              " ||  ,                        01540000
        "| specs /0/ 1                   " ||  ,                        01550000
        "| var conn_status               " ||  ,                        01560000
        "?                               " ||  ,                        01570000
        "SCND:                           " ||  ,                        01580000
        "| locate /EDC5129I/             " ||  ,                        01590000
        "| specs /1/ 1                   " ||  ,                        01600000
        "| var conn_status               " ||  ,                        01610000
        "?                               " ||  ,                        01620000
        "THRD:                           " ||  ,                        01630000
        "| locate /Aggregate Name/       " ||  ,                        01640000
        "| specs /2/ 1                   " ||  ,                        01650000
        "| var conn_status               "                              01660000
                                                                        01670000
if conn_status = 0                                                      01680000
  then                                                                  01690000
    call UMSG 74,lcl_dir    /* directory mounted */                     01700000
if conn_status = 1                                                      01710000
  then                                                                  01720000
    call UMSG 75,lcl_dir    /* directory does not exist */              01730000
if conn_status = 2                                                      01740000
  then                                                                  01750000
    call UMSG 76,lcl_dir    /* directory is not mounted to NFS */       01760000
return strip(conn_status)                                               01770000
                                                                        01780000
/***************************************************/                   01790000
/*        CHECK LOCAL DIRECTORY EXISTENSE          */                   01800000
/*  parms : USS dir                                */                   01810000
/*  ret   : 1 - exists, 0 - not exists             */                   01820000
/***************************************************/                   01830000
isLclDirExist: procedure expose HEAP.                                   01840000
dir = arg(1)                                                            01850000
cmd = 'test -d "'dir'" && echo 1 || echo 0'                             01860000
call bpxwunix cmd,,out.                                                 01870000
PIPEC() "stem out. | var exist"                                         01880000
if exist <> 1                                                           01890000
  then                                                                  01900000
   call UMSG 75,lcl_dir"/"file_dir    /* directory does not exist  */   01910000
  else                                                                  01920000
   call UMSG 78,lcl_dir"/"file_dir    /* directory exists  */           01930000
return exist                                                            01940000
                                                                        01950000
/***************************************************/                   01960000
/*        CREATE LOCAL DIRECTORY                   */                   01970000
/*  parms : USS mount point dir                    */                   01980000
/*        : subdir to create                       */                   01990000
/***************************************************/                   02000000
makeDir: procedure expose HEAP.                                         02010000
lcl_dir  = arg(1)                                                       02020000
file_dir = arg(2)                                                       02030000
cmd = 'cd' lcl_dir '; mkdir' file_dir                                   02040000
call UMSG 77,lcl_dir"/"file_dir    /* directory has been created  */    02050000
call bpxwunix cmd,,out.                                                 02060000
return                                                                  02070000
                                                                        02080000
/***********************************************/                       02090000
/* provides message interface with a variable  */                       02100000
/* number of arguments. Suitable with injector */                       02110000
/***********************************************/                       02120000
UMSG : procedure expose HEAP.                                           02130000
fw_pfx = 'U'                                                            02140000
l = arg()                                                               02150000
parms  = '("'fw_pfx'",'                                                 02160000
do i = 1 to l                                                           02170000
if i = l                                                                02180000
  then finc = ")"                                                       02190000
  else finc = ","                                                       02200000
p = arg(i)                                                              02210000
if strip(p) = '' | pos('/',p) > 0                                       02220000
  then                                                                  02230000
    p = "'"p"'"                                                         02240000
parms = parms || p || finc                                              02250000
end                                                                     02260000
function="MSG"                                                          02270000
interpret "rc="function||parms                                          02280000
return                                                                  02290000
