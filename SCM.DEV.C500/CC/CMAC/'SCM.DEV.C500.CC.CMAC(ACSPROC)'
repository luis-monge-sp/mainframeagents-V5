/**************************************************************
* Title            : Control process table functions          *
* File Name        : acsproc.h                                *
* Author           : LS/YY                                    *
* Creation Date    : 18/07/94                                 *
* Description      :                                          *
* Assumptions and                                             *
*   Considerations :                                          *
* $Author:   avi_w  $
* $Workfile:   acsproc.h  $
* $Revision:   1.0  $
* $Log:   //EAGLE1/VERSIONS/300/COMMON/INC/acsproc.h_v  $
 *
 *    Rev 1.0   Aug 31 1998 19:02:04   avi_w
 *
 *
 *    Rev 1.10   Jul 26 1998 14:02:48   leonid_s
 * No change.
 *
 *    Rev 1.9   Jul 13 1998 11:45:26   leonid_s
 * Added TYPE_MODE_typ param. in 'time_check' func.
 *
 *    Rev 1.8   Apr 01 1998 14:23:32   leonid_s
 * 300-Beta release of SA-Agent
 *
 *    Rev 1.7   Jan 21 1998 18:53:38   leonid_s
 * 300-Beta with AS400 & VMS changes
 *
 *    Rev 1.6   Oct 08 1997 16:25:14   leonid_s
 * Added CS_detach_rss (void) function
 *
 *    Rev 1.5   Oct 07 1997 15:04:16   Avi_w
 * Added 2 parameters (rss_name & rss_type to
 *                      'CS_versions_compare' function
 *
 *    Rev 1.4   Aug 04 1997 12:46:32   leonid_s
 * Added parametres in CS_attach_rss function
 *
 *    Rev 1.3   Jul 27 1997 10:32:32   Danko
 * converting_from_sccs
 *
 *    Rev 1.2   Jul 24 1997 08:29:42   leonid_s
 *     SCCSID("%Z%%M% \
 *
 *
 *    Rev 1.1   Jul 08 1997 10:08:40   avi_w
**************************************************************/
/* SCCSID %Z%%M% */

#ifndef ACSPROC_H_included
#define ACSPROC_H_included

#include "globs.h"

#include ESA_API
#include TIME

typedef enum {
    TIME_REGULAR_MODE,
    TIME_EXTENDED_MODE
} TIME_MODE_typ;

#define SKIP_RECORD "*\n"


/* Following are for MVS --- alalal */
#define CS_intercept_scheduler     PROC001
#define CS_intercept_starttime     PROC002
#define CS_intercept_end           PROC003
#define CS_sync_start              PROC004
#define tbl_load                   PROC005
#define tbl_check                  PROC006
#define time_check                 PROC007
#define date_check                 PROC008
#define CS_get_cur_time            PROC009
#define to_time_tm_convert         PROC010
#define from_time_tm_convert       PROC011
#define set_next_time              PROC012
#define to_min_convert             PROC013
#define tbl_rebuild                PROC014
#define CS_intercept_change        PROC015
#define CS_versions_compare        PROC016
#define CS_attach_rss              PROC017
#define CS_detach_rss              PROC018
#define CS_rss_status_scheduler    PROC019
#define TrnsfIntervalToNumber      PROC020
#define FindNextOfliTime           PROC021
 /* MVS */

/* Loaded raw entry   */

#define MAX_FIGURES_IN_LONG_INT    10


typedef struct S_RSSTBL_STRUCT {
  RSS_typ          rss;
  char             fil1;
  DATE_typ         intercept_next_date;
  TIME_typ         intercept_next_time;
  char             fil2;
  DATE_typ         intercept_end_date;
  TIME_typ         intercept_end_time;
  char             fil3;
  DATE_typ         sync_start_date;
  TIME_typ         sync_start_time;
  char             fil4;
  DATE_typ         intercept_till_date;
  TIME_typ         intercept_till_time;
  char             fil5;
  DATE_typ         log_last_update_date;
  TIME_typ         log_last_update_time;
  char             fil6;
  char             log_last_recnum[MAX_FIGURES_IN_LONG_INT];
  char             fil7;
  char             host[HOST_NAME_LENGTH+ 1];
  char             fil8;
  char             dwnld_sync_method;
  char             end_row;
  char             end_string;
} RSSTBL_rec_typ, *RSSTBL_rec_ptr;


/**************************************************************
 * Procedure Name   : CS_intercept_scheduler                  *
 * Description      : Control interceptor activity            *
 * Return Value     : ESA_RC                                  *
 *************************************************************/

extern ESA_RC CS_intercept_scheduler (void);

/**************************************************************
* Procedure Name   : CS_intercept_starttime                   *
*                                                             *
* Description      : get the interceptor start time           *
*                                                             *
* Return Value     : ESA_RC                                   *
**************************************************************/

ESA_RC CS_intercept_starttime (RSS_typ              rss_name,
                               TIME_RANGE_rec_typ * time_range);

/**************************************************************
 * Procedure Name   : CS_intercept_end                        *
 * Description      : Signal to CS that interceptor has       *
 *                    finished its activity                   *
 * Input            : rss            - RSS name               *
 *                    end_date - date and time when interceptor
 *                               wrote last record.           *
 *                    end_time -                              *
 * Input/Output       msg_params - for CTSAMSG printing       *
 * Return Value     : ESA_OK/ESA_FATAL                        *
 *************************************************************/

extern ESA_RC CS_intercept_end (RSS_typ   rss,
                                DATE_typ  end_date,
                                TIME_typ  end_time);

/**************************************************************
*                                                             *
* Procedure Name   : tbl_load                                 *
*                                                             *
* Description      : Load process control table file          *
* input/output     : rss_num - number loaded rsses            *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC tbl_load (RSSTBL_rec_typ       ** rsstbl,
                 int                   * rsstbl_num);

/**************************************************************
*                                                             *
* Procedure Name   : tbl_check                                *
*                                                             *
* Description      : Validity check of the process table row  *
*                                                             *
* input            : i - row number                           *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC tbl_check (RSSTBL_rec_typ       * rsstbl);

/**************************************************************
*                                                             *
* Procedure Name   : time_check                               *
*                                                             *
* Description      : Validity check of the time field         *
*                                                             *
* input            : time  field                              *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC time_check (TIME_typ      time_field,
                   TIME_MODE_typ time_mode);

/**************************************************************
*                                                             *
* Procedure Name   : date_check                               *
*                                                             *
* Description      : Validity check of the date field         *
*                                                             *
* input            : date  field                              *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC date_check (DATE_typ  date_field);

/**************************************************************
*                                                             *
* Procedure Name   : CS_get_cur_time                          *
*                                                             *
* Description      : Get current time                         *
*                                                             *
* input            : date  field                              *
*                    time  field                              *
* Return Value     : ESA_RC                                   *
**************************************************************/

void CS_get_cur_time (DATE_typ  date_field,
                      TIME_typ  time_field);

/**************************************************************
*                                                             *
* Procedure Name   : to_time_tm_convert                       *
*                                                             *
* Description      : Convert DATE_typ and TIME_typ data       *
*                            to time_tm data                  *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

void to_time_tm_convert (struct tm * tmtime,
                         DATE_typ    a_date,
                         TIME_typ    a_time);

/**************************************************************
*                                                             *
* Procedure Name   : from_time_tm_convert                     *
*                                                             *
* Description      : Convert to DATE_typ and TIME_typ data    *
*                            from time_tm data                *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

void from_time_tm_convert (struct tm * tmtime,
                           DATE_typ    a_date,
                           TIME_typ    a_time);

/**************************************************************
*                                                             *
* Procedure Name   : set_next_time
*                                                             *
* Description      : Set time for start next interceptor process
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC set_next_time (char            * RssName,
					  TIME_typ          interval,
                      DATE_typ          next_date,
                      TIME_typ          next_time);

/**************************************************************
*                                                             *
* Procedure Name   : to_min_conevert                          *
*                                                             *
* Description      : Convert hh.mm.ss to minutes              *
*                                                             *
* input            : time  field                              *
*                                                             *
* Return Value     : minuts                                   *
*                                                             *
**************************************************************/

long int to_min_convert (TIME_typ  time_field);

/**************************************************************
* Procedure Name   : tbl_rebuild                              *
*                                                             *
* Description      : rewrite rows from the memory buffer      *
*                                                             *
* input            : rss_num - number rows to write           *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC tbl_rebuild (RSSTBL_rec_typ       * rsstbl,
                    int                    rss_num);

/**************************************************************
 * Procedure Name   : CS_intercept_change
 *
 * Description      : Change 'range time' in specific 'rss' record
 *                       in file 'rssproc' from ESS message
 * input            : range time
 *                    rss
 * Return Value     : ESA_RC
 *                                                             *
 **************************************************************/

extern ESA_RC CS_intercept_change (TIME_RANGE_rec_typ * range_time);

/**************************************************************
*                                                             *
* Procedure Name   : CS_attach_rss                            *
*                                                             *
* Description      : attach  and apiinit new RSS              *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CS_attach_rss (ADMIN_PARAMS_rec_typ * admin_params,
					  HOT_PATH_typ           attached_hot_path,
					  RSS_typ                rss_name,
                      RSS_typ                rss_type);


/**************************************************************
*                                                             *
* Procedure Name   : CS_detach_rss                            *
*                                                             *
* Description      : apiterm and detach  old RSS              *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CS_detach_rss (void);

/**************************************************************
*                                                             *
* Procedure Name   : CS_versions_compare                      *
*                                                             *
* Description      : Compare CTS version with API version     *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CS_versions_compare (RSS_vers_typ  api_version,
                            RSS_typ       rss_name,
                            RSS_typ       rss_type);

/****************************************************
 * Procedure Name: CS_rss_status_scheduler
 * Description   : Check RSS status ACTIVE or INACTIVE  .
 *                 for every yet inactive RSS and
 *                 if RSS alreadt Active
 *                 send UQ message to ESS about it
 ****************************************************/

ESA_RC CS_rss_status_scheduler (void);

void FindNextOfliTime (char * RssName, struct tm * ntime);

void TrnsfIntervalToNumber (char * IntrvlStr, long int * IntrvlNum);

#endif  /* ACSPROC_H_included */
