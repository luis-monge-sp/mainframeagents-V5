/****************************************************
* Title           : SA-Agent Global Definitions
* File Name       : globs.h
* Author          : Amir
* Creation Date   : 15-Feb-94
* Description     : Global definitions
*****************************************************/
/****************************************************
* SAS2IBMN NuritY   10/10/16 SAS/C to IBM C Conversion:
*                            1. Include ESAVER for eye-catcher.
*                            2. Set c options.
* BS10067  SeligT   19/09/17 Change Batch Utility Message Header/Footer
* BS10076  SeligT   11/12/17 Organize Connector Locking Functions
*                            and Structures
* IS10184  NuritY   01/09/21 Improve scripts performance.
*****************************************************/

#ifndef GLOBS_H_INCLUDED
#define GLOBS_H_INCLUDED

#define  _ISOC99_SOURCE      /* This feature test macro      IS10184 */
                             /* makes available all          IS10184 */
                             /* interfaces associated with   IS10184 */
                             /* ISO/IEC 9899:1999 except for IS10184 */
                             /* interfaces requiring a       IS10184 */
                             /* compiler that is designed to IS10184 */
                             /* support C99.                 IS10184 */

#pragma  enum(int)                                       /* SAS2IBMN */
#pragma strings(readonly)    /* This is the default but we force it  */
                             /* in case the default is changed. With */
                             /* this option C defines the string     */
                             /* literals in the constants area which */
                             /* is part of the executable code. This */
                             /* way, pointers to string literals can */
                             /* be returned by funcitons knowing that*/
                             /* the string literal will not be       */
                             /* released or overlayed after the      */
                             /* function ternimates.        SAS2IBMN */

#include "esaglobs.h"
#include ESA_VER                                         /* SAS2IBMN */

 /* MVS */
/* moved to esaglobs.h
#ifndef NOVELL
#define   TRUE  1
#define   FALSE 0
#endif
*/

#define  EXT   extern      /* Functions are always external - Nurit 22.8.16 */

/* For SCRIPTS */
#define SCRIPT_DEL_KWD_1       "__DELETE__"
#define SCRIPT_DEL_KWD_2       "**DELETE**"

/* RSS Parameter names (for every RSS)*/

#define COMPRESS_FILE_MODE         "COMPRESS_FILE_MODE"
#define SEND_RSSPRM_TO_SCRIPT      "SEND_RSSPRM_TO_SCRIPT"
#define OFFLI_RUN_TIME_LIST        "OFLI_RUN_TIME_LIST"
#define RSSTYPE_DLL                "RSSTYPE_DLL"
#define SEND_PWD_TO_SCRIPT         "SEND_PWD_TO_SCRIPT"
#define CHECK_SYNC_OBJS            "CHECK_SYNC_OBJS"
#define STOP_REQ_MSGS              "STOP_REQ_MSGS"
#define STATIST_INTRVL             "STATIST_INTRVL"
#define STAT_CHKSUM_INTRVL         "STAT_CHKSUM_INTRVL"
#define LOG_INTERCEPT_MSG          "LOG_INTERCEPT_MSG"
#define LOG_GET_MSG                "LOG_GET_MSG"
#define WAIT_QUEUE                 "WAIT_QUEUE"
#define WAIT_QUEUE_INTERVAL        "WAIT_QUEUE_INTERVAL"  /* BS10076 */
#define WAIT_LOCK                  "WAIT_LOCK"
#define WAIT_LOCK_INTERVAL         "WAIT_LOCK_INTERVAL"   /* BS10076 */
#define OFLI_RUN_INTERVAL          "OFLI_RUN_INTERVAL"
#define OFLI_WAIT_INTERVAL         "OFLI_WAIT_INTERVAL"
#define OFLI_INTERVAL              "OFLI_INTERVAL"
#define OFLI_INTERCEPT             "OFLI_INTERCEPT"
#define DELETE_INTERCEPT_CHECK     "DELETE_INTERCEPT_CHECK"
#define MAX_SEND_MSGS_SEQ_CE       "MAX_SEND_MSGS_SEQ_CE"
#define RSS_TYPE                   "RSS_TYPE"
#define SYNC_SEMAPHORE             "SYNC_SEMAPHORE"
#define ONLI_SEMAPHORE             "ONLI_SEMAPHORE"
#define PASS_PASSWORD              "PASS_PASSWORD"
#define SCRIPT_DIR                 "SCRIPT_DIR"
#define OFLI_VERBOSE               "OFLI_VERBOSE"
#define ADMIN_FILE_REQUEST         "ADMIN_FILE_REQ"
#define ADMIN_USER_REQUEST         "ADMIN_USER_REQ"
#define ADMIN_CASE_SENSITIVE       "ADMIN_CASE_SENS"
#define DEFAULT_ADMINISTRATOR      "DEFAULT_ADMIN"
#define DEFAULT_CS_ADMINISTRATOR   "DEFAULT_CS_ADMIN"
#define DEFAULT_CD_ADMINISTRATOR   "DEFAULT_CD_ADMIN"
#define DEFAULT_OFLI_ADMINISTRATOR "DEFAULT_OFLI_ADMIN"
#define RSS_STATUS_INTERVAL        "STATUS_INTERVAL"
#define LIST_STRING_ENTRY_SEPARATOR  "SCRIPT_SEP_ENTRY"
#define LIST_STRING_SUBFLD_SEPARATOR "SCRIPT_SEP_FIELD"
#define CO_LOOP_SLEEP_TIME_PRM     "CO_LOOP_SLEEP_TIME"  /* WSAN100671 */
#define CO_SLEEP_TIME_PRM          "CO_SLEEP_TIME"       /* WSAN100671 */
#define SUPPORTED_USA_API          "SUPPORTED_USA_API"   /* ISAN000925 */

/*  All processes & utilities */

#define ESA_MAIN_CE        "MAIN_CE"
#define ESA_MAIN_CD        "MAIN_CD"
#define ESA_MAIN_CS        "MAIN_CS"
#define ESA_MAIN_ONLI      "MAIN_ONLI"
#define ESA_MAIN_OFLI      "MAIN_OFLI"
#define ESA_MAIN_PSWD      "MAIN_PSWD"     /* Password interceptor */
#define ESA_MAIN_ACSDIAG   "MAIN_ACSDIAG"
#define ESA_MAIN_ACSPRC    "MAIN_ACSPRC"
#define ESA_MAIN_ACSADM    "MAIN_ACSADM"
#define ESA_MAIN_KGEN      "MAIN_KGEN"
#define ESA_MAIN_QCR       "MAIN_QCR"
#define ESA_MAIN_QPR       "MAIN_QPR"
#define ESA_MAIN_CTSC100   "MAIN_CTSC100"
#define ESA_MAIN_PWI       "MAIN_PWI"
#define ESA_MAIN_TEST      "MAIN_TEST"
#define ESA_MAIN_MBX       "MAIN_MBX_LIB"
#define ESA_MAIN_OTHER     "MAIN_OTHER"
#define ESA_MAIN_ACSADAPT  "MAIN_ACSADAPT"
#define ESA_MAIN_ACSALERT  "MAIN_ACSALERT"
#define ESA_MAIN_CTSHTDWN  "MAIN_CTSHTDWN"
#define ESA_MAIN_CTSCTRL   "MAIN_CTSCTRL"
#define ESA_MAIN_APIVER    "MAIN_APIVER"        /* ISAN000948 */
#define ESA_MAIN_EXTERNAL  "EXTERNAL"
#define ESA_MAIN_CTSINTRC   "MAIN_CTSINTRC"

#define ESA_CE             "CE Server"
#define ESA_CD             "CD Server"
#define ESA_CS             "CS Server"
#define ESA_ONLI           "Online Interceptor"
#define ESA_OFLI           "Offline Interceptor"
#define ESA_PWI            "Password Interceptor"
#define ESA_ACSDIAG        "CTSDIAG Utility"
#define ESA_ACSPRC         "CTSPRC Utility"
#define ESA_ACSADM         "Admin File Utility"
#define ESA_KGEN           "CTSKGEN Utility"
#define ESA_QCR            "Queue Format Utility"
#define ESA_QPR            "Queue Print Utility"
#define ESA_CTSC100        "CTSC100 Utility"
#define ESA_ACSADAPT       "CTSADAPT Utility"
#define ESA_ACSALERT       "Alert Utility"
#define ESA_CTSHTDWN       "Shutdown Utility"
#define ESA_CTSCTRL        "Service Control Utility"
#define ESA_APIVER         "Print API Version Utility"
/* BS10067
#define ESA_TEST           "USAAPI Test Utility"                     */
#define ESA_TEST           "Batch Utility"                /* BS10067 */
#define ESA_CTSINTRC        "Recovery Interception Events Utility"

#define ESA_MBX            "Mailbox Library"

#define ESA_OTHER          "*UNKNOWN*"

typedef enum ESA_MAIN_typ {ESA_ACE_PROC,
                           ESA_ACS_PROC,
                           ESA_ACD_PROC,
                           ESA_ONLI_PROC,
                           ESA_OFLI_PROC,
                           ESA_ACSDIAG_PROC,
                           ESA_ACSPRC_PROC,
                           ESA_ACSADM_PROC,
                           ESA_ACSALERT_PROC,
                           ESA_KGEN_PROC,
                           ESA_QCR_PROC,
                           ESA_QPR_PROC,
                           ESA_CTSC100_PROC,
                           ESA_TEST_PROC,
                           ESA_MBX_PROC,
                           ESA_OTHER_PROC,
                           ESA_ALL_PROC,
                           ESA_ACSADAPT_PROC,
                           ESA_PWI_PROC,
                           ESA_CTSHTDWN_PROC,
                           ESA_CTSCTRL_PROC,
						   ESA_APIVER_PROC,
                           ESA_EXTERNAL,
						   ESA_CTSINTRC_PROC
} ESA_MAIN_NAME_typ;

/****************************************************
 * ESA Platform-independent Include Files
 ****************************************************/

#define  ESA_DB         "esadb.h"
#define  ESA_SYNC       "acssync.h"
#define  ESA_ACSSYNC    "acssync.h"
#define  ESA_PUMP       "acspump.h"
#define  ESA_ACSPUMP    "cspump.h"
#define  ESA_MSG        "esamsg.h"    /* CS Masseges             */
#define  ESA_MSG_GPF    "esamgpf.h"   /* CS Masseges global      */
#define  ESA_MSG_SETF   "esamset.h"   /* CS Masseges set func    */
#define  ESA_MSG_GETF   "esamget.h"   /* CS Masseges get func    */

#define  ESA_CS_DBPKG   "acsdbpk.h"   /* CS DataBase             */
#define  ESA_CS_SINFO   "acsinfo.h"   /* CS Struct to addinfo    */

#define  ESA_CS_OS      "esaoscs.h"   /* CS OS functions         */
#define  ESA_OS_PROC    "osproc.h"    /* OS_PROC stuff           */
#define  ESA_OS_MBX     "esambx.h"    /* Mailbox crapola         */
#define  ESA_OS_EVENT   "osevent.h"   /* OS events               */
#define  ESA_OS_CONSOLE "osconso.h"   /* Messages to console     */

#define  ESA_OS_SOCKOPS "sockops.h"   /* TCP/IP sockets ops      */

#define  ESA_CAREUSR    "acscarf.h"   /* care control entity         */
#define  ESA_ADMIN      "acsadm.h"    /* administrators maintanance  */
#define  ESA_INIT       "esainit.h"   /* for main and init. routines */
#define  ESA_PROC       "acsproc.h"   /* for start/end interceptor   */
#define  ESA_RSSF       "esarssf.h"   /* for RSS _ api functions     */
#define  ESA_RSS        "acsrss.h"    /* for RSS params              */
#define  ESA_ACSU       "acsu.h"

/* moved to esaglobs.h */
/*#define  ESA_DIAG       "esadiag.h"*/

#define  ESA_QUEUE      "esaque.h"
#define  ESA_QUEUE_OS   "esaqos.h"

/********************************************
 * Grand Unified Offline Interceptor stuff
 *******************************************/

#define  ESA_OS_OFLI    "osofli.h"
#define  ESA_ESAOFLI    "esaofl.h"
#define  ESA_ESAOFIO    "esaoflio.h"
#define  ESA_ESALIST    "esalist.h"

/********************************************
 * AR DES stuff
 *******************************************/

#define  AR_DES         "ardes.h"
#define  AR_TBL         "artbl.h"
#define  ENC_API        "encapi.h"

#define  ESA_CHKSUM     "chksum.h"

/* Include ESA_DIAG component defines */

#include  "esacomp.h"

/********************************************
 * CE (suco)
 *******************************************/

#define CE_COMM           "cecommsg.h"
#define CE_COMM_          "cecomsts.h"
#define CE_DB_IN          "ceprocnm.h"
#define CE_CONTA          "cecomcon.h"
#define CE_DISPA          "cedispat.h"
#define CE_ERR            "ceerrmsg.h"
#define CE_ERR_D          "ceerrdta.h"
#define CE_HDR_D          "cemsghdr.h"
#define CE_IPC            "cecomipc.h"
#define CE_MSG_B          "cemsgbod.h"
#define CE_PRIO           "cepriort.h"
#define CE_S_CO           "cesessds.h"
#define CE_S_CO_          "cesocket.h"
#define CE_S_IPR          "cecsmsgt.h"
#define CE_SESS           "cesessmn.h"
#define CE_SRVC           "cecssrvc.h"
#define CE_SRVC_          "cecspool.h"
#define CE_SRVR           "cecdsrvc.h"
#define CE_SRVR_          "cecdpool.h"
#define CE_STATU          "ceprcsts.h"

#define CE_OSMBX          "ce_osmbx.h"


/* Define default level for ESA_DIAG_enter/exit */

#ifndef  DIAG_ENTER_LEVEL
#define  DIAG_ENTER_LEVEL   5
#endif

#endif /* GLOBS_H_INCLUDED */
