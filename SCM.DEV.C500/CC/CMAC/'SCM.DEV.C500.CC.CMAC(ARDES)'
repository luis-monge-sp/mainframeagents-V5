/***********************************************************************
* Title:            Algorithmic Research DES include
* File Name:        ardes.h
* Author:           Algorithm Research
* Creation Date:    14-11-94
* Description:
* Assumptions and
*   Considerations:
* $Author:   leonid_s  $
* $Workfile:   ardes.h  $
* $Revision:   1.2  $
* $Log:   //netapp-nt1/versions/300/crypt/inc/ardes.h_v  $
 *
 *    Rev 1.2   Jul 01 1999 16:53:46   leonid_s
 * Rows exceed 72
 *
 *    Rev 1.1   06 Jan 1999 18:07:34   amir
 * use 'long int' instead of 'unsigned long int'
 * on Digital Unix - long is 64 bit on Alpha
 *
 *    Rev 1.0   Aug 31 1998 19:04:50   avi_w
 *
 *
 *    Rev 1.3   Jan 21 1998 19:00:12   leonid_s
 * 300-Beta with AS400 & VMS changes
 *
 *    Rev 1.2   Jul 24 1997 08:32:54   leonid_s
 *     SCCSID("%Z%%M% \
 *
 *    Rev 1.1   Jul 08 1997 10:38:06   avi_w
**********************************************************************/
/*ILS006  ILANTUS  28-Mar-2006 	CRYPT_64BIT:Changed long to int for 64bit
 *                                      Solaris 10 on X86 systems
 * SAS2IBMN NuritY  07/11/16  Compile with IBM XL C/C++:
 *                            1. Remove #if for __STDC__ and leave
 *                               the code for the defined part.
 *                               The code generated when not defined
 *                               will be needed if we change the
 *                               LANGLVL compiler option to be
 *                               COMMONC. If this happens, we will
 *                               look in the SAS/C source for needed
 *                               code.
**********************************************************************/

#ifndef   AR_DES_H_INCLUDED
#define   AR_DES_H_INCLUDED

/* for MVS only */
#define AR_ks            arksf
#define ksf              arksf
#define AR_des           ardesf
#define desf             ardesf
#define AR_strenc        arksenc
#define strenc           arksenc
#define AR_strdec        arksdec
#define strdec           arksdec
#define AR_make_random   arkmrnd
#define make_random      arkmrnd
/* MVS */

/***************************************************/

/* #define DW *(DWORD *) */
typedef unsigned char  UNSBYTE;

#ifndef NOVELL

#ifndef OS2

typedef unsigned short WORD;

#if defined (OSF1)                /* Amir 06-Jan-1999 */
typedef unsigned       DWORD;     /* 32-bit on Alpha */

/*ILANTUS ILS006*/
/*Changed long to int for 64bit Solaris on X86 systems*/
#elif (defined (Solaris)) && (defined (__x86)) && (defined (_LP64))
typedef unsigned int  DWORD;
/*ILANTUS ILS006*/

#else
typedef unsigned long  DWORD; /* 64-bit on Alpha, 32-bit on others */
#endif

#endif
#endif

#define byte  UNSBYTE
#define word  WORD
#define dword DWORD

/* CHANGE from [33] to [64] by AVIW 15-DEC-1994*/

typedef DWORD    DESR    [64];
typedef UNSBYTE  BULKT [1028];

typedef union {
    struct {
        DWORD c1_l[2];
        DWORD c2_l[2];
    } Align ;
    struct {
        UNSBYTE c1[8];
        UNSBYTE c2[8];
    } c;
} FPCHN;

typedef struct {
    FPCHN cc1;
    FPCHN cc2;
    UNSBYTE tail[8];
    WORD lentail;
} STRFP;

typedef struct {
    UNSBYTE i0[8];
    UNSBYTE o0[8];
} CCFBCHN;

typedef struct {
    UNSBYTE i0[8];
    UNSBYTE o0[8];
    UNSBYTE fh2[8];
    int     lentail;
} STRCHN;

extern void ksf         (
                         UNSBYTE      *key,
                         DWORD        *ksch,
                         int           encdec
                        );
extern void ctsaks      (
                          UNSBYTE      *key,
                          DWORD        *ksch,
                          int           encdec
                        );
extern void desf        (
                          UNSBYTE      *arg,
                          UNSBYTE      *res,
                          DWORD        *ksch
                        );
extern void ctsades     (
                          UNSBYTE      *arg,
                          UNSBYTE      *res,
                          DWORD        *ksch
                        );
extern void strenc      (
                          UNSBYTE      *clear,
                          UNSBYTE      *cipher,
                          unsigned int  len,
                          STRCHN       *chain,
                          DWORD        *desr,
                          int           auth
                        );
extern int  strdec      (
                          UNSBYTE         *cipher,
                          UNSBYTE         *clear,
                          unsigned int     len,
                          STRCHN          *chain,
                          DWORD           *desr,
                          int              auth
                        );
extern void make_random (
                          UNSBYTE         *weak,
                          int              len ,
                          UNSBYTE         *random
                        );
#endif   /* AR_DES_H_INCLUDED */
