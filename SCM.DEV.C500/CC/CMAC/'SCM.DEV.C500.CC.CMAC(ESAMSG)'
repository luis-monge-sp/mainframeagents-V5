/***********************************************
* Title:              ESAs-MESSAGE interface
* File Name:          esamsg.h
* Author:             Yaniv Yassour
* Creation Date:      10-Feb-94
* Description:        Message protocol between ESS and CSA
* Assumptions and
*   Considerations:
* $Author:   leonid_s  $
* $Workfile:   esamsg.h  $
* $Revision:   1.5  $
* $Log:   //eagle1/versions/300/inc/esamsg.h_v  $
 *
 *    Rev 1.5   Nov 09 1998 09:45:34   leonid_s
 * Release 3.0.1
 *
 *    Rev 1.4   Apr 01 1998 14:31:58   leonid_s
 * 300-Beta release of SA-Agent
 *
 *    Rev 1.3   Jan 21 1998 19:00:36   leonid_s
 * 300-Beta with AS400 & VMS changes
 *
 *    Rev 1.2   Jul 24 1997 08:41:56   leonid_s
 *     SCCSID("%Z%%M% \
 *
 *    Rev 1.1   Jul 08 1997 10:57:46   avi_w
*****************************************************/
/***********************************************
 * Mod.ID  Who			When         Description
 * =============================================
 * AGGR	   Ajay  		24/06/13	 Bug 11666 (for IdentityIQ)-
 *									 Aggregation performance improvement for Agents.
 * AC001   ArunC        12/04/17     CIQ#6-MF acct aggr with conns
 *WS10078KGKailasP     23/04/20      Support Roles and Source
 **********************************************/

/* SCCSID %Z%%M% */

#ifndef ESAMSG_H_INCLUDED
#define ESAMSG_H_INCLUDED

#include "globs.h"

#include ESA_INIT
#include ESA_CS_OS

/* IMPORTANT: The includes of ESA_MSG_GPF, ESA_MSG_SET, ESA_MSG_GET
 * are at END OF THE THIS FILE. DO NOT move them to beginning !!!
 */

/* for MVS only */

#define CS_message_loop             CSEF001
#define CS_get_next_msg             CSEF002
#define CS_get_msg_header           CSEF003
#define CS_get_admin_params         CSEF004
#define CS_print_mh                 CSEF005
#define CS_start_service            CSEF006
#define CS_queue_msgs               CSEF007
#define CS_remove_not_interes_conn  CSEF008
#define CS_oe_get                   CSEF009
#define CS_oe_set                   CSEF010
#define CS_print_srvmsg             CSEF011
#define CS_get_fld                  CSEF012
#define CS_get_enum_fld             CSEF013
#define CS_get_user                 CSEF014
#define CS_get_ug                   CSEF015
#define CS_get_u2ug                 CSEF016
#define CS_get_admin                CSEF017
#define CS_get_res                  CSEF018
#define CS_get_rss                  CSEF019
#define CS_get_ace                  CSEF020
#define CS_get_ace_place            CSEF021
#define CS_get_cntrlsa_keys         CSEF023
#define CS_capi_to_api_id           CSEF024
#define CS_get_typ_of_addinfo       CSEF025
#define CS_confirm                  CSEF026
#define CS_error                    CSEF027
#define CS_get_aplic_msg            CSEF028
#define CS_get_rss_msg              CSEF029
#define CS_get_singl_msg            CSEF030
#define CS_drop_all                 CSEF031
#define CS_upload_ess_definitions   CSEF032
#define CS_user_set                 CSEF033
#define CS_ug_set                   CSEF034
#define CS_u2ug_set                 CSEF035
#define CS_ug2rs_set                CSEF036
#define CS_ace_set                  CSEF037
#define CS_res_set                  CSEF038
#define CS_rssprm_set               CSEF039
#define CS_adm_set                  CSEF040
#define CS_ctsa_keys                CSEF041
#define CS_download_csa_definitions CSEF042
#define CS_user_get                 CSEF043
#define CS_ug_get                   CSEF044
#define CS_ug2uc_get                CSEF045
#define CS_res_get                  CSEF046
#define CS_rsacl_get                CSEF047
#define CS_rsprm_get                CSEF048
#define CS_pre_post_users           CSEF049
#define CS_pre_post_ug              CSEF050
#define CS_pre_post_u2ug            CSEF051
#define CS_pre_post_res             CSEF052
#define CS_pre_post_ace             CSEF053
#define CS_pre_post_rssprm          CSEF054
#define CS_get_oe                   CSEF055
#define CS_reset_cd_msg             CSEF056
#define CS_add_cd_msg               CSEF057
#define CS_send_end_of_srv_instance CSEF058
#define CS_send_cd_msg              CSEF059
#define CS_ess_initial_service      CSEF060
#define CS_date                     CSEF061
#define CS_pre_post_oe              CSEF064
#define CS_esarc_to_mesarc          CSEF065
#define CS_fill_in_user             CSEF066
#define CS_fill_in_ug               CSEF067
#define CS_fill_in_u2ug             CSEF068
#define CS_reset_cs_msg             CSEF071
#define CS_set_tran                 CSEF072
#define CS_set_tmp_last_msg         CSEF074
#define CS_set_not_last_msg         CSEF075
#define CS_add_cs_msg               CSEF076
#define CS_set_exist                CSEF082
#define CS_set_rsprm                CSEF084
#define CS_set_user                 CSEF085
#define CS_set_ug                   CSEF086
#define CS_set_u2ug                 CSEF087
#define CS_set_res                  CSEF088
#define CS_set_ace                  CSEF089
#define CS_add_sngl_to_msg          CSEF090
#define CS_creat_cd_msg             CSEF091
#define CS_db_usr_open              CSEF093
#define CS_db_ug_open               CSEF094
#define CS_db_u2ug_open             CSEF095
#define esuser                      CSEF096
#define esrs                        CSEF097
#define CS_fill_in_oe               CSEF098
#define CS_db_oe_open               CSEF099
#define CS_set_oe                   CSEF100
#define CS_set_tran_wild_user       CSEF101
#define CS_set_tran_wild_u2ug       CSEF102
#define CS_dwnld_ess_definitions     CSEF109
#define CS_update_rss_definitions   CSEF110
#define CS_sync_ess_definitions     CSEF111
#define CS_pre_post_common          CSEF112
#define CS_attach_empty_to_unsupported CSEF113
#define CB_start_service            CBEF001

 /* MVS */

/**************************************************
 * communication definitions                      *
 **************************************************/

#define  MESA_OK            '0'
#define  MESA_SKIP          '1'
#define  MESA_WARN          '2'
#define  MESA_ERR           '3'
#define  MESA_FATAL         '4'
#define  MESA_LOCKED        '5' /* File/record already locked */
#define  MESA_KEY_NOT_FOUND '6' /* key not found in DB        */
#define  MESA_DUP_KEY       '7' /* duplicate key found in DB  */
#define  MESA_EOF           '8' /* End of file encountered    */
#define  MESA_NOT_SUPP      '9'
#define  MESA_RC_UNDEFINED  'A'
#define  MESA_RC_VOID       'B'
#define  MESA_RSS_INACTIVE  'C'


/* Pump codes */

#define M_DWNLD_INITIAL               '1'
#define M_DWNLD_INCREMENT             '2'

#define M_SYNC_FULL                   '1'
#define M_SYNC_PARTIAL                '2'

#define M_DWNLD_FROM_NOT_SPECIFIED    '0'
#define M_DWNLD_FROM_SPEC_USER        '1'
#define M_DWNLD_FROM_SPEC_GROUP       '2'
#define M_DWNLD_FROM_SPEC_CONNECTION  '3'
#define M_DWNLD_FROM_SPEC_CONTAINER   '4'

#define M_DWNLD_SYNC_METHOD_ALL_RSS   '1'
#define M_DWNLD_SYNC_METHOD_LIST      '2'
#define M_DWNLD_SYNC_METHOD_SUBTREE   '3'
#define M_DWNLD_SYNC_METHOD_UNDEFINED '4'

#define M_DWNLD_SYNC_LIST_NOT         '0'
#define M_DWNLD_SYNC_LIST_ALL         '1'
#define M_DWNLD_SYNC_LIST_YES         '2'

/* AGGR - S */
#define M_DWNLD_SYNC_LIST_ALL_GROUPS       '3'
#define M_DWNLD_SYNC_LIST_ALL_ACCS         '4'
#define M_DWNLD_SYNC_LIST_ALL_ACC_CONN     '5'
/* AGGR - E */
/* WS10078KG - Start */
#define M_DWNLD_SYNC_LIST_ALL_ROLES        '6'
#define M_DWNLD_SYNC_LIST_ALL_SOURCES      '7'
/* WS10078KG - End */

#define M_DWNLD_NAME_REGULAR          '0'
#define M_DWNLD_NAME_WILD             '1'
#define M_DWNLD_NAME_ALL              '2'
#define M_DWNLD_NAME_IGNORE           '3'

#define M_OBJ_EXIST                   "1"
#define M_OBJ_NOT_EXIST               "2"
#define M_OBJ_UNKNOWN                 "3"
#define M_OBJ_ERR                     "4"

#define M_HOT_PATH_ON                 "1"
#define M_HOT_PATH_OFF                "2"
#define M_HOT_PATH_FULL               "3"

#define TRAN_UNNONE             "T_UNNONE"

#define ENTITY_NOT_FOUND        "ENTITY_NOT_FOUND"
#define ENTITY_FOUND            "ENTITY_FOUND"
#define ENTITY_UNKNOWN          "ENTITY_UNKNOWN"
#define ENTITY_ERR              "ENTITY_ERR"

#define CD_SRVR_IS_READY        "SRVR_READY"
#define CD_SRVR_MSG_EXIT        "\377"
#define CD_SRVR_MSG_SESS_CLOSED "\376"
#define CD_SRVR_MSG_SRVC_DONE   "\374"
#define CD_NORMAL_STATUS        "\375e"
#define CD_NO_SYNC_STATUS       "\375b"
#define CD_SRVR_MSG_BRDCT       "\367"

#define CS_BRDCT_EVNT_OFLI_PARAMS 'P' /* Broadcast OFLI RSS param. */
#define CS_BRDCT_EVNT_ADMIN       'A' /* Broadcast administrators */
#define CS_BRDCT_EVNT             'E' /* Broadcast "event" message */
#define CS_BRDCT_EVNT_INTRST      'I' /* Broadcast interesting Users/
                                       Groups/Connections event */
#define CS_BRDCT_EVNT_KWDS        'K' /* Broadcast interesting keywords
                                       event */

#define CS_YES                  'Y'
#define CS_NO                   'N'
#define CSOK                    1
#define CSNOTOK                 0
#define CSON                    1
#define CSOFF                   0

/**************************************************
 * Length of messages elements                    *
 **************************************************/

#define RSS_NUM_MSGS_STR     "%02X"
#define RSS_MSG_LEN_STR      "%04X"
#define ADINF_NUM_PRS_STR    "%03X"
#define ADINF_KEY_LEN_STR    "%02X"
#define ADINF_VAL_LEN_STR    "%03X"

#define ERR_ID_STR           "%06d"
#define ERR_LNEGTH_STR       "%03X"

#define BK_MSG_STR           "%06d"
#define MAX_ERR_MSG_LEN      4095

/* Typedefs */

typedef char MESA_RC;

typedef char         TRAN_typ     [4];
typedef char         RSS_msgbr;
typedef short        CSFLAG;
typedef short        FUNC_ID_typ;
typedef char         CS_DATE      [6];

/********************************************/
/*  typedef for administrator               */
/********************************************/

typedef struct msg_u2ug_strct {
  RSS_MSG_HDR_rec_typ  msg_hdr;
  char                 num_msgs [RSS_NUM_MSGS];
  char                 msg_length [RSS_MSG_LEN];
  TRAN_typ             msg_tran;
  TRAN_typ             msg_actn;
  char msg_u2ug
    [MAX_RSS_UG_NAME_LEN+MAX_RSS_USER_NAME_LEN+STRUCT_LEN*2+3];
} MSG_U2UG_rec_typ, * MSG_U2UG_rec_ptr;

/********************************************/
/*  typedef for administrator               */
/********************************************/

typedef struct tran_strct {
  TRAN_typ           transaction;
  TRAN_typ           action;
  USER_typ           name;
  UG_typ             group;
} TRAN_rec_typ, * TRAN_rec_ptr;

/********************************************/
/*  typedef for confirm message             */
/********************************************/

typedef struct brdct_msg {
  char                cntrl_msg_type;
  char                msg_type;
  char                msg_subtype;
} BRDCST_rec_typ, * BRDCST_rec_ptr;

typedef struct cnfrm_msg {
  RSS_MSG_HDR_rec_typ msg_hdr;
  char                msg_num_msgs[RSS_NUM_MSGS];
  char                msg_length[RSS_MSG_LEN];
  TRAN_typ            msg_tran;
  TRAN_typ            msg_actn;
  MH_seq              msg_seq;
  CS_DATE             msg_date;
  CS_TIME             msg_time;
  char                agent_version[RSS_VERS_LEN+1]; /* AC001 - CIQ#6 */
  char                msg_terminate;
} RSS_MSG_CNFRM_rec_typ, * RSS_MSG_CNFRM_rec_ptr;

/********************************************/
/*  typedef for error message               */
/********************************************/

typedef struct error_msg {
  RSS_MSG_HDR_rec_typ msg_hdr;
  char                msg_num_msgs[RSS_NUM_MSGS];
  char                msg_length[RSS_MSG_LEN];
  TRAN_typ            msg_tran;
  TRAN_typ            msg_actn;
  MH_seq              msg_seq;
  CS_DATE             msg_date;
  CS_TIME             msg_time;
  char                msg_len[STRUCT_LEN];
  char                msg_txt [ERR_MSG_TEXT_LEN];
} RSS_MSG_ERR_rec_typ, * RSS_MSG_ERR_rec_ptr;

typedef struct cd_aplic_hdr {
  CS_DATE             cd_date;
  CS_TIME             cd_time;
  char                cd_num_msgs[RSS_NUM_MSGS];
} CD_APLIC_HDR_rec_typ, * CD_APLIC_HEADER_rec_ptr;

typedef struct cd_singl_msg {
  char                cd_len[RSS_MSG_LEN];
  TRAN_typ            cd_transaction;
  TRAN_typ            cd_action;
  MESA_RC             cd_pre_rc;
  MESA_RC             cd_act_rc;
  MESA_RC             cd_pst_rc;
} CD_SINGL_MSG_rec_typ, * CD_SINGL_MSG_rec_ptr;

/* typedef for 'ESS Cares About Entity' */

typedef enum _JUNK03_ {
    ESS_DONT_CARE,
    ESS_USER_CARE,
    ESS_GROUP_CARE,
    ESS_U2UG_CARE,
    ESS_OE_CARE
} ESS_INTRST_typ;

/********************************************/
/*        Macros                            */
/********************************************/

#define CS_CLEARI(PTR, SIZE) \
{ \
  memset ((char *)(PTR),NULL_CHAR,(SIZE)); \
}

#define ERROR_CLEAR(PTR) \
{ \
  memset ((char *)(PTR),NULL_CHAR, sizeof (ERR_STRUCT_rec_typ)); \
}

#define ERROR_COPY(PTR, SRC) \
{ \
  memcpy ((char *)(PTR), (char *)SRC, sizeof (ERR_STRUCT_rec_typ)); \
}

#define COND(CND) (memcmp ((CND), &msg_hdr.mhmtyp, 2) EQ 0)
#define COND_P(CND) (memcmp ((CND), &(msg_hdr->mhmtyp), 2) EQ 0)

void CS_attach_empty_to_unsupported (FUNC_PTR_rec_typ  * func_ptr);

#include ESA_MSG_GPF
#include ESA_MSG_SETF
#include ESA_MSG_GETF

#endif   /* ifndef ESAMSG_H_INCLUDED */
