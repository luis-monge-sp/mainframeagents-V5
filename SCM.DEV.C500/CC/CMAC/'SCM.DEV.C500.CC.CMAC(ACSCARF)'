/**************************************************************
* Title            : user / group importance for ESS          *
*                    (control and/or determination)           *
* File Name        : CAREUSR.h                                *
* Author           : Leonid Soikis                            *
* Creation Date    : 13/05/94                                 *
* Description      :                                          *
* Assumptions and                                             *
*   Considerations :                                          *
* $Author:   leonid_s  $
* $Workfile:   acscarf.h  $
* $Revision:   1.10  $
* $Log:   //eagle1/versions/300/cs/inc/acscarf.h_v  $
 *
 *    Rev 1.10   Nov 11 1998 14:31:30   leonid_s
 *
 *    Rev 1.9   Nov 11 1998 14:16:34   leonid_s
 * Download for Containers
 *
 *    Rev 1.8   Nov 09 1998 09:44:54   leonid_s
 * Release 3.0.1
 *
 *    Rev 1.7   Jul 26 1998 14:17:46   leonid_s
 * No change.
 *
 *    Rev 1.6   Jul 13 1998 11:48:34   leonid_s
 * Changed TMP_U2UGS_NUM from 20 to 500
 *
 *    Rev 1.5   Apr 01 1998 14:24:34   leonid_s
 * 300-Beta release of SA-Agent
 *
 *    Rev 1.4   Jan 21 1998 18:55:08   leonid_s
 * 300-Beta with AS400 & VMS changes
 *
 *    Rev 1.3   Oct 07 1997 13:03:16   leonid_s
 * INSURE++ changes
 *
 *    Rev 1.2   Jul 24 1997 08:21:56   leonid_s
 *     SCCSID("%Z%%M% \
 *
 *    Rev 1.1   Jul 08 1997 17:39:56   avi_w
**************************************************************/
/* SCCSID %Z%%M% */

#ifndef CARE_H_included
#define CARE_H_included

#include ESA_API
#include ESA_INIT
#include ESA_MSG


#define SW_NO  0
#define SW_YES 1
#define TMP_U2UGS_NUM     500
#define TMP_USERS_NUM     20
#define TMP_UGS_NUM       10
#define TMP_OES_NUM       10

/* for MVS only */
#define CARE_inc_to_int_copy           CSCR701
#define CARE_inc_users_fill            CSCR702
#define CARE_inc_ugs_fill              CSCR703
#define CARE_inc_only_ugs_fill         CSCR704
#define CARE_inc_u2ugs_fill            CSCR705
#define CARE_interesting_list_check    CSCR706
#define CARE_int_u2ugs_fill            CSCR707
#define CARE_inc_def_ugs_fill          CSCR708
#define CARE_inc_oes_fill              CSCR709
#define CARE_inc_get_next_oe           CSCR710
#define CARE_inc_ug_find               CSCR711
#define CARE_inc_object_in_oe		   CSCR712
#define CARE_inc_usr_find              CSCR713
#define CARE_inc_u2ug_find             CSCR714
#define CARE_inc_oe_find               CSCR715
#define CARE_inc_u2ug_free             CSCR716
#define CARE_inc_ug_free               CSCR717
#define CARE_inc_usr_free              CSCR718
#define CARE_inc_u2ug_to_memory        CSCR719
#define CARE_inc_ug_to_memory          CSCR720
#define CARE_inc_usr_to_memory         CSCR721
#define CARE_int_users_add             CSCR722
#define CARE_int_u2ugs_add             CSCR723
#define CARE_int_ugs_add               CSCR724
#define CARE_inc_oe_free               CSCR725
#define CARE_inc_oe_to_memory          CSCR726
#define CARE_int_oes_add               CSCR727
#define CARE_list_ug                   CSCR728
#define CARE_list_u2ug                 CSCR729
#define CARE_list_usr                  CSCR730
#define CARE_list_oe                   CSCR731
#define CARE_int_oe_load_without_rss   CSCR732
#define CARE_int_list_ug               CSCR733
#define CARE_int_list_u2ug             CSCR734
#define CARE_int_list_usr              CSCR735
#define CARE_int_list_oe               CSCR736
#define CARE_int_ug_load_without_rss   CSCR737
#define CARE_int_u2ug_load_without_rss CSCR738
#define CARE_int_usr_load_without_rss  CSCR739
#define CARE_int_object_in_oe          CSCR740
#define CARE_int_usr_load              CSCR741
#define CARE_int_ug_load               CSCR742
#define CARE_int_u2ug_load             CSCR743
#define CARE_int_usr_free              CSCR744
#define CARE_int_ug_free               CSCR745
#define CARE_int_u2ug_free             CSCR746
#define CARE_int_usr_find              CSCR747
#define CARE_int_ug_find               CSCR748
#define CARE_int_u2ug_find             CSCR749
#define CARE_int_oe_load               CSCR750
#define CARE_int_oe_free               CSCR751
#define CARE_int_oe_find               CSCR752
#define CARE_obj_type	               CSCR753
#define CARE_interest	               CSCR754
#define CARE_type	                   CSCR755
 /* MVS */

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_usr_load						  *
*                                                             *
* Description      : Load 'careusr'  file into storage        *
*                                                             *
* Input            :  1) rss            -  rss name           *
*                                                             *
* Output           : None                                     *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

EXT ESA_RC CARE_int_usr_load (void);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_usr_free                        *
*                                                             *
* Description      : Free 'careusr' buffer and clears handle  *
*                                                             *
* Return Value     : None                                     *
*                                                             *
**************************************************************/

EXT void CARE_int_usr_free (void);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_usr_find                        *
*                                                             *
* Description      : determine if user (from user_param) is   *
*                        important for ESS                    *
* Input            :  user_param                              *
* Output              interest                                *
*                                                             *
* Return Value     : ESA_RC (ESA_OK   if user is care         *
*                            ESA_SKIP if user don't care)     *
**************************************************************/

EXT ESA_RC CARE_int_usr_find (USER_typ                user,
	 					      UG_typ                  def_group,
						      char                    user_type,
                              ESS_INTRST_typ        * interest);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_ug_load                         *
*                                                             *
* Description      : Load 'careug'   file into storage        *
*                                                             *
* Input            :  1) rss            -  rss name           *
*                                                             *
* Output           : None                                     *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

EXT ESA_RC CARE_int_ug_load (void);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_ug_free                         *
*                                                             *
* Description      : Free 'careug'  buffer and clears handle  *
*                                                             *
* Return Value     : None                                     *
*                                                             *
**************************************************************/

EXT void CARE_int_ug_free (void);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_ug_find                         *
*                                                             *
* Description      : determine if group (from user_param) is  *
*                        important for ESS                    *
* Input            :  user_param                              *
* Output              interest                                *
*                                                             *
* Return Value     : ESA_RC (ESA_OK   if group is care        *
*                            ESA_SKIP if group don't care)    *
**************************************************************/

EXT ESA_RC CARE_int_ug_find (UG_typ              group,
                             char                group_type,
                             ESS_INTRST_typ     *interest);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_u2ug_load                       *
*                                                             *
* Description      : Load 'semicareug' file into storage      *
*                                                             *
* Input            :  1) rss            -  rss name           *
*                                                             *
* Output           : None                                     *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

EXT ESA_RC CARE_int_u2ug_load (void);

/**************************************************************
*                                                             *
* Procedure Name: CARE_int_u2ug_free                          *
*                                                             *
* Description   : Free 'semicareug' buffer and clears handle  *
*                                                             *
* Return Value  : None                                        *
*                                                             *
**************************************************************/

EXT void CARE_int_u2ug_free (void);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_u2ug_find                       *
*                                                             *
* Description      : determine if group (from ug_param) is    *
*                        semi-important for ESS               *
* Input            :  ug_param                                *
*                                                             *
* Return Value     : ESA_RC (ESA_OK   if group is care        *
*                    ESA_SKIP OR ESA_WARN  if user don't care)*
**************************************************************/

ESA_RC CARE_int_u2ug_find  (UG_typ              group,
						    char                group_type,
                            ESS_INTRST_typ    * interest);

/****************************************************
 * Procedure Name: CARE_inc_u2ug_free
 * Description   : free memory from arrays of interesting
 *                 connections from ESS message
 * Return Value  : ESA_RC
 * Comments      :
 * Scope         :
 ****************************************************/

void CARE_inc_u2ug_free (void);

/****************************************************
 * Procedure Name: CARE_inc_usr_free
 * Description   : free memory from arrays of interesting
 *                 users from ESS message
 * Return Value  : ESA_RC
 * Comments      :
 * Scope         :
 ****************************************************/

void CARE_inc_usr_free (void);

/****************************************************
 * Procedure Name: CARE_inc_ug_free
 * Description   : free memory from arrays of interesting
 *                 groups from ESS message
 * Return Value  : ESA_RC
 * Comments      :
 * Scope         :
 ****************************************************/

void CARE_inc_ug_free (void);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_ug_to_memory                    *
*                                                             *
* Description      : Set data from ESS message to the memory  *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_inc_ug_to_memory (MEMBER_UG_rec_typ ug[1],
                              int    j);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_u2ug_to_memory                  *
*                                                             *
* Description      : Set data from ESS message to the memory  *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_inc_u2ug_to_memory (MEMBER_UG_rec_typ ug[1],
                                int    j);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_usr_to_memory                   *
*                                                             *
* Description      : Set data from ESS message to the memory  *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_inc_usr_to_memory (MEMBER_USER_rec_typ user[1],
                               int      j);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_only_ugs_fill                   *
*                                                             *
* Description      : Fill UG_PARAMS array with groups         *
*                      from list of increment groups          *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_inc_only_ugs_fill (UG_typ            * ug_in,
                               int               * from_num_ug,
                               short             * filled_num_ugs);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_ugs_fill                        *
*                                                             *
* Description      : Fill UG_PARAMS array with groups         *
*                      from list of increment groups          *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_inc_ugs_fill (UG_PARAMS_rec_typ   ug_prm_in[1],
                          int               * from_num_ug,
                          short             * filled_num_ugs);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_u2ugs_fill                       *
*                                                             *
* Description      : Fill UG_PARAMS array with groups         *
*                      from list of increment groups          *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_inc_u2ugs_fill (UG_typ              ug_in[1],
                            int               * from_num_ug,
                            short             * filled_num_ugs);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_u2ugs_fill                      *
*                                                             *
* Description      : Fill UG_PARAMS array with groups         *
*                      from list of  connections              *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_int_u2ugs_fill (UG_typ              ug[1],
                            int               * from_num_ug,
                            short             * filled_num_ugs);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_users_fill                      *
*                                                             *
* Description      : Fill UG_PARAMS array with users          *
*                      from list of increment users           *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_inc_users_fill (USER_PARAMS_rec_typ   user_prm_in[1],
                            int                 * from_num_user,
							char                  user_type,
                            short               * filled_num_users);
/****************************************************
 * Procedure Name: CARE_int_ugs_add
 * Description   : Insert array of interesting groups
 *                    from the memory to file
 * Input         :
 * Return Value  : ESA_RC
 * Comments      :
 * Scope         :
 ****************************************************/

ESA_RC CARE_int_ugs_add (RSS_typ rss, char type);

/****************************************************
 * Procedure Name: CARE_int_u2ugs_add
 * Description   : Insert array of interesting connections
 *                    from the memory to file
 * Input         :
 * Return Value  : ESA_RC
 * Comments      :
 * Scope         :
 ****************************************************/

ESA_RC CARE_int_u2ugs_add (RSS_typ rss, char type);

/****************************************************
 * Procedure Name: CARE_int_users_add
 * Description   : Insert array of interesting users
 *                    from the memory to file
 * Input         :
 * Return Value  : ESA_RC
 * Comments      :
 * Scope         :
 ****************************************************/

ESA_RC CARE_int_users_add (RSS_typ rss, char type);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_usr_find                        *
*                                                             *
* Description      : Search users in list of increment groups *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_inc_usr_find (USER_typ  user,
						  char      member_type);


/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_u2ug_find                       *
*                                                             *
* Description      : Search groups in list of increment       *
*                    connections                              *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_inc_u2ug_find (UG_typ  ug);

/*****************************************************************
*                                                                *
* Procedure Name   : CARE_inc_ug_find                            *
*                                                                *
* Description      : Search group in list of increment continers *
* Return Value     : ESA_RC                                      *
*                                                                *
******************************************************************/

ESA_RC CARE_inc_ug_find (UG_typ  ug);


/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_to_int_copy                     *
*                                                             *
* Description      : SET pointers of increment memory         *
*                      to pointers of interest memory         *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

void CARE_inc_to_int_copy (void);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_u2ug_load_without_rss           *
*                                                             *
* Description      : Load data from the file to the memory    *
*                      without rss records                    *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_int_u2ug_load_without_rss(char      * rss,
                           MEMBER_UG_rec_typ    * pre_u2ugs_ptr,
                           long int             * all_num_u2ugs,
                           INTEREST_UG_rec_typ ** all_u2ugs_ptr);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_ug_load_without_rss             *
*                                                             *
* Description      : Load data from the file to the memory    *
*                      without rss records                    *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_int_ug_load_without_rss(char        * rss,
                           long int             * all_num_ugs,
                           INTEREST_UG_rec_typ ** all_ugs_ptr);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_usr_load_without_rss            *
*                                                             *
* Description      : Load data from the file to the memory    *
*                         without rss records                 *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_int_usr_load_without_rss (char        * rss,
                            MEMBER_USER_rec_typ   * pre_users_ptr,
                            long int              * all_num_users,
                            INTEREST_USER_rec_typ ** all_users_ptr);

void CARE_list_ug   (MEMBER_UG_rec_typ   * ugs_ptr,
                     long int              num_ugs);
void CARE_list_u2ug (MEMBER_UG_rec_typ   * u2ugs_ptr,
                     long int              num_u2ugs);
void CARE_list_usr  (MEMBER_USER_rec_typ * users_ptr,
                     long int              num_users);
void CARE_int_list_ug   (void);
void CARE_int_list_u2ug (void);
void CARE_int_list_usr  (void);




/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_oe_load                         *
*                                                             *
* Description      : Load 'careoe'   file into storage        *
*                                                             *
* Input            :  1) rss            -  rss name           *
*                                                             *
* Output           : None                                     *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

EXT ESA_RC CARE_int_oe_load (void);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_oe_free                         *
*                                                             *
* Description      : Free 'careoe'  buffer and clears handle  *
*                                                             *
* Return Value     : None                                     *
*                                                             *
**************************************************************/

EXT void CARE_int_oe_free (void);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_oe_find                         *
*                                                             *
* Description      : if container is important for ESS        *
* Input            :  oe_param                                *
* Output              interest                                *
*                                                             *
* Return Value     : ESA_RC (ESA_OK   if container is care    *
*                            ESA_SKIP if container don't care)*
**************************************************************/

EXT ESA_RC CARE_int_oe_find (OE_typ               oe,
                             ESS_INTRST_typ     * interest);


/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_oe_to_memory                    *
*                                                             *
* Description      : Set data from ESS message to the memory  *
*                                                             *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_inc_oe_to_memory (MEMBER_OE_rec_typ oe[1],
                              int    j);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_oes_fill
*                                                             *
* Description      : Fill OE_PARAMS array with containers
*                      from list of increment containers
* Input            : from container number in these lists
* Output           : Array of OE_PARAMS
*                  : Number filled containers
**************************************************************/

ESA_RC CARE_inc_oes_fill (OE_PARAMS_rec_typ   oe_prm_in[1],
                          int                 from_num_oe,
                          short             * filled_num_oes);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_get_next_oe
*                                                             *
* Description      : Get next container
*                      from list of increment containers
* Input            : from container number in these lists
* Output           : OE_typ
*                  : Number filled containers
**************************************************************/

void   CARE_inc_get_next_oe (OE_typ              oe,
                             int                 from_num_oe);

/****************************************************
 * Procedure Name: CARE_int_oes_add
 * Description   : Insert array of interesting containers
 *                    from the memory to file
 * Input         :
 * Return Value  : ESA_RC
 * Comments      :
 * Scope         :
 ****************************************************/

ESA_RC CARE_int_oes_add (RSS_typ rss, char type);


/*****************************************************************
*                                                                *
* Procedure Name   : CARE_inc_oe_find                            *
*                                                                *
* Description      : Search container in list of incr. continers *
* Return Value     : ESA_RC                                      *
*                                                                *
******************************************************************/

ESA_RC CARE_inc_oe_find (OE_typ      oe);


/**************************************************************
*                                                             *
* Procedure Name   : CARE_int_oe_load_without_rss             *
*                                                             *
* Description      : Load data from the file to the memory    *
*                      without rss records                    *
* Return Value     : ESA_RC                                   *
*                                                             *
**************************************************************/

ESA_RC CARE_int_oe_load_without_rss (char              * rss,
                                  long int             * all_num_oes,
                                  INTEREST_OE_rec_typ ** all_oes_ptr);

/****************************************************
 * Procedure Name: CARE_inc_oe_free
 * Description   : free memory from arrays of interesting
 *                 containers from ESS message
 * Return Value  : ESA_RC
 * Comments      :
 * Scope         :
 ****************************************************/

void CARE_inc_oe_free (void);

void CARE_list_oe   (MEMBER_OE_rec_typ   * oes_ptr,
                     long int              num_oes);
void CARE_int_list_oe   (void);


/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_object_in_oe
*                                                             *
* Description      : determine if group is in list of
*                      intcrement containers
* Return Value     : ESA_OK or ESA_ERR (exist or not)
*                                                             *
***************************************************************/

ESA_RC CARE_inc_object_in_oe (char            * object,
							  OBJECT_TYPE_typ   object_type);


/**************************************************************
*                                                             *
* Procedure Name   : CAREUSER_object_in_oe                    *
*                                                             *
* Description      : determine if group is in list of         *
*                    interesting containers                   *
* Input            : ug                                       *
* Return Value     : ESA_OK                                   *
**************************************************************/

ESA_RC CARE_int_object_in_oe (char            * object,
							  OBJECT_TYPE_typ   object_type);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_inc_def_ugs_fill
*                                                             *
* Description      : Fill UG_PARAMS array with groups
*                      from list of increment (default) groups
* Input            : from group number in these lists
* Output           : Array of UG_PARAMS
*                  : Number filled groups
**************************************************************/

ESA_RC CARE_inc_def_ugs_fill (UG_typ              ug_in[1],
                              int               * from_num_ug,
                              short             * filled_num_ugs);

/**************************************************************
*                                                             *
* Procedure Name   : CARE_interesting_list_check              *
*                                                             *
* Description      : Check differences between current        *
*                    AND previos interesting lists            *
* Input            :                                          *
* Return Value     : ESA_OK                                   *
**************************************************************/

ESA_RC CARE_interesting_list_check (void);

#endif  /* CARE_H_included */
