/**********************************************************************
* Title:            CHECKSUM interface
* File Name:        chksum.h
* Author:           Aviw
* Creation Date:    05-JAN-1995
* Description:      API for checksum services.
* Assumptions and
*   Considerations:
* $Author:   avi_w  $
* $Workfile:   chksum.h  $
* $Revision:   1.0  $
* $Log:   //EAGLE1/VERSIONS/300/Crypt/INC/chksum.h_v  $
 *
 *    Rev 1.0   Aug 31 1998 19:04:50   avi_w
 *
 *
 *    Rev 1.3   Jan 21 1998 19:00:20   leonid_s
 * 300-Beta with AS400 & VMS changes
 *
 *    Rev 1.2   Jul 24 1997 08:33:10   leonid_s
 *     SCCSID("%Z%%M% \
 *
 *
 *    Rev 1.1   Jul 08 1997 10:38:16   avi_w
 *
**********************************************************************/
/**********************************************************************
 * SAS2IBMN NuritY  07/11/16  Compile with IBM XL C/C++:
 *                            1. Remove #if for __STDC__ and leave
 *                               the code for the defined part.
 *                               The code generated when not defined
 *                               will be needed if we change the
 *                               LANGLVL compiler option to be
 *                               COMMONC. If this happens, we will
 *                               look in the SAS/C source for needed
 *                               code.
**********************************************************************/
/* SCCSID %Z%%M% */

#ifndef CHKSUM_H_INCLUDED
#define CHKSUM_H_INCLUDED

/********************************************/
/*  Length values for entity names          */
/********************************************/

#define   CHECKSUM_LEN         8

/**************************************/
/*  typedefs for entities             */
/**************************************/

typedef unsigned char  CHECKSUM_typ [CHECKSUM_LEN];

/**********************************************************************
 * Procedure Name   : ChkSum
 * Description      : Single step buffer's checksum calculation.
 * Input            : buff - buffer address.
 *                    len  - input buffer's length.
 * Output           : checksum - The resultant cheksum.
 * Input/Output     :
 * Input assumptions:
 * Output assertions: The output buffer is pre-allocated by the caller.
 * Return Value     : NONE.
 * Side Effects     :
 *
 * Function description
 * ====================
 * See ChkSum.c.
 *********************************************************************/

extern void ChkSum (
                    void          * buff,
                    int             len,
                    CHECKSUM_typ    checksum
                  );

/**********************************************************************
 * Procedure Name   : ChkSumL
 * Description      : Checksum calculation in successive calls with
 *                    partial buffers.
 * Input            : buff - partial buffer address.
 *                    len  - partial input buffer's length.
 *                    Final - 0 - Not final, Other - Final.
 * Output           : checksum - The resultant cheksum.
 * Input/Output     : Handle.
 * Input assumptions: The handle pointer MUST contain NULL value on
 *                    first call in loop.
 * Output assertions: The output buffer is pre-allocated by the caller.
 *                    It is meaningfull only when returning from FINAL
 *                    call.
 * Return Value     : NONE.
 * Side Effects     :
 *
 * Function description
 * ====================
 * See ChkSum.c.
 *********************************************************************/

extern void ChkSumL (
                     void          * buff,
                     int             len,
                     int             final,
                     void         ** handle,
                     CHECKSUM_typ    checksum
                    );
#endif   /* ifndef CHKSUM_H_INCLUDED */
