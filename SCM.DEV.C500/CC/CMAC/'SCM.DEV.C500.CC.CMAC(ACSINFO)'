/******************************************************************
* Title            : Entity info services
* File Name        : acsinfo.h
* Author           : Leonid
* Creation Date    : 20.04.94
* Description      :
* Assumptions and  :
*   Considerations :
* $Author:   leonid_s  $
* $Workfile:   acsinfo.h  $
* $Revision:   1.1  $
* $Log:   //netapp-nt1/versions/300/common/inc/acsinfo.h_v  $
*
*   Rev 1.1   Nov 04 1999 12:49:24   leonid_s
*3.0.1 last
 *
 *    Rev 1.0   Aug 31 1998 19:02:04   avi_w
 *
 *
 *    Rev 1.8   Jul 26 1998 14:02:42   leonid_s
 * No change.
 *
 *    Rev 1.7   Jul 09 1998 09:26:04   leonid_s
 * Changes U2UG_MEM_rec_typ for acssync
 *
 *    Rev 1.6   Jan 21 1998 18:53:36   leonid_s
 * 300-Beta with AS400 & VMS changes
 *
 *    Rev 1.5   Oct 07 1997 13:00:40   leonid_s
 * INSURE++ changes
 *
 *    Rev 1.4   Sep 28 1997 15:38:56   leonid_s
 * Changed definition of the 'CS_get_addinfo' function
 *
 *    Rev 1.3   Jul 27 1997 10:32:32   Danko
 * converting_from_sccs
 *
 *    Rev 1.2   Jul 24 1997 08:29:38   leonid_s
 *     SCCSID("%Z%%M% \
 *
 *
 *    Rev 1.1   Jul 08 1997 09:27:38   avi_w
 * WS10078KM KailasP 12/06/2020  Change definition of CS_set_addinfo
 * WS10082K  KailasP 04/08/2023  Change CS_enum_fld_to_info definition
 * WS10082N  NuritY  13/09/2023  Support addinfo long value
*******************************************************************/
/* SCCSID %Z%%M% */

#ifndef SSINFO_H_INCLUDED
#define SSINFO_H_INCLUDED

#include ESA_API
#include ESA_INIT
#include ESA_CHKSUM
#include ESA_ESAADI                                      /* WS10082N */

/* for MVS only */
#define CS_entity_info_add          INFO001
#define CS_entity_info_init         INFO002
#define CS_addinfo_fill             INF0003
/*#define CS_addinfo_prt              INF0005  WS10082K*/
#define CS_get_addinfo              INF0006
#define CS_set_addinfo              INF0007
#define CS_copy_addinfo_to_addinfo  INF0008
#define CS_fill_key                 INF0009
#define CS_set_enum_fld             INF0010
#define CS_enum_fld_to_info         INF0011
#define CS_addinfo2_add             INF0012
 /* MVS */

/***************************************************/
/* Defintions for API structures                   */
/***************************************************/

#define STRUC_ADMIN_REC      1        /* ADMIN_PARAMS_rec_typ  struct */
#define STRUC_USER_REC       2        /* USER_PARAMS_rec_typ   struct */
#define STRUC_UG_REC         3        /* UG_PARAMS_rec_typ     struct */
#define STRUC_RES_REC        4        /* RES_PARAMS_rec_typ    struct */
#define STRUC_U2UG_REC       6
#define STRUC_ACE_REC        7
#define STRUC_OFLRSS_REC     10
#define STRUC_ACE_PLACE_TYP  11
#define STRUC_RSS_REC        12
#define STRUC_FUNC_REC       13
#define STRUC_ACT_REC        14
#define STRUC_RES_ADDINFO    15
#define STRUC_RC_REC         17
#define STRUC_PRE_REC        18
#define STRUC_INTEREST_REC	 19
#define STRUC_STARTLST_REC   20
#define STRUC_USER_CHECK_REC 21
#define STRUC_U2UG_CHECK_REC 22
#define STRUC_UG_CHECK_REC   23
#define STRUC_KWD_REC        24
#define STRUC_PRM_REC        25
#define STRUC_RSSPRM_REC     26
#define STRUC_Q_HANDLE       27
#define STRUC_ADDINFO        28
#define STRUC_LOCK_REC       29
#define STRUC_RSSTBL         30
#define STRUC_OE_REC         31 /* OE_PARAMS_rec_typ struct */
#define STRUC_OE_CHECK_REC   33
#define STRUC_INT_UG_REC     34
#define STRUC_INT_OE_REC     35
#define STRUC_INT_USR_REC    36
#define STRUC_ADM_REC	     37

/********************************************/
/*  Typedef for platform details            */
/********************************************/

typedef struct PLATFORM_DETAIL_STRUCT {
    MH_version                  version;
    int                         max_msg_size;
    CHECKSUM_typ                kwds_checksum;
} PLATFORM_DETAIL_rec_typ, * PLATFORM_DETAIL_rec_ptr;

/********************************************/
/*  Typedef for connection user to group    */
/********************************************/

typedef struct CONNECT_PARAMS_STRUCT {
    UG_typ                group;
    USER_typ              user;
    U2UG_PARAMS_rec_typ   u2ug_prm;
} CONNECT_PARAMS_rec_typ, * CONNECT_PARAMS_rec_ptr;

typedef struct  S_USR_MEM_rec_typ {
    USER_typ            user;
    CHECKSUM_typ        checksum;
    char                in_rss;
} USR_MEM_rec_typ, *USR_MEM_rec_ptr;

typedef struct  S_OE_MEM_rec_typ {
    OE_typ              oe;
    CHECKSUM_typ        checksum;
    char                in_rss;
} OE_MEM_rec_typ, *OE_MEM_rec_ptr;

typedef struct  S_UG_MEM_rec_typ {
    UG_typ              ug;
    CHECKSUM_typ        checksum;
    char                in_rss;
} UG_MEM_rec_typ, *UG_MEM_rec_ptr;

typedef struct  S_U2UG_MEM_rec_typ {
    char              * user;
    char              * ug;
    CHECKSUM_typ        checksum;
    char                in_rss;
} U2UG_MEM_rec_typ, *U2UG_MEM_rec_ptr;


/********************************************/
/*          Function Definitions            */
/********************************************/

/****************************************************************
* Procedure Name   : CS_addinfo2_add
* Description      : add values of structure to additional info
* Input            : struct_id - code of structure
*                  : struct_ptr - pointer to the structure
* Input/Output     : addinfo2 - pointer to additional info to add
*                  : err
* Return Value     :
* Scope            : global
*******************************************************************/

ESA_RC CS_addinfo2_add (short                  struct_id,
                        void                 * struct_ptr,
                        ADDINFO_rec_typ      * addinfo2);

/******************************************************************
* Procedure Name   : CS_add_entity_info
* Description      : add data of structure to entity info
* Input            : struct_id - code of structure
*                  : struct_ptr - pointer to the structure
* Output           : entity_info - pointer to entity info to add
*                  : err
* Return Value     :
* Scope            : global
*******************************************************************/

ESA_RC CS_entity_info_add (short   struct_id,
                           void  * struct_ptr);

/******************************************************************
* Procedure Name   : CS_init_entity_info
* Description      : initiate entity info structure
* Input/Output     : entity_info - pointer to entity info to initiate
* Output           : err
* Return Value     :
* Scope            : global
*******************************************************************/

void CS_entity_info_init (void);

/****************************************************
 * Procedure Name: CS_fill_key
 * Description   : fill key structure
 * Input         :
 * Input/Output  :
 * Return Value  :
 * Comments      :
 ****************************************************/

void CS_fill_key (ADDINFO_rec_ptr   * addinfo,
                  RSSAPIKWD_rec_typ * msg_key,
                  KWD_typ             kwd_types,
                  NUM_MSGS_typ        act_num,
                  NUM_MSGS_typ        max_prs);


void CS_addinfo_fill (ADDINFO_rec_ptr   info,
                      ADDINFO_rec_ptr * addinfo,
                      NUM_MSGS_typ      max_addinfos,    /*WS10082*/
                      NUM_MSGS_typ      num_pairs);
/*WS10082*            NUM_MSGS_typ      max_prs, */
/*WS10082K - Remove this function definition*/
/****************************************************
 * Procedure Name: CS_addinfo_prt
 * Description   : print additional information
 * Input         :
 * Input/Output  :
 * Return Value  :
 * Comments      :
 ***************************************************@/

void CS_addinfo_prt (ADDINFO_rec_typ * addinfo,
                     const char      * text);
*WS10082K - End */

/****************************************************
 * Procedure Name: CS_get_addinfo
 * Description   : retrive addinfo from message
 * Input         :
 * Input/Output  :
 * Return Value  :
 * Comments      :
 ****************************************************/

MSG_typ * CS_get_addinfo (ADDINFO_rec_typ ** addinfo,
                          MSG_typ          * msg_ptr);

/****************************************************
 * Procedure Name: CS_set_addinfo
 * Description   : copy addinfo structure to message
 * Input         :
 * Input/Output  :
 * Return Value  :
 * Comments      :
 ****************************************************/

/*MSG_typ * CS_set_addinfo (short             func,  WS10078KM */
ESA_RC    CS_set_addinfo (short             func, /* WS10078KM */
                          MSG_typ         * buffer,
                          ADDINFO_rec_ptr   addinfo,
                          NUM_MSGS_typ    * addinfo_len);

/****************************************************
 * Procedure Name: CS_copy_addinfo_to_addinfo
 * Description   : copy addinfo to addinfo
 * Input         :
 * Input/Output  :
 * Return Value  :
 * Comments      :
 * Scope         :
 ****************************************************/

ESA_RC CS_copy_addinfo_to_addinfo (ADDINFO_rec_typ * to_addinfo,
                                   ADDINFO_rec_typ * from_addinfo);

/****************************************************
 * Procedure Name: CS_set_enum_fld
 * Description   : set enum field to message
 * Input         :
 * Input/Output  :
 * Return Value  :
 * Comments      :
 ****************************************************/

MSG_typ * CS_set_enum_fld (int            field,
                           int            fld_nam,
                           MSG_typ      * msg_ptr,
                           NUM_MSGS_typ * msg_len,
                           const char   * fld_name);

/****************************************************
 * Procedure Name: CS_enum_fld_to_info
 * Description   : move enum value and enum value length
 *                      to addinfo
 * Input         :
 * Input/Output  :
 * Return Value  :
 * Comments      :
 ****************************************************/

void CS_enum_fld_to_info (int          enum_field,
                          int          enum_name,
                          char       * enum_value,
/*WS10082K*/              int        * enum_value_len,
                          const char * fld_name);
/*WS10082K*               short      * enum_value_len, */

#endif  /* SSINFO_H_INCLUDED */
