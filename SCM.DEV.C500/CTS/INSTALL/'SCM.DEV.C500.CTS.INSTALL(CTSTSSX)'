         TITLE 'SA-AGENT TOP-SECRET EXIT'                               00010000
*                                                                       00020000
*********************************************************************** 00030000
****                                                               **** 00040000
****   SA-AGENT VERSION 4.0.XX                                     **** 00050000
****                                                               **** 00060000
****   (C) COPYRIGHT 1999-2001 BMC SOFTWARE INC.                   **** 00070000
****                                                               **** 00080000
*********************************************************************** 00090000
*                                                                       00100000
*********************************************************************** 00110000
*                                                                     * 00120000
* MODULE NAME : CTSINSTX                                              * 00130000
*                                                                     * 00140000
* DESCRIPTION : SA-AGENT TOP-SECRET EXIT                              * 00150000
*                                                                     * 00160000
* FUNCTION:                                                           * 00170000
*                                                                     * 00180000
*    THIS MODULE DETECTS TOP SECRET DATABASE CHANGES AND NOTIFIES     * 00190000
*    SA-AGENT ONLINE INTERCEPTOR OF CHANGES IN USER, PROFILE,         * 00200000
*    ORGANIZATIONAL ELEMENT AS WELL AS USER PASSWORD CHANGES.         * 00210000
*                                                                     * 00220000
*    SA-AGENT IS USING 'DATABASE CHANGE' AND 'POSTINT',               * 00230000
*    FUNCTIONS OF TOP SECRET INSTALLATION EXIT .                      * 00240000
*                                                                     * 00250000
*    THE EXIT CALLS THE SITE EXIT UPON ITS COMPLETION                 * 00260000
*                                                                     * 00270000
* ATTRIBUTES  : THIS ROUTINE SHOULD BE LINK-EDITED WITH RMODE ANY     * 00280000
*               AND AMODE 31 .                                        * 00290000
*                                                                     * 00300000
* RESTRICTIONS : NONE                                                 * 00310000
*                                                                     * 00320000
* DEPENDENCIES : THE CODE USES THE DEFINITION IN MEMBER CTSADEFS FOR  * 00330002
*                TO CALL THE ONLINE INTERCEPTOR SERVER, THEREFORE     * 00340000
*                THIS EXIT SHOULD BE RE-INSTALLED AFTER A CHANGE      * 00350000
*                IN THE CTSDEFS MEMBER .                              * 00360000
*                                                                     * 00370000
*                                                                     * 00380000
*                                                                     * 00390000
* OUTPUT:                                                             * 00400000
*                                                                     * 00410000
*    REGISTER 15 ALWAYS CONTAINS ZERO UPON TERMINATION                * 00420000
*                                                                     * 00430000
*********************************************************************** 00440000
*                                                                     * 00450000
* IMPORTANT NOTE FOR CA TOP SECRET R14 USERS:            (IS10083)    * 00460000
*                                                                     * 00470000
*   IF TSSINSTX FAILS WITH S0C1, MOST CHANCES ARE THAT A FIX IS       * 00480000
*   NEEDED IN CA-TSS ITSELF. AT BMC LAB APAR BIT8730 FROM CA WAS      * 00490000
*   APPLIED TO RESOLVE THE S0C1 IN TSSINSTX.  WHEN THIS BMC FIX       * 00500000
*   (IS10035) IS BEING WRITTEN, CA FIX IS ONLY AVAILABLE AS APAR. IT  * 00510000
*   IS POSSIBLE THAT BY THE TIME YOU APPLY BMC FIX, CA HAS ALREADY    * 00520000
*   PUBLISHED THE APAR AS AN OFFICIAL PTF. EITHER SEARCH CA SITE FOR  * 00530000
*   'TSSINSTX R14 S0C1' OR CONTACT CA FOR SUPPORT.                    * 00540000
*                                                                     * 00550000
*********************************************************************** 00560000
*********************************************************************** 00570000
*                                                                     * 00580000
* IMPORTANT NOTE FOR CA TOP SECRET R15 USERS:            (IS10086)    * 00590000
*                                                                     * 00600000
*   IF TSSINSTX FAILS WITH S0C1, MOST CHANCES ARE THAT YOU NEED TO    * 00610000
*   APPLY CA'S PTF RO23748 TO ELIMINATE THE S0C1.                     * 00620000
*                                                                     * 00630000
*********************************************************************** 00640000
* CHANGE ACTIVITY :                                                   * 00650000
*                                                                     * 00660000
*   19/02/98 @DC2    DC ENHANCE PARSING ERROR MESSAGE TO CONTAIN      * 00670001
*                       THE TEXT OF THE COMMAND                       * 00680000
*   20/02/98 @DC3    DC ADD PERMIT/REVOKE COMMANDS IDENTIFICATION     * 00690000
*   25/02/98 BS2352  DC CHAINING OF SITE EXIT CALLS IS INCORRECT      * 00700000
*   25/02/98 PS0244  DC LONG RQC SUPPORT                              * 00710000
*   07/06/98 BS2354  DC ENHANCE EXIT CHAINING INTERGRITY CHECK FOR    * 00720000
*                       ALTERNATE BRANCH CODE.                        * 00730000
*   12/05/99 BS2387  DC CORRECT PARSING ERRORS                        * 00740000
*   16/06/99 BS2391  DC ADDTO COMMANDS ARE IGNORED                    * 00750000
*   21/08/00 BS2429  YB SENDING UPD CONNECTION EVENTS                 * 00760000
*   03/12/00 BS2438  YB FILTER NON AFTER/BEFORE CONNECTIONS           * 00770000
*   12/12/00 BS2444  YB TSS INSTALLATION EXIT ABENDS S0C4, BECAUSE    * 00780000
*                       WRONG COMMAND LENGTH IS SENT TO CTSAPAR       * 00790000
*   17/11/01 PS0488  SK 1.DIAGNOSTIC FIX : PRINT TSSINSTX VERSION ID  * 00800000
*                       2.PROFILES KEYWORD NOT INTERCEPTED            * 00810000
*                       3.INIT-BLANKS EVTGROUP BEFORE VARIABLE(EX) MVC* 00820000
*   13/11/01 BS2489  YB SEND CONNECTIONS IN TSS CREATE                * 00830000
*   30/07/03 BS2618  AH SEND CONNECTIONS AFTER PROFILE/GROUP RENAME   * 00840000
*   25/03/04 WS2530  RK TSS 5.3, 5.4, 5.5 SUPPORT                     * 00850000
*   17/08/06 IS0359  YM UPGRADE TO VERSION 3.2.03 INCLUDE FIXS :      * 00860000
*                       BS2695 - TSS R8 SUPPORT                       * 00870000
*                       IS0333 - TSS R8 SUPPORT LONG PASSWORD OPTION  * 00880000
*                       BS2702 - ADD SUPPORT PARSING REFRESH COMMAND  * 00890000
*                       IS0354 - TSS R9 SUPPORT                       * 00900000
*   07/03/07 IS10003 EK COMPILATION ONLINE INTERCEPTOR EXIT ENDED WITH* 00910000
*                       ERROR                                         * 00920000
*   04/11/07 WS10011 MS SUPPORT TSS RELEASE 12. FIX BUG PREVENTE WTO  * 00930000
*                      TO BE ISSUED                                   * 00940000
*   08/11/08 IS10014 MS COMPLETE SUPPORT TSS RELEASE 12               * 00950000
*   18/06/08 IS10020 AL SEND CONNECTIONS WHEN TSS CREATE() USING().   * 00960000
*   02/07/08 IS10023 AL SEND MSG WHEN NO MORE EVENTS IN FREE CHAIN.   * 00970000
*   25/02/09 IS10029 AL FIX BUG CREATED BY IS10014.                   * 00980000
*   20/05/13 WS10039 NY FILTER OUT DIGITAL CERTIFICATE COMMANDS.      * 00990000
*   27/05/13 IS10083 NY ADD NOTE FOR TSS R14 ABOVE.                   * 01000000
*   30/05/13 IS10086 NY ADD NOTE FOR TSS R15 ABOVE.                   * 01010000
*   07/08/14 IS10125 AL PASSWORD & PHRASE ARE SEPARATED IN TXA.       * 01020000
*   17/01/17 SAS2IBMN NY CHANGE RMODE 24 TO ANY.                      * 01030000
*   03/04/17 TSSR15  AL UPDATE ABBREVIATIONS.                         * 01040000
*   06/04/17 RECRCOD AL ADD FEW MORE RECRCODE VALUES PER CA KB        * 01050000
*   28/12/17 WS10064 MS Support Password Phrase                       * 01060000
*   15/03/18 IS10169 MS MULTID record tepe inserted incorrectly       * 01061000
*   18/06/18 BS10090 ST Filter out these special 'acids':             * 01061100
*                       DATACLAS, SIGVER, TAMZ, *CPFRECV and *LDSRECV * 01061200
*                       Deal with (blank out) imbedded comments in a  * 01061300
*                       TSS command.                                  * 01061400
*********************************************************************** 01061500
*                                                                       01061600
R0       EQU   0                                                        01061700
R1       EQU   1                                                        01061800
R2       EQU   2                                                        01061900
R3       EQU   3                                                        01062000
R4       EQU   4                                                        01063000
R5       EQU   5                                                        01064000
R6       EQU   6                                                        01065000
R7       EQU   7                                                        01066000
R8       EQU   8                                                        01067000
R9       EQU   9                                                        01068000
R11      EQU   11                                                       01069000
R10      EQU   10                                                       01070000
R12      EQU   12                                                       01080000
R13      EQU   13                                                       01090000
R14      EQU   14                                                       01100000
R15      EQU   15                                                       01110000
*                                                                       01120000
CTSINSTX CSECT                                                          01130000
CTSINSTX AMODE 31                                                       01140000
CTSINSTX RMODE ANY                                                      01150000
         B     START-CTSINSTX(R15)                                      01160000
CTSHEAD  EQU   *                                                        01170000
         DC    AL1(24)                                                  01180000
         DC    C'TSSINSTX'                                              01190000
CTSHEADL EQU   *-CTSHEAD                                                01200000
CTSHEADV DC    C'V5L0M000'                                              01210000
         DC    C'&SYSDATE'                                              01220000
MATRIX   DC    CL8'MATRIX'                                              01230000
*                                                                       01240000
OFFSVER  EQU   X'6D3'   OFFSET OF THE TSS VERSION IN THE RCVT    IS0333 01250000
OFFSNPW  EQU   128      offset of new password                  WS10064 01260000
*                                                                       01270000
#####YES EQU   255              FUNCTION IS ACTIVE                      01280000
######NO EQU   000              FUNCTION IS NOT ACTIVE                  01290000
*                                                                       01300000
MATRXBGN EQU   *                                                        01310000
         DC    AL1(#####YES) 00 PRE-INIT                                01320000
         DC    AL1(#####YES) 04 VOLUME ACCESS VALIDATION                01330000
         DC    AL1(#####YES) 08 DATASET VALIDATION                      01340000
         DC    AL1(#####YES) 12 RESOURCE VALIDATION                     01350000
         DC    AL1(#####YES) 16 TSS COMMAND                             01360000
         DC    AL1(#####YES) 20 ADDRESS SPACE TERMINATION               01370000
MATRXPST EQU   *                                                        01380000
         DC    AL1(#####YES) 24 POST-INIT                               01390000
         DC    AL1(#####YES) 28 UNDEFINED ACID                          01400000
         DC    AL1(#####YES) 32 NEW PASSWORD VERIFICATION               01410000
         DC    AL1(#####YES) 36 TERMINAL I/O                            01420000
         DC    AL1(#####YES) 40 SESSION TERMINATION                     01430000
         DC    AL1(#####YES) 44 ONLINE (INTRDR) JOB SUBMISSION          01440000
MATRXCHG EQU   *                                                        01450000
         DC    AL1(#####YES) 48 SECURITY FILE CHANGE                    01460000
         DC    AL1(#####YES) 52 ACTION(EXIT)                            01470000
         DC    AL1(#####YES) 56 MESSAGE EDITTING                        01480000
         DC    AL1(######NO) 60 RESERVED-0                              01490000
         DC    AL1(#####YES) 64 VIOLATION NOTIFICATION                  01500000
         DC    AL1(#####YES) 68 SITE VIA RACHECK CLASS='INSTEXIT'       01510000
         DC    AL1(#####YES) 72 COMMAND BEING SENT TO REMOTE TSS        01520000
*                                                                       01530000
         DC    AL1(#####YES) 76 RESOURCE VALIDATION - XMEM       IS0354 01540000
         DC    AL1(#####YES) 80 MESSAGE EDITING - XMEM           IS0354 01550000
         DC    AL1(#####YES) 84 VIOLATION NOTIFICATION - XMEM    IS0354 01560000
         DC    AL1(#####YES) 88 POST RESOURCE                    IS0354 01570000
         DC    AL1(#####YES) 92 POST RESOURCE XMEM               IS0354 01580000
         DC    AL1(#####YES) 96 POST DATASET                     IS0354 01590000
         DC    AL1(#####YES) 100 POST VOLUME                     IS0354 01600000
*                                                                       01610000
MATRXEND EQU   *                                                        01620000
*IS0354  DC    AL1(######NO) 76 RESERVED-2                              01630000
*IS0354  DC    AL1(######NO) 80 RESERVED-3                              01640000
*IS0354  DC    AL1(######NO) 84 RESERVED-4                              01650000
*IS0354  DC    AL1(######NO) 88 RESERVED-5                              01660000
*IS0354  DC    AL1(######NO) 92 RESERVED-6                              01670000
*IS0354  DC    AL1(######NO) 96 RESERVED-7                              01680000
         DC    AL1(######NO) 104 FUTURE USE                      IS0354 01690000
         DC    AL1(######NO) 108 FUTURE USE                      IS0354 01700000
         DC    AL1(######NO) 112 FUTURE USE                      IS0354 01710000
*                                                                       01720000
START    STM   R0,R14,0(R13)  PRESERVE REGISTERS IN PROVIDED SAVEAREA   01730000
         LR    R12,R15        ESTABLISH ADDRESSABILITY                  01740000
         USING CTSINSTX,R12   FOR INSTALLATION EXIT                     01750000
         LR    R9,R1          ESTABLISH ADDRESSABILITY                  01760000
         USING TSSXPARM,R9    WITH INCOMING PARAMETERS                  01770000
         LA    R10,72(R13)    ESTABLISH ADDRESSABILITY                  01780000
         USING WORKAREA,R10   WITH WORKAREA (MAX LEN 100 BYTES)         01790000
*                                                                       01800000
         L     R1,TXAFUNC     PICK UP ...                               01810000
         L     R1,0(R1)       FUNCTION CODE                             01820000
         B     *+4(R1)        PROCESS ACCORDING TO FUNCTION:            01830000
         B     PREINIT     00 JOB/SESSION PRE-INITIATION                01840000
         B     VOLUME      04 VOLUME ACCESS VALIDATION                  01850000
         B     DATASET     08 DATASET ACCESS VALIDATION                 01860000
         B     RESOURCE    12 RESOURCE ACCESS VALIDATION                01870000
         B     COMMAND     16 TSS COMMAND USE VALIDATION                01880000
         B     TERM        20 JOB (ADDRESS SPACE) TERMINATION           01890000
         B     POSTINIT    24 JOB/SESSION INITIATION COMPLETE           01900000
         B     UNDEFIND    28 UNDEFINED ACID ENTRY                      01910000
         B     PASSWORD    32 PASSWORD CHANGE ENTRY                     01920000
         B     IO          36 VOICE OR DIGITIZED IMAGE REQUEST          01930000
         B     SESSEND     40 SESSION (USER) TERMINATION                01940000
         B     SUBMIT      44 INTERNAL READER SUBMISSION                01950000
         B     CHANGE      48 SECURITY FILE CHANGE                      01960000
         B     ACTION      52 PERMIT ACTION(EXIT)                       01970000
         B     MESSAGE     56 MESSAGE EDITING                           01980000
         B     EXIT0       60 FUTURE USE                                01990000
         B     VIOLATN     64 VIOLATION DETECTED                        02000000
         B     SITE        68 RACHECK CLASS=INSTEXIT                    02010000
         B     CPF         72 CMD BEING SENT TO REMOTE TSS              02020000
*IS0354  B     EXIT0       76 FUTURE USE                                02030000
*IS0354  B     EXIT0       80 FUTURE USE                                02040000
*IS0354  B     EXIT0       84 FUTURE USE                                02050000
*IS0354  B     EXIT0       88 FUTURE USE                                02060000
*IS0354  B     EXIT0       92 FUTURE USE                                02070000
*IS0354  B     EXIT0       96 FUTURE USE                                02080000
         B     RESXMEM     76 RESOURCE VALIDATION - XMEM         IS0354 02090000
         B     MSGXMEM     80 MESSAGE EDITING - XMEM             IS0354 02100000
         B     VIOXMEM     84 VIOLATION NOTIFICATION - XMEM      IS0354 02110000
         B     RESPOST     88 POST RESOURCE                      IS0354 02120000
         B     RESPOSTX    92 POST RESOURCE XMEM                 IS0354 02130000
         B     DSNPOST     96 POST DATASET                       IS0354 02140000
         B     VOLPOST    100 POST VOLUME                        IS0354 02150000
         B     EXIT0      104 FUTURE USE                         IS0354 02160000
         B     EXIT0      108 FUTURE USE                         IS0354 02170000
         B     EXIT0      112 FUTURE USE                         IS0354 02180000
*                                                                       02190000
* TERMINATE AND LINK TO SITE EXIT                                       02200000
*                                                                       02210000
         WXTRN TSSINSTX                                                 02220000
ADDREXIT DC    V(TSSINSTX)                                              02230000
*                                                                       02240000
EXIT0    DS    0H                                                       02250000
*                                                                       02260000
*        VERIFY THAT SITE EXIT POINTER EXISTS                           02270000
*                                                                       02280000
         ICM   R15,15,ADDREXIT         R15 -> ORIGINAL SITE EXIT        02290000
         BZ    RET2TSS                 NO EXIT, STANDARD TERMINATION    02300000
*                                                                       02310000
*        VERIFY SITE EXIT STRUCTURE                                     02320000
*                                                                       02330000
         CLC   CTSINSTX(2),0(R15)      BRANCH CODE OK ?                 02340000
         BE    EXITHCHK                YES, KEEP CHECKING               02350000
         CLC   =XL2'47F0',0(R15)       BRANCH CODE OK (ALT) ?   BS2354  02360000
         BE    EXITHCHK                YES, KEEP CHECKING       BS2354  02370000
         WTO   'CTSINSTX: TSSINSTX MODULES IS CORRUPTED. SITE EXIT BYPAX02380000
               SSED'                                                    02390000
         B     RET2TSS                                                  02400000
*                                                                       02410000
EXITHCHK DS    0H                                                       02420000
         CLC   CTSHEAD(CTSHEADL),CTSHEAD-CTSINSTX(R15) EYE CATCHER ?    02430000
         BE    EXITHLVL                NO, WRONG MODULE                 02440000
         WTO   'CTSINSTX: TSSINSTX HEADER IS CORRUPTED. SITE EXIT BYPASX02450000
               SED'                                                     02460000
         B     RET2TSS                                                  02470000
*                                                                       02480000
EXITHLVL DS    0H                                                       02490000
************************ IS0333 *******************************         02500000
* SO FAR WE HAVE BASED OUR TSS VERSION ON THE EYE CATCHER     *         02510000
* INSIDE THE TSSINSTX EXIT ITSELF. THIS HAS A DISADVANTAGE    *         02520000
* SINCE EYE-CATCHER MAY BE LEFT BY CUSTOMER UNCHANGED FROM    *         02530000
* A PREVIOUS TSS VERSION.                                     *         02540000
* FROM NOW ON, WE ARE BASED THE TSS VERSION ON A FIELD INSIDE *         02550000
* THE RCVT AT OFFSET X'6D3'.                                  *         02560000
* THIS INFORMATION IS RECEIVED FROM CA IN REQUEST 14558948    *         02570000
* ON JANUARY 2006.                                            *         02580000
***************************************************************         02590000
         B     EXITHVOK                DON'T CHECK VERSION. IT  WS10011 02600000
*                                      MAY BE DURING XMEM IN    WS10011 02610000
*                                      WHICH WTO NOT ALLOWED    WS10011 02620000
* CHECK IF SUPPORTED VERSION                                     IS0333 02630000
         L     R4,CVTPTR               GET CVTPTR                IS0333 02640000
         L     R4,CVTRAC-CVT(R4)       GET CVTRAC                IS0333 02650000
         CLI   OFFSVER(R4),C'8'        VERSION 8 OR HIGHER ?     IS0333 02660000
         BNL   EXITHVOK                YES, WE ARE OK            IS0333 02670000
         CLI   OFFSVER(R4),C'5'        VERSION 5 ?               IS0333 02680000
         BE    EXITHVOK                YES, WE ARE OK            IS0333 02690000
*IS0333  CLC   =CL2'V8',CTSHEADV-CTSINSTX(R15) R8 ?              BS2695 02700000
*IS0333  BE    EXITHVOK                YES, WE ARE OK            BS2695 02710000
*IS0333  CLC   =CL8'V5L5M000',CTSHEADV-CTSINSTX(R15) VER 5.5 ?          02720000
*IS0333  BE    EXITHVOK                YES, WE ARE OK                   02730000
*IS0333  CLC   =CL8'V5L4M000',CTSHEADV-CTSINSTX(R15) VER 5.4 ?          02740000
*IS0333  BE    EXITHVOK                YES, WE ARE OK                   02750000
*IS0333  CLC   =CL8'V5L3M000',CTSHEADV-CTSINSTX(R15) VER 5.3 ?          02760000
*IS0333  BE    EXITHVOK                YES, WE ARE OK                   02770000
*IS0333  CLC   =CL8'V5L2M000',CTSHEADV-CTSINSTX(R15) VER 5.2 ?          02780000
*IS0333  BE    EXITHVOK                YES, WE ARE OK                   02790000
*IS0333  CLC   =CL8'V5L1M000',CTSHEADV-CTSINSTX(R15) VER 5.1 ?          02800000
*IS0333  BE    EXITHVOK                YES, WE ARE OK                   02810000
*IS0333  CLC   =CL8'V5L0M000',CTSHEADV-CTSINSTX(R15) VER 5.0 ?          02820000
*IS0333  BE    EXITHVOK                YES, WE ARE OK                   02830000
*IS0333  CLC   =CL8'V4L4M000',CTSHEADV-CTSINSTX(R15) VER 4.4 ?          02840000
*IS0333  BE    EXITHVOK                YES, WE ARE OK                   02850000
ERRVER   DS    0H                                                IS0333 02860000
*IS0333  LR    R6,R15                  SAVE R15                  PS0488 02870000
         GETMAIN RC,LV=@WTOLL          GET CORE WTO AREA         PS0488 02880000
         LR    R2,R1                   R2 -> MESSAGE             PS0488 02890000
*IS0333  LR    R15,R6                  RESTORE R15               PS0488 02900000
         MVC   0(@WTOLL,R2),WTOVERS    MOVE THE MESSAGE          PS0488 02910000
*IS0333  MVC   29(8,R2),CTSHEADV-CTSINSTX(R15)  AND THE VERSION  PS0488 02920000
         MVC   29(8,R2),OFFSVER(R4)    AND THE VERSION   PS0488  IS0333 02930000
         LA    R7,WTOVERSL(R2)         POINT TO LIST FORM        PS0488 02940000
         WTO   TEXT=(R2),MF=(E,(R7))   ISSUE THE MESSAGE         PS0488 02950000
         FREEMAIN RC,LV=@WTOLL,A=(R2) FREE WTO AREA              PS0488 02960000
*IS0333  LR    R15,R6                  RESTORE R15               PS0488 02970000
*PS0488  WTO   'CTSINSTX: TSSINSTX VERSION NOT SUPPORED. SITE EXIT BYPAX02980000
               SSED'                                             PS0488 02990000
         B     RET2TSS                                           PS0488 03000000
WTOVERS  DC    H'80'                                             PS0488 03010000
         DC    CL80'CTSINSTX: TSSINSTX VERSION XXXXXXXX NOT SUPPORTED. *03020000
               EXIT BYPASSED'                             PS0488 IS0333 03030000
*IS0333  DC    CL80'CTSINSTX: TSSINSTX VERSION XXXXXXXX NOT SUPPORTED.  03040000
*IS0333        SITE EXIT BYPASSED'                               PS0488 03050000
         DS    0F         ALLIGN TO FULLWORD TO ENABLE NEXT WTO WS10011 03060000
WTOVERSL EQU   *-WTOVERS                                         PS0488 03070000
@WTOL    WTO   TEXT=WTOVERS,MF=L           WTO LIST FORM         PS0488 03080000
@WTOLL   EQU   *-WTOVERS                   LENGTH OF LIST FORM   PS0488 03090000
*PS0488  WTO   'CTSINSTX: TSSINSTX VERSION NOT SUPPORED. SITE EXIT BYPA 03100000
*PS0488        SSED'                                                    03110000
*PS0488  B     RET2TSS                                                  03120000
*                                                                       03130000
*        VERIFY SITE EXIT MATRIX SETUP                                  03140000
*                                                                       03150000
EXITHVOK DS    0H                                                       03160000
         XR    R2,R2                                                    03170000
         IC    R2,4(R15)               R3 =  MATRIX OFFSET              03180000
         LA    R2,5(R2,R15)            R3 -> SITE EXIT MATRIX           03190000
         CLC   MATRIX,0(R2)            MATRIX EYECATCHER ?              03200000
         BE    EXITHFLG                YES, CHECK FUNCTION FLAG         03210000
         WTO   'CTSINSTX: TSSINSTX MATRIX CORRUPTED. SITE EXIT BYPASSEDX03220000
               '                                                        03230000
         B     RET2TSS                                                  03240000
*                                                                       03250000
*        CALL SITE EXIT                                                 03260000
*                                                                       03270000
EXITHFLG DS    0H                      NO, ERROR                        03280000
         L     R1,TXAFUNC              R1 -> FUNCTION CODE              03290000
         L     R1,0(R1)                R1 =  FUNCTION CODE              03300000
         SRL   R1,2                    R1 = OFFSET INTO MATRIX          03310000
         LA    R2,8(R1,R2)             R2 -> FUNCTION FLAG IN MATRIX    03320000
         CLI   0(R2),#####YES          CALL REQUIRED ?                  03330000
         BNE   EXITOFF                 NO, EXIT                         03340000
         L     R15,ADDREXIT            R15 -> ORIGINAL SITE EXIT        03350000
         LM    R0,R14,0(R13)           RESTORE ORIGINAL REGISTERS       03360000
         BR    R15                     BRANCH TO SITE EXIT              03370000
*                                                                       03380000
*        TURN REDUNDENT CTSINSTX CALLS INDICATION                       03390000
*                                                                       03400000
EXITOFF  DS    0H                                                       03410000
         XR    R1,R1                                                    03420000
         IC    R1,4(R15)               R1 =  MATRIX OFFSET              03430000
*BS2352  LA    R1,5(R1,R15)            R1 -> SITE EXIT MATRIX           03440000
         LA    R1,13(R1,R15)           R1 -> SITE EXIT MATRIX   BS2352  03450000
         LA    R2,MATRXBGN             R2 -> FIRST MATRIX ENTRY (SA)    03460000
EXITOFFL DS    0H                                                       03470000
         C     R2,=A(MATRXPST)         POST-INIT ?                      03480000
         BE    SKIPOFF                 YES, DO NOT TURN OFF             03490000
         C     R2,=A(MATRXCHG)         DATABASE CHANGE   ?              03500000
         BE    SKIPOFF                 YES, DO NOT TURN OFF             03510000
         CLI   0(R1),#####YES          SITE EXIT CALLED ?               03520000
         BE    SKIPOFF                 YES, DO NOT TURN OFF             03530000
         MVI   0(R2),######NO                                           03540000
         B     SKIPOFF                                                  03550000
SKIPOFF  DS    0H                                                       03560000
         LA    R1,1(R1)                NEXT SITE MATRIX ENTRY           03570000
         LA    R2,1(R2)                NEXT SA MATRIX ENTRY             03580000
         C     R2,=A(MATRXEND)         END OF MATRIX ?                  03590000
         BL    EXITOFFL                NO, KEEP ADVANCING               03600000
*                                                                       03610000
*        STANDARD TERMINATION SEQUENCE - RETURN TO CALLER (TOP-SECRET)  03620000
*                                                                       03630000
RET2TSS DS     0H                                                       03640000
         XR    R15,R15                 SET A ZERO RETURN CODE           03650000
         LM    R0,R14,0(R13)           RESTORE REGISTERS                03660000
         BR    R14                     RETURN TO CALLER                 03670000
*                                                                       03680000
*        THE FOLLOWING ENTRIES ARE NOT USED BY SA-AGENT                 03690000
*                                                                       03700000
PREINIT  DS    0H                                                       03710000
TERM     DS    0H                                                       03720000
SESSEND  DS    0H                                                       03730000
UNDEFIND DS    0H                                                       03740000
IO       DS    0H                                                       03750000
VOICE    DS    0H                                                       03760000
SMARTCRD DS    0H                                                       03770000
VOLUME   DS    0H                                                       03780000
DATASET  DS    0H                                                       03790000
RESOURCE DS    0H                                                       03800000
SUBMIT   DS    0H                                                       03810000
MESSAGE  DS    0H                                                       03820000
ACTION   DS    0H                                                       03830000
VIOLATN  DS    0H                                                       03840000
SITE     DS    0H                                                       03850000
CPF      DS    0H                                                       03860000
PASSWORD DS    0H                                                       03870000
COMMAND  DS    0H                                                       03880000
*                                                                       03890000
RESXMEM  DS    0H                                                IS0354 03900000
MSGXMEM  DS    0H                                                IS0354 03910000
VIOXMEM  DS    0H                                                IS0354 03920000
RESPOST  DS    0H                                                IS0354 03930000
RESPOSTX DS    0H                                                IS0354 03940000
DSNPOST  DS    0H                                                IS0354 03950000
VOLPOST  DS    0H                                                IS0354 03960000
         B     EXIT0                                                    03970000
*                                                                       03980000
*---------------------------------------------------------------------* 03990000
* PROCESS JOB/SESSION POST-INITATION                                  * 04000000
*---------------------------------------------------------------------* 04010000
POSTINIT DS    0H                                                       04020000
*                                                                       04030000
*        IGNORE POSTINIT EVENTS - IF NEW PASSWORD WAS NOT SPECIFIED     04040000
*                                                                       04050000
         ICM   R2,15,TXAIACID          R2 -> USER NAME                  04060000
         BZ    EXIT0                   NO USER , EXIT                   04070000
*                                                                       04080000
*        test if new password phrase is provided                        04090000
*        ---------------------------------------                        04100000
*        TXAIPHRA points to a string of old and new phrase strings,     04110000
*        each of 256 characters long.                                   04120000
*        The first character is the old/new phrase length               04130000
*                                                                       04140000
         ICM   R2,15,TXAIPHRA          R2 -> passphrase(o+n)    WS10064 04150000
         BZ    POSIPASS                no passphrase            WS10064 04160000
         CLI   256(R2),0               does new phrase exist ?  WS10064 04170000
         BNZ   VERFOUND                ..y, manage it           WS10064 04180000
POSIPASS DS    0H                                                       04190000
         ICM   R2,15,TXAIPASS          R2 -> PASSWORD (OLD + NEW)       04200000
         BZ    EXIT0                   NO PASSWORD , EXIT               04210000
*                                      0 MAY MEAN PHRASE IS USEDIS10125 04220000
************************ IS10125 ****************************** IS10125 04230000
* CA-TSS R8 CHANGE DESCRIBED BELOW UNDER IS0333 WAS CHANGED IN* IS10125 04240000
* CA-TSS R12.                                                 * IS10125 04250000
* FROM TSS R12, PASSWORD IS POINTED BY TXAIPASS AND PHRASE IS * IS10125 04260000
* POINTED BY TXAIPHRA. EACH OF THEM HAS OLD&NEW VALUES.       * IS10125 04270000
* TXAIPASS-> 8 + 8 , TXAIPHRA -> 256 + 256.                   * IS10125 04280000
* WE DO NOT SUPPORT PHRASE SO WE SHALL REFER TO TXAIPASS ONLY.* IS10125 04290000
* Now, we do (Jan 2018)                                       * WS10064 04300000
************************ IS10125 ****************************** IS10125 04310000
************************ IS0333 *******************************  IS0333 04320000
* BEFORE TSS R8, TXAIPASS POINTS TO OLD AND NEW PASSWORDS     *  IS0333 04330000
* WHICH THEIR LENGTHS ARE 8 + 8.                              *  IS0333 04340000
* FROM TSS R8, TXAIPASS POINTS TO OLD AND NEW PASSWORDS       *  IS0333 04350000
* WHICH THEIR LENGTHS ARE 128 + 128.                          *  IS0333 04360000
************************ IS0333 *******************************  IS0333 04370000
* CHECK IF SUPPORTED VERSION                                     IS0333 04380000
*IS10125 L     R4,CVTPTR               GET CVTPTR                IS0333 04390000
*IS10125 L     R4,CVTRAC-CVT(R4)       GET CVTRAC                IS0333 04400000
*IS10125 CLI   OFFSVER(R4),C'1'        R12 AND ABOVE?           WS10011 04410000
*IS10125 BE    VER12                   YES, WE ARE OK           WS10011 04420000
*IS10125 CLI   OFFSVER(R4),C'8'        VERSION 8 OR HIGHER ?     IS0333 04430000
*IS10125 BL    VER5                                              IS0333 04440000
*VER12   DS    0H                                               WS10011 04450000
*IS10125 CLI   128(R2),C' '            NEW PASSWORD SPECIFIED ?  IS0333 04460000
*IS10125 BNH   EXIT0                   NO - THEN IGNORE          IS0333 04470000
*IS10125 B     VERFOUND                                          IS0333 04480000
*VER5    DS    0H                                                IS0333 04490000
*IS10125 CLI   OFFSVER(R4),C'5'        VERSION 5 ?               IS0333 04500000
*IS10125 BNE   ERRVER                                            IS0333 04510000
*WS10064 CLI   8(R2),C' '              NEW PASSWORD SPECIFIED ?  IS0333 04520000
         CLI   OFFSNPW(R2),C' '        NEW PASSWORD SPECIFIED ? WS10064 04530000
         BNH   EXIT0                   NO - THEN IGNORE          IS0333 04540000
         AIF   ('&SYSPARM(1)' NE 'DEBUG').SKP04                    @DBG 04550000
         WTO   'Pswd Exist',ROUTCDE=(2)                            @DBG 04560000
.SKP04   ANOP  ,                                                   @DBG 04570000
VERFOUND DS    0H                                                IS0333 04580000
*                                                                       04590000
*WS10064 new password/phrase set - call notification routine            04600000
*                                                                       04610000
         ST    R13,WORKAREA            SAVE CURRENT SAVE AREA           04620000
         LA    R13,WORKAREA+4          ESTABLISH SAVE AREA              04630000
         LA    R1,TSSXPARM             PASS EXIT PARAMETERS LIST        04640000
         CALL  CTSSXCH                 CALL HANDLING ROUTINE            04650000
         L     R13,WORKAREA            RESTORE R13                      04660000
         B     EXIT0                   DONE                             04670000
*                                                                       04680000
*---------------------------------------------------------------------* 04690000
* PROCESS SECURITY FILE CHANGE                                        * 04700000
*---------------------------------------------------------------------* 04710000
*                                                                       04720000
CHANGE   DS    0H                                                       04730000
*                                                                       04740000
*        IGNORE CHANGE EVENTS THAT ARE NOT COMMAND RELATED              04750000
*                                                                       04760000
         L     R2,TXA#RBUF             -> IMAGE BUFFER                  04770000
         LA    R2,RECRCODE-RECOVERD(R2)                                 04780000
         CLI   0(R2),C'C'              COMMAND ?                        04790000
         BE    CHANGE0                 YES, HANDLE IT           RECRCOD 04800000
         CLI   0(R2),C'c'              COMMAND (AES) ?          RECRCOD 04810000
         BE    CHANGE0                 YES, HANDLE IT           RECRCOD 04820000
         CLI   0(R2),C'E'              COMMAND WITH ENF ?       RECRCOD 04830000
         BNE   EXIT0                   NO, IGNORE IT                    04840000
CHANGE0  DS    0H                                               RECRCOD 04850000
*                                                                       04860000
*        COMMAND UPDATE - CALL NOTIFICATION ROUTINE                     04870000
*                                                                       04880000
         ST    R13,WORKAREA            SAVE CURRENT SAVE AREA           04890000
         LA    R13,WORKAREA+4          ESTABLISH SAVE AREA              04900000
         LA    R1,TSSXPARM             PASS EXIT PARAMETERS LIST        04910000
         CALL  CTSSXCH                 CALL HANDLING ROUTINE            04920000
         L     R13,WORKAREA            RESTORE R13                      04930000
         B     EXIT0                   DONE                             04940000
*                                                                       04950000
*---------------------------------------------------------------------* 04960000
         LTORG                                                          04970000
         DS    0D                                                       04980000
OFFSH    EQU   *-CTSINSTX                                               04990000
         #INSTXPL ,          INSTALLATION EXIT PARAMETER LIST           05000000
         #FACMATX ,          FACILITY MATRIX MAPPING                    05010000
         #SMF80 ,            MAPPING OF TYPE 80 SMF RECORD              05020000
         #FLOG ,             FAST LOG BUFFER MAPPING                    05030000
         #RFLAGS ,           RESOURCE CODE EQUATES                      05040000
         #DFLAGS ,           DETAIL ERROR REASON CODES (DRCS)           05050000
         #AFLAGS ,           ACCESS LEVEL EQUATES                       05060000
         #FEEDBCK ,          FEEDBACK AREA MAPPING                      05070000
         #RECOVER ,          RECOVERY RECORD MAPPING                    05080000
         $$CPFTGT ,          TARGET DATA FOR COMMANDS WITH CPF          05090000
*---------------------------------------------------------------------* 05100000
* WORKAREA                                                              05110000
WORKAREA DSECT                                                          05120000
WORK     DS    D                                                        05130000
         ORG   WORKAREA+100   LIMIT OF WORKAREA AS PROVIDED BY T/S      05140000
         DROP  ,                                                        05150000
*                                                                       05160000
****************************************************************        05170000
*                                                                       05180000
*        SA-AGENT NOTIFICATION ROUTINE                                  05190000
*                                                                       05200000
****************************************************************        05210000
*                                                                       05220000
CTSSXCH  CSECT                                                          05230000
CTSSXCH  AMODE 31                                                       05240000
*SAS2IBMN CTSSXCH  RMODE 24                                             05250000
CTSSXCH  RMODE ANY                                             SAS2IBMN 05260000
*                                                                       05270000
         SAVE  (14,12),,CTSSXCH-&SYSDATE-&SYSTIME                       05280000
         LR    R12,R15                                                  05290000
         LA    R3,4095                 EXTEND ADDRESSABILITY    BS2438  05300000
         LA    R3,1(R3,R12)                                     BS2438  05310000
         USING CTSSXCH,R12,R3                                           05320000
         LR    R11,R1                     R11-> TSS PARAM               05330000
         USING TSSXPARM,R11                                             05340000
*                                                                       05350000
****************************************************************        05360000
*        OBTAIN WORKAREA                                                05370000
****************************************************************        05380000
*                                                                       05390000
GETWA    DS    0H                                                       05400000
*        SR    R0,R0                   CLEAR REG 0             IS10003  05410000
*        LA    R0,XCHWLEN              SET LENGTH FOR GETMAIN  IS10003  05420000
         LHI   R0,XCHWLEN                                      IS10003  05430000
         GETMAIN RC,LV=(R0)            GET CORE FOR REG SAVE AREA       05440000
         LTR   R15,R15                                                  05450000
         BZ    CHAINSA                                                  05460000
         WTO   'CTSINSTX: GETMAIN FOR WORKAREA HAS FAILED'              05470000
         B     RETURN                                                   05480000
CHAINSA  DS    0H                                                       05490000
         ST    R1,8(R13)               CHAIN                            05500000
         ST    R13,4(R1)               SAVE AREAS                       05510000
         LR    R13,R1                  ESTABLISH WORK AREA              05520000
         USING XCHWAREA,R13               ADDRESSABILITY                05530000
         XC    CMDBUFFA,CMDBUFFA       CLEAR CMD BUFFER AREA    BS10090 05540000
*                                                                       05550000
****************************************************************        05560000
*        CREATE RECOVERY ENVIRONMENT                                    05570000
****************************************************************        05580000
         XC    ABNDCODE,ABNDCODE       CLEAR ABEND CODE                 05590000
         MVC   WRKESTAE,LSTESTAE                                        05600000
         ESTAE ABNDEXIT,PARAM=XCHWAREA,TERM=YES,MF=(E,WRKESTAE)         05610000
*                                                                       05620000
*@DBG                                                                   05630000
*@DBG    MVC   WTOAREA(WTODBGL),WTODBG                                  05640000
*@DBG    L     R1,TXAFUNC     PICK UP ...                               05650000
*@DBG    L     R1,0(R1)       FUNCTION CODE                             05660000
*@DBG    CVD   R1,PACKD                                                 05670000
*@DBG    UNPK  WTOAREA+11(5),PACKD+5(3)                                 05680000
*@DBG    OI    WTOAREA+15,X'F0'                                         05690000
*@DBG    L     R2,TXA#RBUF        -> IMAGE BUFFER                       05700000
*@DBG    USING RECOVERD,R2                                              05710000
*@DBG    MVC   WTOAREA+17(01),RECRCODE                                  05720000
*@DBG    MVC   WTOAREA+19(08),RECRACID                                  05730000
*@DBG    MVC   WTOAREA+28(32),RECRDATA+4                                05740000
*@DBG    WTO   MF=(E,WTOAREA)                                           05750000
*@DBG    DROP  R2                                                       05760000
*                                                                       05770000
****************************************************************        05780000
*        BUILD RQC DATA AND EVT                                *        05790000
****************************************************************        05800000
*                                                              *        05810000
* 'RQC' IS THE 'REQUEST CONTROL BLOCK' WHICH IS USED BY THE PC *        05820000
* ROUTINES TO PASS INFORMATION TO THE SA-AGENT ONLINE          *        05830000
* INTERCEPTOR .                                                *        05840000
*                                                              *        05850000
* 'EVT' IS THE 'EVENT CONTROL BLOCK' WHICH IS IMBEDED IN THE   *        05860000
* REQUEST BLOCK FOR 'NOTIFY REQUESTS' . IT DESCRIBES THE       *        05870000
* EVENT THAT OCCURED INCLUDING THE ENTITY (USER, GROUP ETC...) *        05880000
* AND THE EVENT ACTION TYPE (ADD, DELETED, MODIFY, PASSWORD    *        05890000
* CHANGED, ETC...) .                                           *        05900000
*                                                              *        05910000
* THE FOLLOWING CODE FORMATS THESE CONTROL BLOCKS AND FILL THEM*        05920000
* WITH THE RELEVANT INFO SO THEY CAN BE PASSED ON TO THE PC    *        05930000
* ROUTINES AND BE TRANSFERED TO THE ONLINE INTERCEPTOR SERVER. *        05940000
*                                                              *        05950000
****************************************************************        05960000
*                                                                       05970000
*        INITIALIZE RQC                                                 05980000
*                                                                       05990000
*PS0244  XC    RQCAREA,RQCAREA         CLEAR LOCAL RQC AREA             06000000
         LA    R0,RQCAREA              CLEAR THE AREA            PS0244 06010000
         LA    R1,RQCLEN               SET LENGTH                PS0244 06020000
         XR    R15,R15                 PADD WITH X'00'           PS0244 06030000
         MVCL  R0,R14                  CLEAR                     PS0244 06040000
*WS10064 - no need for a base register, the Assembler supports          06050000
*WS10064   USING of a DESCT within area in which the area base          06060000
*WS10064   base register, is also the DSECT (RQC) base reg              06070000
*WS10064 LA    R4,RQCAREA              R4 -> RQC                        06080000
*WS10064 USING RQC,R4                  MAP LOCAL RQC                    06090000
         USING RQC,RQCAREA             MAP LOCAL RQC            WS10064 06100000
*PS0244  MVI   RQCTYPE,RQCTNOT         REQUEST TYPE IS 'NOTIFY'         06110000
         MVI   RQCTYPE,RQCTNOTX        REQUEST TYPE IS 'NOTIFY'  PS0244 06120000
         TIME  DEC                     TIMESTAMP                        06130000
         STM   R0,R1,RQCTSTMP             THE RQC                       06140000
*                                                                       06150000
*        INITIALIZE EVT                                                 06160000
*                                                                       06170000
*WS10064 - Remove also using in R5 as base to EVT                       06180000
*WS10064 LA    R5,RQCEVT               R5 -> EVT WITHIN THE RQC         06190000
*WS10064 USING EVT,R5                  MAP EVT                          06200000
         USING EVT,RQCEVT              MAP EVT                  WS10064 06210000
         MVC   EVTEVT,=CL4'EVT '       SET EVT EYECATCHER               06220000
         MVC   EVTFLAG,=A(EVTFULL)     MARK EVT AS CONTAINING DATA      06230000
*                                                                       06240000
*        SET TIME                                                       06250000
*                                                                       06260000
         TIME  BIN                     TIMESTAMP                        06270000
         ST    R0,EVTTIME              SET EVENT TIME                   06280000
         ST    R1,EVTDATE              SET EVENT DATE                   06290000
*                                                                       06300000
*        SET JOBNAME                                                    06310000
*                                                                       06320000
         L     R1,TXA#JOBN                                              06330000
         MVC   EVTOJBN,0(R1)           COPY JOBNAME TO EVT              06340000
         L     R1,TXA#ACID                                              06350000
         MVC   EVTOUID,0(R1)           COPY ACID TO EVT                 06360000
         MVC   EVTOTERM,=CL8'@CHA'     FILE CHANGE EVENT                06370000
*                                                                       06380000
*        PROCESS BY CALL TYPE                                           06390000
*                                                                       06400000
         L     R1,TXAFUNC                                               06410000
         L     R1,0(R1)       FUNCTION CODE                             06420000
         C     R1,=AL4($TXPINIT)                                        06430000
         BE    DOPOST                                                   06440000
         C     R1,=AL4($TXCHANG)                                        06450000
         BE    DOCHG                                                    06460000
         WTO   'CTSINSTX: SA-AGENT CHANGE EXIT ERROR - INVALID CALL'    06470000
         B     CLEANUP                                                  06480000
*                                                                       06490000
*        HANDLE POSTINIT CALL                                           06500000
*                                                                       06510000
DOPOST   DS    0H                                                       06520000
         AIF   ('&SYSPARM(1)' NE 'DEBUG').SKP06                    @DBG 06530000
         WTO   'DOPOST',ROUTCDE=(2)                                @DBG 06540000
.SKP06   ANOP  ,                                                   @DBG 06550000
         L     R2,TXAIACID             R2 -> ACID                       06560000
         MVC   EVTUSER,0(R2)           COPY ACID                        06570000
*                                                                       06580000
*WS10064 START                                                          06590000
*                                                                       06600000
*WS10064 The following code capture phrase change during LOGON          06610000
*        processing                                                     06620000
*                                                                       06630000
         ICM   R2,15,TXAIPHRA          R2 -> passphrase(o+n)            06640000
         BZ    DOPIPASS                NO PASSPHRASE, TEST PASS         06650000
         CLI   256(R2),0                                                06660000
         BE    DOPIPASS                                                 06670000
*                                                                       06680000
*        copy new PassPhrase                                            06690000
*                                                                       06700000
         LA    R14,256(0,R2)           R14->New phrase string length+   06710000
*                                      phrase string                    06720000
         XR    R15,R15                 PREPARE FOR 'IC'                 06730000
         IC    R15,256(0,R2)           R15 = NEW PASSPHRASE LENGTH      06740000
         AHI   R15,1                   + one byte of length             06750000
         LA    R0,EVTPWPH-1            R0-> second byte of length       06760000
         LA    R1,L'EVTPWPH+1          R1=destination length            06770000
         MVCL  R0,R14                  move length + passphrase         06780000
*                                      ..and also padd with nulls       06790000
*                                      ..because R15's high order byte  06800000
*                                      ..is null                        06810000
         MVI   EVTTYPE,EVTTUSER        TYPE = USER                      06820000
         MVI   EVTACT,EVTAPPH          ACTION = PASSphrase change       06830000
         MVI   EVTPHCLR,EVTPH$LG       mark it is from LOGON            06840000
         B     SENDEVT                                                  06850000
DOPIPASS DS    0H                                                       06860000
*                                                                       06870000
*WS10064 END                                                            06880000
*                                                                       06890000
         L     R2,TXAIPASS             R2 -> OLD + NEW PASSWORD         06900000
         AIF   ('&SYSPARM(1)' NE 'DEBUG').SKP05                    @DBG 06910000
         MVC   WTOAREA(WTODBGL),WTODBG                             @DBG 06920000
*        MVC   WTOAREA+12(8),128(R2)                               @DBG 06930000
         L     R7,CVTPTR               GET CVTPTR                       06940000
         L     R7,CVTRAC-CVT(R7)       GET CVTRAC                       06950000
         MVC   WTOAREA+21(2),OFFSVER(R7)                                06960000
         WTO   MF=(E,WTOAREA)                                      @DBG 06970000
.SKP05   ANOP  ,                                                   @DBG 06980000
************************ IS10125 ****************************** IS10125 06990000
* CA-TSS R8 CHANGE DESCRIBED BELOW UNDER IS0333 WAS CHANGED IN* IS10125 07000000
* CA-TSS R12.                                                 * IS10125 07010000
* FROM TSS R12, PASSWORD IS POINTED BY TXAIPASS AND PHRASE IS * IS10125 07020000
* POINTED BY TXAIPHRA. EACH OF THEM HAS OLD&NEW VALUES.       * IS10125 07030000
* TXAIPASS-> 8 + 8 , TXAIPHRA -> 256 + 256.                   * IS10125 07040000
************************ IS10125 ****************************** IS10125 07050000
************************ IS0333 *******************************  IS0333 07060000
* BEFORE TSS R8, TXAIPASS POINTS TO OLD AND NEW PASSWORDS     *  IS0333 07070000
* WHICH THEIR LENGTHS ARE 8 + 8.                              *  IS0333 07080000
* FROM TSS R8, TXAIPASS POINTS TO OLD AND NEW PASSWORDS       *  IS0333 07090000
* WHICH THEIR LENGTHS ARE 128 + 128.                          *  IS0333 07100000
************************ IS0333 *******************************  IS0333 07110000
* COPY NEW PASSWORD                                              IS0333 07120000
*IS10125 L     R7,CVTPTR               GET CVTPTR                IS0333 07130000
*IS10125 L     R7,CVTRAC-CVT(R7)       GET CVTRAC                IS0333 07140000
*IS10029 CLI   OFFSVER(R4),C'1'        R12 AND ABOVE?           IS10014 07150000
*IS10125 CLI   OFFSVER(R7),C'1'        R12 AND ABOVE?           IS10029 07160000
*IS10125 BE    VER8                    YES, WE ARE OK           IS10014 07170000
*IS10125 CLI   OFFSVER(R7),C'8'        VERSION 8 ?               IS0333 07180000
*IS10125 BNL   VER8                                              IS0333 07190000
*WS10064 MVC   EVTGROUP,8(R2)          COPY PASSWORD VERSION 5   IS0333 07200000
         MVC   EVTGROUP,OFFSNPW(R2)    COPY PASSWORD VERSION 5  WS10064 07210000
         B     GETUSER                                           IS0333 07220000
*VER8    DS    0H                                   IS10125      IS0333 07230000
*IS10125 MVC   EVTGROUP,128(R2)        COPY PASSWORD VERSION 8   IS0333 07240000
GETUSER  DS    0H                                                IS0333 07250000
*IS0333  MVC   EVTGROUP,8(R2)          COPY PASSWORD                    07260000
         MVI   EVTTYPE,EVTTUSER        TYPE = USER                      07270000
         MVI   EVTACT,EVTAPSWD         ACTION = PASSWORD                07280000
         B     SENDEVT                                                  07290000
*                                                                       07300000
*        HANDLE DATABASE CHANGE CALL                                    07310000
*                                                                       07320000
DOCHG    DS    0H                                                       07330000
         L     R2,TXA#RBUF        -> IMAGE BUFFER                       07340000
         USING RECOVERD,R2                                              07350000
*                                                                       07360000
         MVC   EVTOUID,RECRACID   ACID THAT ISSUED THE COMMAND          07370000
*                                                                       07380000
         CLI   RECRCODE,C'P'      PASSWORD ?                            07390000
         BE    CLEANUP            IGNORE, CANT USE ENCRYPTED PASSWORD   07400000
         CLI   RECRCODE,C'U'      DUFUPD ?                              07410000
         BE    CLEANUP            IGNORE,                               07420000
         CLI   RECRCODE,C'C'      COMMAND ?                             07430000
         BE    DOCMD              YES, HANDLE IT                        07440000
         CLI   RECRCODE,C'H'      PassPhrase ?                 WS10064  07450000
         BE    DOCMD              YES, HANDLE IT               WS10064  07460000
         CLI   RECRCODE,C'c'      COMMAND (AES) ?              RECRCOD  07470000
         BE    DOCMD              YES, HANDLE IT               RECRCOD  07480000
         CLI   RECRCODE,C'E'      COMMAND (ENF) ?              RECRCOD  07490000
         BE    DOCMD              YES, HANDLE IT               RECRCOD  07500000
         WTO  'CTSINSTX: SA-AGENT CHANGE EXIT ERROR - INVALID BUFFER'   07510000
         B     CLEANUP                                                  07520000
*                                                                       07530000
ERRPAR   DS    0H                                                       07540000
         WTO   'CTSINSTX: SA-AGENT CHANGE EXIT - PARSING FAILED'        07550000
         MVC   WTOAREA(@WTOLSTL),@WTOLST   INIT LIST FORM       @DC2    07560000
         LH    R2,0(R7)                    R2 = LENGTH OF CMD   @DC2    07570000
         LTR   R2,R2                       NULL ?               @DC2    07580000
         BNP   CLEANUP                     YES, IGNORE CMD      @DC2    07590000
         CH    R2,=AL2(@MAXMSG)            CMD TOO LONG ?       @DC2    07600000
         BNH   ERRPAR1                     NO, COPY ENTIRE      @DC2    07610000
         LA    R2,@MAXMSG                  LIMIT CMD MSG        @DC2    07620000
ERRPAR1  DS    0H                                               @DC2    07630000
         STH   R2,MSGTEXTL                 SET WTO LENGTH       @DC2    07640000
         MVI   MSGTEXT,C' '                CLEAR WTO TEXT       @DC2    07650000
         MVC   MSGTEXT+1(L'MSGTEXT-1),MSGTEXT                   @DC2    07660000
         MVC   MSGTEXT(L'@MSGPFX),@MSGPFX  SET WTO TEXT PREFIX  @DC2    07670000
         BCTR  R2,0                        ADJUST FOR 'EX'      @DC2    07680000
         EX    R2,@MVCMSG                  COPY CMD TO MSG      @DC2    07690000
         WTO   TEXT=MSGBUF,MF=(E,WTOAREA)  ISSUE THE MESSGAE    @DC2    07700000
         B     CLEANUP                                                  07710000
@MVCMSG  MVC   MSGTEXT+L'@MSGPFX(*-*),0(R6) OPCODET TO COPY     @DC2    07720000
@MAXMSG  EQU   L'MSGTEXT-L'@MSGPFX         MAX MSG TEXT SIZE    @DC2    07730000
@MSGPFX  DC    C'CTSINSTX: CMD='           MESSAGE PREFIX       @DC2    07740000
@WTOLST  WTO   TEXT=MSGBUF,MF=L            WTO LIST FORM        @DC2    07750000
@WTOLSTL EQU   *-@WTOLST                   LENGTH OF LIST FORM  @DC2    07760000
*                                                                       07770000
*        COMMAND PROCESSING                                             07780000
*                                                                       07790000
DOCMD    DS    0H                                                       07800000
*                                                               BS10090 07810000
*        Before we continue, we will copy the command buffer    BS10090 07820000
*        to a newly-GETMAINed area and we will blank out        BS10090 07830000
*        the comment(s) imbedded in the command, if there are   BS10090 07840000
*        any. The remainder of the routine will point to the    BS10090 07840100
*        buffer in this GETMAINed area.  Later, in the CLEANUP  BS10090 07840200
*        routine, we will FREEMAIN this buffer if it was        BS10090 07840300
*        GETMAINed.                                             BS10090 07840400
*                                                               BS10090 07840500
*        Rules about imbedded comments:                         BS10090 07840600
*        1) These are legal commands with imbedded comments:    BS10090 07840700
*           TSS /* LIST(SECSTSA) */ LIST(SECSTSB)               BS10090 07840800
*           TSS /**/ LIST(SECSTSB)                              BS10090 07840900
*           TSS /*/ LIST(SECSTSB)                               BS10090 07841000
*        2) This is a legal command with a comment at the end   BS10090 07841100
*           of the command (even without the ending '*/'):      BS10090 07841200
*           TSS LIST(SECSTSA) /* LIST(SECSTSB)                  BS10090 07841300
*        3) This is a legal command with an imbedded comment    BS10090 07841400
*           (the comment is ended by a single '*/'):            BS10090 07841500
*           TSS /* /* LIST(SECSTSA) */ LIST(SECSTSB)            BS10090 07841600
*        4) These are illegal commands (TSS is not happy with   BS10090 07841700
*           the final '*/'):                                    BS10090 07841800
*           TSS /* /* LIST(SECSTSA) */ */ LIST(SECSTSB)         BS10090 07841900
*           TSS LIST(SECSTSA) */ LIST(SECSTSB)                  BS10090 07842000
*                                                               BS10090 07842100
         SLR   R0,R0                   CLEAR LENGTH REGISTER    BS10090 07842200
         ICM   R0,B'0011',RECRDATA     GET BUFFER LENGTH        BS10090 07842300
         STH   R0,CMDBUFFL             SAVE BUFFER LENGTH       BS10090 07842400
         GETMAIN RC,LV=(R0)            GETMAIN CMD BUFFER AREA  BS10090 07842500
         LTR   R15,R15                 WAS GETMAIN SUCCESSFUL?  BS10090 07842600
         BZ    CPYCMDBF                YES, CONTINUE THERE      BS10090 07842700
         WTO   'CTSINSTX: GETMAIN FOR COMMAND BUFFER AREA HAS FAILED'   07842801
         B     RETURN                  RETURN TO CALLER         BS10090 07842900
CPYCMDBF DS    0H                                               BS10090 07843000
         ST    R1,CMDBUFFA             SAVE PTR TO CMD BUFFER   BS10090 07843100
         LR    R6,R1                   R6 POINTS TO CMD BUFFER  BS10090 07843200
         LR    R0,R1                   POINT TO CMD BUFFER AREA BS10090 07843300
         LH    R1,CMDBUFFL             GET CMD BUFFER AREA LEN  BS10090 07843400
         LA    R14,RECRDATA+4          POINT TO CMD BUFFER      BS10090 07843500
         LR    R15,R1                  GET CMD BUFFER AREA LEN  BS10090 07843600
         MVCL  R0,R14                  COPY COMMAND BUFFER      BS10090 07843700
*                                                               BS10090 07843800
*        COMMENT_LOOP:                                          BS10090 07843900
*        LOOK FOR '/*'                                          BS10090 07844000
*                 - IF FOUND, SET COMMENT BIT ON                BS10090 07844100
*        LOOK FOR '*/'                                          BS10090 07844200
*                 - IF FOUND, CLEAR COMMENT BIT AND             BS10090 07844300
*                                  BLANK OUT THESE 2 CHARACTERS BS10090 07844400
*        IF COMMENT BIT ON, BLANK OUT THIS CHARACTER            BS10090 07844500
*        INCREMENT COMMAND BUFFER POINTER AND BCT BACK TO       BS10090 07844600
*                                                  COMMENT_LOOP BS10090 07844700
*        MAKE SURE THAT R6 POINTS TO THE NEW COMMAND BUFFER     BS10090 07844800
*                                            (WITHOUT COMMENTS) BS10090 07844900
*                                                               BS10090 07845000
         LR    R14,R6                  POINT TO CMD BUFFER      BS10090 07845100
         LH    R7,CMDBUFFL             GET CMD BUFFER AREA LEN  BS10090 07845200
         MVI   COMMENT,CMNTNO          CLEAR COMMENT FLAG       BS10090 07845300
CMNTLOOP DS    0H                                               BS10090 07845400
         CLC   0(2,R14),=C'/*'         COMMENT START?           BS10090 07845500
         BNE   NTCMNTST                NO, CONTINUE THERE       BS10090 07845600
         OI    COMMENT,CMNTYES         YES, SET COMMENT FLAG    BS10090 07845700
NTCMNTST DS    0H                                               BS10090 07845800
         CLC   0(2,R14),=C'*/'         COMMENT END?             BS10090 07845900
         BNE   NTCMNTEN                NO, CONTINUE THERE       BS10090 07846000
         MVI   COMMENT,CMNTNO          YES, CLEAR COMMENT FLAG  BS10090 07846100
         MVC   0(2,R14),=2C' '         BLANK OUT THESE 2 CHARS  BS10090 07846200
NTCMNTEN DS    0H                                               BS10090 07846300
         TM    COMMENT,CMNTYES         IN MIDDLE OF COMMENT?    BS10090 07846400
         BNO   CMNTNEXT                NO, CONTINUE THERE       BS10090 07846500
         MVI   0(R14),C' '             YES, BLANK OUT THIS CHAR BS10090 07846600
CMNTNEXT DS    0H                                               BS10090 07846700
         LA    R14,1(R14)              INCREMENT CMD BUFFER PTR BS10090 07846800
         BCT   R7,CMNTLOOP             GO BACK UP TO LOOP       BS10090 07846900
*                                                               BS10090 07847000
*        AT THIS TIME, R6 POINTS TO THE NEW COMMAND BUFFER AREA BS10090 07848000
*                                                               BS10090 07849000
*BS10090 LA    R6,RECRDATA+4                                            07850000
*BS2444  LA    R7,RECRLEN                                               07860000
         LA    R7,RECRDATA             COMMAND LENGTH            BS2444 07870000
         CALL  CTSAPAR,(XCHFTAB,(6),(7),=H'8',PAROBJ,PARFUNC),         X07880000
               MF=(E,PARCALL)                                           07890000
*BS2387  LTR   R15,R15                                                  07900000
*BS2387  BNZ   ERRPAR                                                   07910000
         CH    R15,=H'4'                                         BS2387 07920000
         BH    ERRPAR                                            BS2387 07930000
         CLC   PARFUNC,=A($PARFUND)                                     07940000
         BE    DOUNDF                                                   07950000
         MVC   SAVEFUNC,PARFUNC        SAVE FUNCTION(ADD/REM)   BS2429  07960000
*WS10039                                                                07970000
*WS10039 FILTER OUT REFRESH COMMANDS                            BS2702  07980000
*WS10039                                                                07990000
*WS10039 CLC   PARFUNC,=A($PARFREF)                             BS2702  08000000
*WS10039 BE    CLEANUP                                          BS2702  08010000
*WS10039                                                                08020000
*WS10039 FILTER OUT PERMIT/REVOKE COMMANDS                              08030000
*WS10039                                                                08040000
*WS10039 CLC   PARFUNC,=A($PARFPER)                                     08050000
*WS10039 BE    CLEANUP                                                  08060000
*WS10039 CLC   PARFUNC,=A($PARFREV)                                     08070000
*WS10039 BE    CLEANUP                                                  08080000
*                                                              WS10039  08090000
**   FILTER OUT COMMANDS                                       WS10039  08100000
*                                                              WS10039  08110000
         L     R15,PARFUNC         R15 = FUNCTION CODE.        WS10039  08120000
         LA    R2,IGNCMDTB         R2 -> IGNORE TABLE.         WS10039  08130000
         LA    R0,IGNCMD#          R0 = # OF ENTRIES IN TABLE. WS10039  08140000
CMDIGNLP DS    0H                                              WS10039  08150000
         CLM   R15,B'0001',0(R2)   IGNORE COMMAND  ?           WS10039  08160000
         BE    CLEANUP             ..YES - OUT.                WS10039  08170000
         LA    R2,IGNCMDEL(,R2)    R2 -> NEXT IGNORE ENTRY.    WS10039  08180000
         BCT   R0,CMDIGNLP                                     WS10039  08190000
*                                                                       08200000
*        FILTER OUT PREDEFINED ACID NAMES                               08210000
*                                                                       08220000
         CLC   PAROBJ,=CL8'APPCLU'                                      08230000
         BE    CLEANUP                                                  08240000
         CLC   PAROBJ,=CL8'AUDIT'                                       08250000
         BE    CLEANUP                                                  08260000
         CLC   PAROBJ,=CL8'RDT'                                         08270000
         BE    CLEANUP                                                  08280000
         CLC   PAROBJ,=CL8'NDT'                                         08290000
         BE    CLEANUP                                                  08300000
         CLC   PAROBJ,=CL8'FDT'                                         08310000
         BE    CLEANUP                                                  08320000
         CLC   PAROBJ,=CL8'STC'                                         08330000
         BE    CLEANUP                                                  08340000
         CLC   PAROBJ,=CL8'DLF'                                         08350000
         BE    CLEANUP                                                  08360000
         CLC   PAROBJ,=CL8'ALL'                                         08370000
         BE    CLEANUP                                                  08380000
*WS10063 START                                                          08390000
         CLC   PAROBJ,=CL8'CERTAUTH'                                    08400000
         BE    CLEANUP                                                  08410000
         CLC   PAROBJ,=CL8'CERTSITE'                                    08420000
         BE    CLEANUP                                                  08430000
         CLC   PAROBJ,=CL8'DELEGATE'                                    08440000
         BE    CLEANUP                                                  08450000
         CLC   PAROBJ,=CL8'MLS'                                         08460000
         BE    CLEANUP                                                  08470000
*IS10169 CLC   PAROBJ,=CL8'MULTID'                                      08480000
         CLC   PAROBJ,=CL8'MULTIID'                             IS10169 08490000
         BE    CLEANUP                                                  08500000
         CLC   PAROBJ,=CL8'SDT'                                         08510000
         BE    CLEANUP                                                  08520000
*WS10063 END                                                            08530000
*BS10090 START                                                          08531000
         CLC   PAROBJ,=CL8'DATACLAS'                                    08531100
         BE    CLEANUP                                                  08531200
         CLC   PAROBJ,=CL8'SIGVER'                                      08531300
         BE    CLEANUP                                                  08531400
         CLC   PAROBJ,=CL8'TAMZ'                                        08531500
         BE    CLEANUP                                                  08531600
         CLC   PAROBJ,=CL8'*CPFRECV'                                    08531700
         BE    CLEANUP                                                  08531800
         CLC   PAROBJ,=CL8'*LDSRECV'                                    08531900
         BE    CLEANUP                                                  08532000
*BS10090 END                                                            08532100
*                                                                       08532200
*        SPECIAL CASE FOR RENAME - EXTARCT NEW NEW                      08532300
*                                                                       08532400
         CLC   PARFUNC,=A($PARFREN)                                     08532500
         BNE   DOCMD1                                                   08532600
         CALL  CTSAPAR,(XCHATAB,(6),(7),=H'8',PARVAL,PARFUNC),         X08532700
               MF=(E,PARCALL)                                           08532800
         LTR   R15,R15                                                  08532900
         BNZ   ERRPAR                                                   08533000
         B     RENOBJ                                                   08534000
*                                                                       08535000
*        SPECIAL CASE FOR ADD/REPLACE - EXTRACT PASSWORD                08536000
*                                                                       08537000
DOCMD1   DS    0H                                                       08538000
         CLC   PARFUNC,=A($PARFADD)                                     08539000
         BE    DOUPDP                                                   08540000
         CLC   PARFUNC,=A($PARFREP)                                     08550000
         BNE   DOCMD2                                                   08560000
*                                                                       08570000
DOUPDP   DS    0H                                                       08580000
*WS10064 START                      call to common code for             08590000
*                                   password and phrase changes         08600000
         BRAS  R14,PASSPHR          get password/phrase values          08610000
         B     UPDOBJ               =4: no PASSWORD/PHRASE              08620000
*WS10064 END                                                            08630000
*                                                                       08640000
*WS10064 common code to handle password and phrase change during        08650000
*        processing of ADDTO/REPLACE/CREATE commands                    08660000
*                                                                       08670000
PASSPHR  DS    0H                                               WS10064 08680000
         ST    R14,SAVERET                                      WS10064 08690000
*        invoke APAR to parse PASSWORD keyword                          08700000
         CALL  CTSAPAR,(XCHPTAB,(6),(7),=H'8',PARVAL,PARFUNC),         X08710000
               MF=(E,PARCALL)                                           08720000
         CLC   PARFUNC,=A($PARFPAS)  PASSWORD found?                    08730000
*WS10064 START                                                          08740000
*WS10064 BE    UPDOBJP                                                  08750000
         BNE   PWPHTST               ..no, skip                         08760000
         BRAS  R8,UPDOBJP            ..yes, handle password             08770000
PWPHTST  DS    0H                                                       08780000
*        invoke APAR to parse PHRASE    keyword                         08790000
*        Extract PHRASE value                                           08800000
         XC    PARVAL1,PARVAL1         initial passphrase=nulls         08810000
         CALL  CTSAPAR,(XCHHTAB,(6),(7),=AL2(L'EVTPWPH),               X08820000
               PARVAL1,PARFUNC),                                       X08830000
               MF=(E,PARCALL)                                           08840000
         CLC   PARFUNC,=A($PARFPHR)    PHRASE found?                    08850000
         BNE   PWPHSKP                 ..no, skip                       08860000
         BRAS  R8,UPDOBJH              ..yes, extract and send          08870000
PWPHSKP  DS    0H                                                       08880000
         L     R14,SAVERET             pick up RC of parsing            08890000
         BR    R14                                                      08900000
*WS10064 END                                                            08910000
*WS10064 B     UPDOBJ                                                   08920000
DOCMD2   DS    0H                                                       08930000
         CLC   PARFUNC,=A($PARFCRE)                                     08940000
         BE    ADDOBJ                                                   08950000
         CLC   PARFUNC,=A($PARFDEL)                                     08960000
         BE    DELOBJ                                                   08970000
         CLC   PARFUNC,=A($PARFREM)                                     08980000
         BE    UPDOBJ                                                   08990000
         CLC   PARFUNC,=A($PARFADM)                                     09000000
         BE    UPDOBJ                                                   09010000
         CLC   PARFUNC,=A($PARFDEA)                                     09020000
         BE    UPDOBJ                                                   09030000
         CLC   PARFUNC,=A($PARFMOV)                                     09040000
         BE    UPDOBJ                                                   09050000
         CLC   PARFUNC,=A($PARFMOD)                                     09060000
         BE    UPDGLB                                                   09070000
         WTO  'CTSINSTX: SA-AGENT CHANGE EXIT FILTERING MISMATCH EVENT *09080000
               IGNORED'                                                 09090000
         B     CLEANUP                                                  09100000
*                                                                       09110000
DOUNDF   WTO   'CTSINSTX: SA-AGENT CHANGE EXIT - UNDEFINED EVENT'       09120000
*BS2387  B     CLEANUP                                                  09130000
         B     ERRPAR                                            BS2387 09140000
*                                                                       09150000
*        ADD OBJECT                                                     09160000
*                                                                       09170000
ADDOBJ   DS    0H                                                       09180000
         MVC   EVTUSER,PAROBJ          COPY ACID                        09190000
         MVC   EVTGROUP,=CL8' '        NO GROUP                         09200000
         MVI   EVTTYPE,EVTAUNDF        TYPE = UNDEF                     09210000
         MVI   EVTACT,EVTAADD          ACTION = ADD                     09220000
         MVI   EVTCONN,EVTNOCON        FOR ADDED GROUP, ONLINE INTRCPTR 09230000
*                                      WILL NOT ADD CONNECTIONS  BS2618 09240000
******************** IS10020 START ******************************       09250000
         L     R2,TXA#RBUF             -> IMAGE BUFFER                  09260000
         XR    R15,R15                                                  09270000
         ICM   R15,3,RECRLEN-RECOVERD(R2) =DATA LENGTH                  09280000
         SH    R15,=H'12'              SKIP 'TSS ' AT PREFIX & USING(   09290000
         BNP   USINGNFD                NOT ENOUGH DATA 4 USING          09300000
*                                      AND 'USING(X)' AT SUFFIX         09310000
         LA    R2,RECRDATA-RECOVERD+4(R2) -> DATA ITSELF 'TSS '         09320000
USNGSRCH DS    0H                                                       09330000
         CLC   0(5,R2),=CL5'USING'     SEARCH FOR USING IN CMND         09340000
         BE    USINGFND                USING IS FOUND                   09350000
         LA    R2,1(R2)                ADVANCE IN COMMAND BUFFER        09360000
         BCT   R15,USNGSRCH            CONTINUE SEARCHING               09370000
         B     USINGNFD                USING NOT FOUND                  09380000
USINGFND DS    0H                                                       09390000
         MVC   EVTGROUP,=CL8'*DUMMY*'  COPY GROUP                       09400000
         MVI   EVTTYPE,C'N'            MULTIPLE CONNS & ADD_USER        09410000
USINGNFD DS    0H                                                       09420000
******************** IS10020 END ********************************       09430000
*                                                                       09440000
*BS2489  B     SENDEVT                                                  09450000
*                                                                       09460000
* SEND THE CONNECTIONS THAT APPEARED IN THE TSS CREATE COMMAND          09470000
*                                                                       09480000
         BAL   R8,SENDIT                                  BS2489        09490000
         MVI   EVTACT,EVTAUPD          ACTION = UPDATE    BS2489        09500000
         MVC   SAVEFUNC,=A($PARFADD)   INDICATE UPD CONNS BS2489        09510000
         BRAS  R14,PASSPHR    get password/phrase values        WS10064 09520000
         B     CHECK_CONN                                 BS2489        09530000
*                                                                       09540000
*        OBJECT UPDATE                                                  09550000
*                                                                       09560000
UPDOBJ   DS    0H                                                       09570000
         MVC   EVTUSER,PAROBJ          COPY ACID                        09580000
***      CLC   PARFUNC,=A($PARFREM)    IS THIS A 'REMOVE' CMD?  BS10090 09590000
***      BNE   UPDOBJCN                NO, CONTINUE             BS10090 09600000
***      CLC   EVTUSER,=C'*CPFRECV'    REMOVE(*CPFRECV) CMD?    BS10090 09610000
***      BE    CLEANUP                 YES, IGNORE THIS COMMAND BS10090 09620000
***      CLC   EVTUSER,=C'*LDSRECV'    REMOVE(*LDSRECV) CMD?    BS10090 09630000
***      BE    CLEANUP                 YES, IGNORE THIS COMMAND BS10090 09640000
***UPDOBJCN DS 0H                                               BS10090 09650000
         MVC   EVTGROUP,=CL8' '        NO GROUP                         09660000
         MVI   EVTTYPE,EVTAUNDF        TYPE = UNDEF                     09670000
         MVI   EVTACT,EVTAUPD          ACTION = UPDATE                  09680000
*BS2429  B     SENDEVT                                                  09690000
         BAL   R8,SENDIT                                  BS2429        09700000
         B     CHECK_CONN                                 BS2429        09710000
*                                                                       09720000
*WS10064 START                                                          09730000
*                                                                       09740000
*        Extract PHRASE keyword's value                                 09750000
*        ==============================                                 09760000
*  PHRASE may be enclosed with apostrophes, therfore the following      09770000
*  code keeps the PHRASE delimiter. If it is apostrophe, then it is     09780000
*  the delimiter, otherwise - a blank is the delimiter.                 09790000
*  a comma is a part of the text only if the delimiter is apostrophe.   09800000
*                                                                       09810000
UPDOBJH  DS    0H                                                       09820000
         ST    R8,SAVERPW                                               09830000
         STM   R2,R7,SAVEREGS                                           09840000
*        AIF   ('&SYSPARM(1)' NE 'DEBUG').SKP03                    @DBG 09850000
*        MVC   WTOAREA(WTODBGL),WTODBG                                  09860000
*        MVC   WTOAREA+12(60),PARVAL1                                   09870000
*        WTO   MF=(E,WTOAREA)                                           09880000
*SKP03   ANOP  ,                                                   @DBG 09890000
         MVI   DELIMITR,C' '       default delimiter                    09900000
         LA    R4,PARVAL1                                               09910000
         LA    R5,L'EVTPWPH+2      passphrase max length + aposts       09920000
         LA    R3,EVTPWPH          passphrase string                    09930000
PWHDOCP1 DS    0H                                                       09940000
         CLI   0(R4),C' '          START OF VALUE ?                     09950000
         BH    PWHDOCP2            NO, NOT YET                          09960000
         LA    R4,1(R4)            KEEP GOING                           09970000
         BCT   R5,PWHDOCP1         LOOP FOR NEXT                        09980000
PWHDOCP2 DS    0H                                                       09990000
         XR    R7,R7               R7 -> LENGTH OF TEXT                 10000000
         CLI   0(R4),C''''         is it apostrophe?                    10010000
         BNE   PWHDOCPY            ..no, leave default                  10020000
         MVI   DELIMITR,C''''      delimiter is "'"                     10030000
         LA    R4,1(0,R4)          skip on it                           10040000
PWHDOCPY DS    0H                                                       10050000
         CLC   0(1,R4),DELIMITR    END OF VALUE ?                       10060000
         BE    PWHCPYOK            YES, DONE WITH COPY                  10070000
         CLI   0(R4),C','          comma?                               10080000
         BNE   PWHLOPC                                                  10090000
         CLI   DELIMITR,C' '                                            10100000
         BE    PWHCPYOK                                                 10110000
PWHLOPC  DS    0H                                                       10120000
         MVC   0(1,R3),0(R4)                                            10130000
         LA    R3,1(R3)            NEXT output char                     10140000
         LA    R4,1(R4)            NEXT input  CHAR                     10150000
         LA    R7,1(R7)            ADVANCE COUNTER                      10160000
         BCT   R5,PWHDOCPY         LOOP FOR NEXT                        10170000
PWHCPYOK DS    0H                                                       10180000
         MVI   0(R3),0             mark end of string                   10190000
*        Send Update User event                                         10200000
         MVC   EVTUSER,PAROBJ          COPY ACID                        10210000
         MVC   EVTGROUP,=CL8' '        NO GROUP                         10220000
         MVI   EVTTYPE,EVTTUSER        TYPE = USER                      10230000
         MVI   EVTACT,EVTAUPD          ACTION = UPDATE                  10240000
         BAL   R8,SENDIT                                                10250000
*        Send PassPhrase event                                          10260000
         STC   R7,EVTPWPHL         save length                          10270000
         MVC   EVTUSER,PAROBJ          COPY ACID                        10280000
         MVI   EVTTYPE,EVTTUSER        TYPE = USER                      10290000
         MVI   EVTACT,EVTAPPH          ACTION = PASSphrase change       10300000
         MVI   EVTPHCLR,EVTPH$OT       mark it is from other source     10310000
PWHXIT   DS    0H                                                       10320000
         LM    R2,R7,SAVEREGS                                           10330000
         B     SENDPWPH                                       BS2429    10340000
*WS10064 END                                                            10350000
*        OBJECT OBJECT WITH PASSWORD OPERAND                            10360000
*        Extract PASSWORD keyword's value                       WS10064 10370000
*        ================================                       WS10064 10380000
UPDOBJP  DS    0H                                                       10390000
         ST    R8,SAVERPW                                       WS10064 10400000
         MVC   EVTUSER,PAROBJ          COPY ACID                        10410000
         MVC   EVTGROUP,=CL8' '        NO GROUP                         10420000
         MVI   EVTTYPE,EVTTUSER        TYPE = USER                      10430000
         MVI   EVTACT,EVTAUPD          ACTION = UPDATE                  10440000
         BAL   R8,SENDIT               SEND FIRST EVT                   10450000
*                                                                       10460000
         CLC   PARVAL,=CL8'*'          PASSWORD SPECIFID?               10470000
*WS10064 BE    CLEANUP                 NOOOP                            10480000
         BE    PWRC8                   NOOOP                    WS10064 10490000
         CLC   PARVAL,=CL8' '          PASSWORD CHANGED ?               10500000
*WS10064 BE    CLEANUP                 NOOOP                            10510000
         BE    PWRC8                   NOOOP                    WS10064 10520000
         CLC   PARVAL,=CL8'NOPW'       NO PASSWORD FOR THE USER ?       10530000
*WS10064 BE    CLEANUP                 NOOOP                            10540000
         BE    PWRC8                   NOOOP                    WS10064 10550000
         MVC   EVTUSER,PAROBJ          COPY ACID                        10560000
         MVC   EVTGROUP,PARVAL         COPY PASSWORD                    10570000
         MVI   EVTTYPE,EVTTUSER        TYPE = USER                      10580000
         MVI   EVTACT,EVTAPSWD         ACTION = PASSWORD                10590000
*BS2429  B     SENDEVT                                                  10600000
SENDPWPH DS    0H                                               WS10064 10610000
         BAL   R8,SENDIT                                      BS2429    10620000
         L     R8,SAVERPW                                       WS10064 10630000
         BR    R8                                               WS10064 10640000
PWRC8    DS    0H                                               WS10064 10650000
         L     R8,SAVERPW                                       WS10064 10660000
         BR    R8                                               WS10064 10670000
*WS10064 B     CHECK_CONN                                     BS2429    10680000
*                                                             BS2429    10690000
*        IF PROFILE MODIFIED, SEND CONNECTION                 BS2429    10700000
*                                                             BS2429    10710000
CHECK_CONN DS 0H                                              BS2429    10720000
*                                                             BS2429    10730000
*        CONNECTION ADD/UPDATE ?                              BS2429    10740000
*                                                             BS2429    10750000
         CLC   SAVEFUNC,=A($PARFADD) UPDATE CONNECTION ?      BS2429    10760000
         BNE   CHKCONND                                       BS2429    10770000
         XC    PARVAL1,PARVAL1                                BS2429    10780000
         XC    PARVAL2,PARVAL2                                BS2429    10790000
         CALL  CTSAPAR,(XCHCNTAB,(6),(7),=H'255',PARVAL1,PARFUNC),     X10800000
               MF=(E,PARCALL)                                 BS2429    10810000
         CLC   PARFUNC,=A($PARFCNN)                           BS2429    10820000
         BE    UPD_CONN                                       BS2429    10830000
         CALL  CTSAPAR,(XCHGRTAB,(6),(7),=H'255',PARVAL1,PARFUNC),     X10840000
               MF=(E,PARCALL)                                 BS2429    10850000
         CLC   PARFUNC,=A($PARFGRP)                           BS2429    10860000
         BNE   CLEANUP                                        BS2429    10870000
UPD_CONN DS    0H                                                       10880000
         CALL  CTSAPAR,(XCHABTAB,(6),(7),=H'8',PARVAL,PARFUNC),        X10890000
               MF=(E,PARCALL)                                 BS2438    10900000
         CLC   PARFUNC,=A($PARFAB)                            BS2438    10910000
         BE    GRPDUMMY                                       BS2438    10920000
*                                                             BS2438    10930000
*    LOOP TO SEND ALL CONNECTIONS ADDED (IF NOT BEFORE/AFTER) BS2438    10940000
*                                                             BS2438    10950000
         LA    R9,256              PREVENT LOOP               BS2438    10960000
         LA    R1,PARVAL1                                     BS2438    10970000
         ST    R1,PVALADD                                     BS2438    10980000
         MVC   PVALLEN,=AL4(L'PARVAL1)                        BS2438    10990000
UPDCONNL DS    0H                                             BS2438    11000000
         CALL  CTSAEXT,(PVALADD,PVALLEN,VALPTR,VALLEN),       BS2438   X11010000
               MF=(E,EXTCALL)                                 BS2438    11020000
         LTR   R15,R15                                        BS2438    11030000
         BNZ   UPDCONNE                                       BS2438    11040000
*                                                             BS2438    11050000
         MVC   EVTGROUP,=CL8' '       BLANK GROUP NAME        PS0488    11060000
         L     R2,VALLEN                                      BS2438    11070000
         BCTR  R2,0                                           BS2438    11080000
         L     R1,VALPTR                                      BS2438    11090000
         MVC   EVTGROUP(*-*),0(R1)     COPY GROUP NAME        BS2438    11100000
         EX    R2,*-6                                         BS2438    11110000
*                                                             BS2438    11120000
         MVC   EVTUSER,PAROBJ          COPY ACID              BS2438    11130000
         MVI   EVTTYPE,EVTTCONN        TYPE = CONNECTION      BS2438    11140000
         MVI   EVTACT,EVTAUPD          ACTION = UPD CONN      BS2438    11150000
         BAL   R8,SENDIT                                      BS2438    11160000
         BCT   R9,UPDCONNL                                    BS2438    11170000
UPDCONNE DS    0H                                             BS2438    11180000
         B     CLEANUP                                        BS2438    11190000
GRPDUMMY DS    0H                                             BS2438    11200000
*                                                             BS2438    11210000
*    IF BEFORE/AFTER - INDICATE THE INTERCEPTOR TO SEND ALL   BS2438    11220000
*    CONNECTIONS                                              BS2438    11230000
*                                                             BS2438    11240000
         MVC   EVTUSER,PAROBJ          COPY ACID              BS2429    11250000
         MVC   EVTGROUP,=CL8'*DUMMY*'  COPY GROUP             BS2429    11260000
         MVI   EVTTYPE,C'M'            TYPE = MULTIPLE CONNS  BS2438    11270000
         MVI   EVTACT,EVTAUPD          ACTION = UPD CONN      BS2429    11280000
         B     SENDEVT                                        BS2429    11290000
*                                                             BS2429    11300000
*        CONNECTION REMOVAL                                   BS2429    11310000
*                                                             BS2429    11320000
CHKCONND DS    0H                                                       11330000
         CLC   SAVEFUNC,=A($PARFREM) REMOVE CONNECTION ?      BS2429    11340000
         BNE   CLEANUP                                        BS2429    11350000
         XC    PARVAL1,PARVAL1                                BS2429    11360000
         XC    PARVAL2,PARVAL2                                BS2429    11370000
         CALL  CTSAPAR,(XCHCNTAB,(6),(7),=H'255',PARVAL1,PARFUNC),     X11380000
               MF=(E,PARCALL)                                 BS2429    11390000
         CALL  CTSAPAR,(XCHGRTAB,(6),(7),=H'255',PARVAL2,PARFUNCG),    X11400000
               MF=(E,PARCALL)                                 BS2429    11410000
         CLC   PARFUNC,=A($PARFCNN)                           BS2429    11420000
         BE    DEL_CONN                                       BS2429    11430000
         CLC   PARFUNCG,=A($PARFGRP)                          BS2429    11440000
         BNE   CLEANUP                                                  11450000
DEL_CONN DS    0H                                             BS2429    11460000
         LA    R9,256              PREVENT LOOP               BS2429    11470000
         LA    R1,PARVALL                                     BS2429    11480000
         ST    R1,PVALADD                                     BS2429    11490000
         MVC   PVALLEN,=AL4(L'PARVALL)                        BS2429    11500000
DELCONNL DS    0H                                             BS2429    11510000
         CALL  CTSAEXT,(PVALADD,PVALLEN,VALPTR,VALLEN),       BS2429   X11520000
               MF=(E,EXTCALL)                                 BS2429    11530000
         LTR   R15,R15                                        BS2429    11540000
         BNZ   DELCONNE                                       BS2429    11550000
*                                                             BS2429    11560000
         MVC   EVTGROUP,=CL8' '       BLANK GROUP NAME        PS0488    11570000
         L     R2,VALLEN                                      BS2429    11580000
         BCTR  R2,0                                           BS2429    11590000
         L     R1,VALPTR                                      BS2429    11600000
         MVC   EVTGROUP(*-*),0(R1)     COPY GROUP NAME        BS2429    11610000
         EX    R2,*-6                                         BS2429    11620000
*                                                             BS2429    11630000
         MVC   EVTUSER,PAROBJ          COPY ACID              BS2429    11640000
         MVI   EVTTYPE,EVTTCONN        TYPE = CONNECTION      BS2429    11650000
         MVI   EVTACT,EVTADEL          ACTION = DEL CONN      BS2429    11660000
         BAL   R8,SENDIT                                      BS2429    11670000
         BCT   R9,DELCONNL                                    BS2429    11680000
*                                                             BS2438    11690000
*        UPDATE IN ESS THE REMAINING CONNECTIONS RELATIVE     BS2438    11700000
*        POSITIONS.                                           BS2438    11710000
*                                                             BS2438    11720000
DELCONNE DS    0H                                             BS2438    11730000
         MVC   EVTGROUP,=CL8'*DUMMY* ' COPY GENERIC GROUP     BS2438    11740000
         MVC   EVTUSER,PAROBJ          COPY ACID              BS2438    11750000
         MVI   EVTTYPE,C'M'            TYPE = MULTIPLE CONNS  BS2438    11760000
         MVI   EVTACT,EVTAUPD          ACTION = UPD CONN      BS2438    11770000
         B     SENDEVT                                        BS2438    11780000
*                                                                       11790000
*        OBJECT DELETE                                                  11800000
*                                                                       11810000
DELOBJ   DS    0H                                                       11820000
         MVC   EVTUSER,PAROBJ          COPY ACID                        11830000
         MVC   EVTGROUP,=CL8' '        NO GROUP                         11840000
         MVI   EVTTYPE,EVTAUNDF        TYPE = UNDEF                     11850000
         MVI   EVTACT,EVTADEL          ACTION = DELETE                  11860000
         B     SENDEVT                                                  11870000
*                                                                       11880000
*        OBJECT RENAME                                                  11890000
*                                                                       11900000
RENOBJ   DS    0H                                                       11910000
         MVC   EVTUSER,PAROBJ          COPY ACID                        11920000
         MVC   EVTGROUP,=CL8' '        NO GROUP                         11930000
         MVI   EVTTYPE,EVTAUNDF        TYPE = UNDEF                     11940000
         MVI   EVTACT,EVTADEL          ACTION = DELETE                  11950000
         BAL   R8,SENDIT               SEND FIRST EVT                   11960000
*                                                                       11970000
         MVC   EVTUSER,PARVAL          COPY ACID                        11980000
         MVC   EVTGROUP,=CL8' '        NO GROUP                         11990000
         MVI   EVTTYPE,EVTAUNDF        TYPE = UNDEF                     12000000
         MVI   EVTACT,EVTAADD          ACTION = ADD                     12010000
         MVI   EVTCONN,EVTALLCN        GET RENAMED GROUP CONNS   BS2618 12020000
*                                                                       12030000
         B     SENDEVT                                                  12040000
*                                                                       12050000
*        GLOBAL PARAMETERS CHANGE                                       12060000
*                                                                       12070000
UPDGLB   DS    0H                                                       12080000
         MVC   EVTUSER,=CL8' '         USERID                           12090000
         MVC   EVTGROUP,=CL8' '        GROUP                            12100000
         MVI   EVTTYPE,EVTTRSSP        RSS PARAMETERS                   12110000
         MVI   EVTACT,EVTAUPD             WERE UPDATED                  12120000
         B     SENDEVT                                                  12130000
*                                                                       12140000
****************************************************************        12150000
*        ROUTINE TO SEND EVT                                            12160000
****************************************************************        12170000
SENDIT   DS    0H                                                       12180000
         AIF   ('&SYSPARM(1)' NE 'DEBUG').SKP01                    @DBG 12190000
         MVC   WTOAREA(WTODBGL),WTODBG                             @DBG 12200000
*        MVC   WTOAREA+12(50),EVTTYPE                              @DBG 12210000
         MVC   WTOAREA+12(10),EVTTYPE                              @DBG 12220000
         LA    R0,0(0,R8)              REMOVE H.O BIT              @DBG 12230000
         SR    R0,R12                                              @DBG 12240000
         AHI   R0,OFFSH                                            @DBG 12250000
         ST    R0,PACKD                                            @DBG 12260000
         UNPK  WTOAREA+63(9),PACKD(5)  CONVERT TO PRINTABLE        @DBG 12270000
         TR    WTOAREA+63(8),HEX2CHAR                              @DBG 12280000
         MVI   WTOAREA+71,C' '                                     @DBG 12290000
         WTO   MF=(E,WTOAREA)                                      @DBG 12300000
.SKP01   ANOP  ,                                                   @DBG 12310000
*                                                                       12320000
*WS10064 CALL  CTSAPCC,(FUJIFLAG,SSNAME,JOBNAME,(R4),PCCWORK),        X 12330000
         CALL  CTSAPCC,(FUJIFLAG,SSNAME,JOBNAME,RQCAREA,PCCWORK),      X12340000
               MF=(E,PCCAREA)                                           12350000
         LTR   R15,R15                 NOTIFY SUCCESSFULL ?             12360000
         BZ    SENDEVTE                YES, CONTINUE                    12370000
*                                                                       12380000
         CH    R15,=H'8'               FREE CHAIN EXISTS ?      IS10023 12390000
         BE    NOFRCHN                 NO MORE RQC IN FREE CHAINIS10023 12400000
*                                                                       12410000
         CH    R15,=H'160'             WAS THE INTERCEPTOR UP ?         12420000
         BNH   SENDEVTE                NO, THAN NO NEED FOR MESSAGE     12430000
         CVD   R15,PACKD               CONVERT RC TO EBCDIC             12440000
         UNPK  CHARRC,PACKD            CONVERT RC TO EBCDIC             12450000
         OI    CHARRC+7,X'F0'          CONVERT RC TO EBCDIC             12460000
         MVC   WTOAREA(WTONTFYL),WTONTFY                                12470000
         MVC   WTOAREA+WTONTFYL-4(4),CHARRC+4                           12480000
         WTO   MF=(E,WTOAREA)                                           12490000
         B     SENDEVTE                CONTINUE AS USUAL        IS10023 12500000
NOFRCHN  DS    0H                                               IS10023 12510000
         MVC   WTOAREA(WTOEVTL),WTOEVT                          IS10023 12520000
         MVC   WTOAREA+22(L'EVTUSER),EVTUSER                    IS10023 12530000
         WTO   MF=(E,WTOAREA)                                   IS10023 12540000
SENDEVTE DS    0H                                                       12550000
         BR    R8                                                       12560000
*                                                                       12570000
****************************************************************        12580000
*        NOTIFY SA-AGENT INTERCEPTOR OF THE EVENT                       12590000
****************************************************************        12600000
*                                                                       12610000
SENDEVT  DS    0H                                                       12620000
         BAL   R8,SENDIT                                                12630000
         B     CLEANUP                                                  12640000
*WS10064 DROP  R4                                                       12650000
*                                                                       12660000
****************************************************************        12670000
*        ISSUE ABEND MESSGAE                                   *        12680000
****************************************************************        12690000
*                                                                       12700000
CLEANUP  DS    0H                                                       12710000
         ICM   R2,15,ABNDCODE          R2 = ABEND CODE WORD             12720000
         BZ    NOABEND                 NO, NO ABEND                     12730000
         MVI   ABNDTYPE,C'U'           ASSUME USER ABEND                12740000
         N     R2,=XL4'00000FFF'       TEST FOR USER ABEND CODE         12750000
         BNZ   ABENDMSG                YES, HAVE USER ABEND CODE        12760000
         L     R2,ABNDCODE             R2 = ABEND CODE WORD             12770000
         SRL   R2,12                   ISOLATE SYSTEM ABEND CODE        12780000
         MVI   ABNDTYPE,C'S'           SET SYSTEM ABEND CODE            12790000
ABENDMSG DS    0H                                                       12800000
         ST    R2,ABNDBIN              SAVE BINARY ABEND CODE           12810000
         UNPK  ABNDCHAR(9),ABNDBIN(5)  CONVERT TO ZONED                 12820000
         TR    ABNDCHAR(8),HEX2CHAR    MAKE IT CHARACTER                12830000
         MVC   ABNDCHAR+4(1),ABNDTYPE  INSERT ABEND TYPE CHARACTER      12840000
         MVC   WTOAREA(WTOABNDL),WTOABND                                12850000
         MVC   WTOAREA+WTOABNDL-4(4),ABNDCHAR+4                         12860000
         WTO   MF=(E,WTOAREA)                                           12870000
NOABEND  DS    0H                                                       12880000
*                                                                       12890000
****************************************************************        12900000
*        CLRER RECOVERY ENVIRONMENT                            *        12910000
****************************************************************        12920000
*                                                                       12930000
         ESTAE 0                                                        12940000
*                                                                       12950000
****************************************************************        12960000
*        FREE WORKAREA                                                  12970000
****************************************************************        12980000
*                                                                       12990000
         ICM   R1,B'1111',CMDBUFFA     GET PTR TO CMD BUFFER    BS10090 13000000
         BZ    FREEWKAR                NONE, CONTINUE THERE     BS10090 13010000
         LH    R0,CMDBUFFL             GET LENGTH OF CMD BUFFER BS10090 13020000
         FREEMAIN RC,LV=(R0),A=(R1)    FREE THE CMD BUFFER AREA BS10090 13030000
         LTR   R15,R15                 WAS FREEMAIN SUCCESSFUL? BS10090 13040000
         BZ    FREEWKAR                YES, CONTINUE THERE      BS10090 13050000
         WTO   'CTSINSTX: FREEMAIN OF COMMAND BUFFER AREA HAS FAILED'   13060001
FREEWKAR DS    0H                                               BS10090 13061000
         LR    R1,R13                  ADDRESS FOR FREEMAIN             13062000
         L     R13,4(R13)              RESTORE CALLERS SAVE AREA        13063000
*        SR    R0,R0                   CLEAR REG 0             IS10003  13064000
*        LA    R0,XCHWLEN              SET LENGTH FOR GETMAIN  IS10003  13065000
         LHI   R0,XCHWLEN              FREE WORK AREA          IS10003  13066000
         FREEMAIN RC,LV=(R0),A=(R1)                                     13067000
         LTR   R15,R15                                                  13068000
         BZ    RETURN                                                   13069000
         WTO   'CTSINSTX: FREEMAIN OF WORKAREA HAS FAILED'              13070000
*                                                                       13080000
****************************************************************        13090000
*        FINISH                                                         13100000
****************************************************************        13110000
*                                                                       13120000
RETURN   DS    0H                                                       13130000
         XR    R15,R15                 SET RETURN CODE                  13140000
         RETURN (14,12),T,RC=(15)      RESTORE REGISTERS AND RETURN     13150000
         DROP  R11                                                      13160000
*                                                                       13170000
****************************************************************        13180000
*        CONSTANTS                                                      13190000
****************************************************************        13200000
*                                                                       13210000
         LTORG ,                                                        13220000
*                                                                       13230000
SSNAME   DC    CL4'    '                                                13240000
JOBNAME  DC    CL8'CTSAONI'                                             13250000
FUJIFLAG DC    AL1(128)                                                 13260000
*                                                              WS10039  13270000
**  LIST OF COMMANDS THAT SHOULD BE IGNORED BY THE EXIT.       WS10039  13280000
*                                                              WS10039  13290000
IGNCMDTB DS    0X                  COMMAND TO IGNORE:          WS10039  13300000
         DC    AL1($PARFREF)       ..REFRESH                   WS10039  13310000
IGNCMDEL EQU   *-IGNCMDTB                                      WS10039  13320000
         DC    AL1($PARFPER)       ..PERMIT                    WS10039  13330000
         DC    AL1($PARFREV)       ..REVOKE                    WS10039  13340000
         DC    AL1($PARFGEN)       ..G* (GENCERT / GENREQ)     WS10039  13350000
         DC    AL1($PARFRNW)       ..RENEW                     WS10039  13360000
         DC    AL1($PARFRKY)       ..REKEY                     WS10039  13370000
         DC    AL1($PARFROV)       ..ROLLOVER                  WS10039  13380000
IGNCMD#  EQU   (*-IGNCMDTB)/IGNCMDEL                           WS10039  13390000
*                                                                       13400000
LSTESTAE ESTAE MF=L                                                     13410000
LENESTAE EQU   *-LSTESTAE                                               13420000
*                                                                       13430000
WTONTFY  WTO  'CTSINSTX: SA-AGENT ONLINE INTERCEPTOR NOTIFY HAS FAILED *13440000
               RC=XXXX',MF=L                                            13450000
WTONTFYL EQU   *-WTONTFY                                                13460000
WTOABND  WTO  'CTSINSTX: SA-AGENT TOP SECRET EXIT HAS ABENDED. ABEND CO*13470000
               DE=XXXX',MF=L                                            13480000
WTOABNDL EQU   *-WTOABND                                                13490000
*                                                                       13500000
WTOEVT   WTO   'CTSU83A: EVENT OF <USERID> IS LOST. START AGENT ASAP TO*13510000
                EMPTY QUEUE AND MEMORY.',MF=L                   IS10023 13520000
WTOEVTL  EQU   *-WTOEVT                                         IS10023 13530000
*                                                                       13540000
         AIF   ('&SYSPARM(1)' NE 'DEBUG').SKP02                    @DBG 13550000
WTODBG   WTO   'DEBUG:                                             @DBG*13560000
                                                          ',MF=L,  @DBG*13570000
               ROUTCDE=(2)                                         @DBG 13580000
WTODBGL  EQU   *-WTODBG                                            @DBG 13590000
.SKP02   ANOP  ,                                                   @DBG 13600000
                                                                        13610000
HEX2CHAR DC    256AL1(*-HEX2CHAR)                                       13620000
         ORG   HEX2CHAR+X'FA'                                           13630000
         DC    CL6'ABCDEF'                                              13640000
         ORG                                                            13650000
         DROP                                                           13660000
*                                                                       13670000
****************************************************************        13680000
*        ABEND RECOVERY ROUTINE                                *        13690000
****************************************************************        13700000
*                                                                       13710000
ABNDEXIT DS    0H                                                       13720000
         USING ABNDEXIT,R15            ABEND EXIT ADDRESSABILITY        13730000
         L     R12,=A(CTSSXCH)         RESTORE LMOD BASE REG            13740000
         DROP  R15                     USE LMOD ADDRESSABILITY          13750000
*WS10064 USING CTSSXCH,R12             RESTORE ITS ADDRESSABILITY       13760000
         LA    R3,4095                 EXTEND ADDRESSABILITY   WS10064  13770000
         LA    R3,1(R3,R12)                                    WS10064  13780000
         USING CTSSXCH,R12,R3                                  WS10064  13790000
         C     R0,=F'12'               SDWA PROVIDED ?                  13800000
         BE    NOSDWA                  NO, CAN NOT RETRY                13810000
         USING SDWA,R1                 MAP SDWA                         13820000
         L     R13,SDWAPARM            RESTORE WORKAREA REGISTER        13830000
         USING XCHWAREA,R13            MAP WORKAREA                     13840000
         MVC   ABNDCODE,SDWAABCC       SET ABEND CODE                   13850000
         TM    SDWAERRD,SDWACLUP       RETRY ALLOWED ?                  13860000
         BNZ   NORETRY                 NO, CAN NOT RETRY                13870000
*                                                                       13880000
RETRY    DS    0H                                                       13890000
         ST    R12,SDWASR12            SET BASE REGISTER FOR RETRY      13900000
         ST    R13,SDWASR13            SET WORKAREA REGISTER FOR RETRY  13910000
*                                                                       13920000
         STM   R14,R1,SAVEREGS                                          13930000
         SDUMP HDR='SA-AGENT TOP SECRET EXIT ABEND',                   X13940000
               SDATA=(ALLPSA,CSA,LSQA,RGN,SUMDUMP)                      13950000
         LM    R14,R1,SAVEREGS                                          13960000
*                                                                       13970000
         SETRP RETREGS=YES,RC=4,RETADDR=CLEANUP,                       X13980000
               FRESDWA=YES,DUMP=YES                                     13990000
         BR    R14                                                      14000000
*                                                                       14010000
NOSDWA   DS    0H                                                       14020000
         LR    R13,R2                   NO SDWA, PARM IN R2             14030000
         ST    R1,ABNDCODE              SAVE ABEND CODE                 14040000
         XR    R1,R1                    CLEAR                           14050000
NORETRY  DS    0H                                                       14060000
         XR    R15,R15                  INDICATE NO RETRY               14070000
         BR    R14                      RETURN TO RTM                   14080000
         LTORG                                                          14090000
         DROP                                                           14100000
$PARFUND EQU    0                                                       14110000
$PARFCRE EQU    4                                                       14120000
$PARFDEL EQU    8                                                       14130000
$PARFADD EQU   12                                                       14140000
$PARFREM EQU   16                                                       14150000
$PARFREP EQU   20                                                       14160000
$PARFREN EQU   24                                                       14170000
$PARFMOV EQU   28                                                       14180000
$PARFMOD EQU   32                                                       14190000
$PARFADM EQU   36                                                       14200000
$PARFDEA EQU   40                                                       14210000
$PARFACI EQU   44                                                       14220000
$PARFPAS EQU   48                                                       14230000
$PARFPER EQU   52                                                       14240000
* UPDATE ALL FOLLOWING EQUS BY +4 DUE TO $PARFPER = $PARFREV WS10039    14250000
$PARFREV EQU   56                                            WS10039    14260000
$PARFCNN EQU   60                                            WS10039    14270000
$PARFGRP EQU   64                                            WS10039    14280000
$PARFAB  EQU   68                                            WS10039    14290000
$PARFREF EQU   72                                   BS2702   WS10039    14300000
$PARFGEN EQU   76                 G* (GENCERT / GENREQ)      WS10039    14310000
$PARFRNW EQU   80                 RENEW                      WS10039    14320000
$PARFRKY EQU   84                 REKEY                      WS10039    14330000
$PARFROV EQU   88                 ROLLOVER                   WS10039    14340000
$PARFPHR EQU   92                 PASSPHRASE                 WS10064    14350000
*                                                                       14360000
****************************************************************        14370000
*                                                                       14380000
*                                                                       14390000
*    TSS COMMAND PARSING TABLES FOR PROFILE IDENTIFICATION (BS2429)     14400000
*                                                                       14410000
*                                                                       14420000
****************************************************************        14430000
XCHCNTAB  EQU   *                                                       14440000
XCHCNNOSP CTSPARL NOSEP,NE=XCHCNTSS0                                    14450000
XCHCNTSS0 CTSPARL C=' ',EQ=XCHCNTSS0                                    14460000
XCHCNTSS1 CTSPARL C='T',EQ=XCHCNTSS2,NE=XCHCNERR                        14470000
XCHCNTSS2 CTSPARL C='S',EQ=XCHCNTSS3,NE=XCHCNERR                        14480000
XCHCNTSS3 CTSPARL C='S',EQ=XCHCNTSS4,NE=XCHCNERR                        14490000
XCHCNTSS4 CTSPARL C=' ',EQ=XCHCNPRM1,NE=XCHCNERR                        14500000
XCHCNERR  CTSPARL EXIT,RC=$PARFUND                                      14510000
*                                                                       14520000
XCHCNPRM1 CTSPARL C='P',EQ=XCHACNN1              PROFILE                14530000
          CTSPARL C=' ',EQ=XCHCNPRM1                                    14540000
XCHCNPRM2 CTSPARL C='(',EQ=XCHCNVAL1            IF '(' - START OF VALUE 14550000
          CTSPARL C=' ',EQ=XCHCNPRM1,NE=XCHCNPRM2 IF ' ' - END KEYWORD  14560000
XCHCNVAL1 CTSPARL C='''',EQ=XCHCNQUT1           IF QUOTE IGNORE         14570000
          CTSPARL C=' ',EQ=XCHCNPRM1             IF BLANK = END OF PARM 14580000
          CTSPARL C=')',EQ=XCHCNPRM1,NE=XCHCNVAL1 IF CLOSED END OF PARM 14590000
XCHCNQUT1 CTSPARL C='''',EQ=XCHCNQUT2,NE=XCHCNQUT1 QUOTE WITHIN QUOTE   14600000
XCHCNQUT2 CTSPARL C='''',EQ=XCHCNQUT1           2ND QUOTE-KEEP LOOPING  14610000
          CTSPARL C=' ',EQ=XCHCNPRM1             BLANK, END OF PARAM    14620000
          CTSPARL C=')',EQ=XCHCNPRM1,NE=XCHCNVAL1 CLOSED, END OF PARM   14630000
*                                                                       14640000
XCHACNN1  CTSPARL C='R',EQ=XCHACNN2,NE=XCHCNPRM2                        14650000
XCHACNN2  CTSPARL C='O',EQ=XCHACNN3,NE=XCHCNPRM2                        14660000
XCHACNN3  CTSPARL C='F',EQ=XCHACNN4                                     14670000
          CTSPARL C='(',EQ=XCHACNND,NE=XCHCNPRM2                        14680000
XCHACNN4  CTSPARL C='I',EQ=XCHACNN5                                     14690000
          CTSPARL C='(',EQ=XCHACNND,NE=XCHCNPRM2                        14700000
XCHACNN5  CTSPARL C='L',EQ=XCHACNN6                                     14710000
          CTSPARL C='(',EQ=XCHACNND,NE=XCHCNPRM2                        14720000
XCHACNN6  CTSPARL C='E',EQ=XCHACNN7                  PS0488             14730000
          CTSPARL C='(',EQ=XCHACNND,NE=XCHCNPRM2                        14740000
XCHACNN7  CTSPARL C='S',EQ=XCHACNN9                  PS0488             14750000
          CTSPARL C='(',EQ=XCHACNND,NE=XCHCNPRM2     PS0488             14760000
XCHACNN9  CTSPARL C='(',EQ=XCHACNND,NE=XCHCNERR                         14770000
XCHACNND  CTSPARL EXIT,RC=$PARFCNN <============ PROFILE FOUND          14780000
*                                                                       14790000
****************************************************************        14800000
*                                                                       14810000
*                                                                       14820000
*    TSS COMMAND PARSING TABLES FOR GROUP IDENTIFICATION (BS2429)       14830000
*                                                                       14840000
*                                                                       14850000
****************************************************************        14860000
XCHGRTAB  EQU   *                                                       14870000
XCHGRNOSP CTSPARL NOSEP,NE=XCHGRTSS0                                    14880000
XCHGRTSS0 CTSPARL C=' ',EQ=XCHGRTSS0                                    14890000
XCHGRTSS1 CTSPARL C='T',EQ=XCHGRTSS2,NE=XCHGRERR                        14900000
XCHGRTSS2 CTSPARL C='S',EQ=XCHGRTSS3,NE=XCHGRERR                        14910000
XCHGRTSS3 CTSPARL C='S',EQ=XCHGRTSS4,NE=XCHGRERR                        14920000
XCHGRTSS4 CTSPARL C=' ',EQ=XCHGRPRM1,NE=XCHGRERR                        14930000
XCHGRERR  CTSPARL EXIT,RC=$PARFUND                                      14940000
*                                                                       14950000
XCHGRPRM1 CTSPARL C='G',EQ=XCHAGRP1              GROUP                  14960000
          CTSPARL C=' ',EQ=XCHGRPRM1                                    14970000
XCHGRPRM2 CTSPARL C='(',EQ=XCHGRVAL1            IF '(' - START OF VALUE 14980000
          CTSPARL C=' ',EQ=XCHGRPRM1,NE=XCHGRPRM2 IF ' ' - END KEYWORD  14990000
XCHGRVAL1 CTSPARL C='''',EQ=XCHGRQUT1           IF QUOTE IGNORE         15000000
          CTSPARL C=' ',EQ=XCHGRPRM1             IF BLANK = END OF PRAM 15010000
          CTSPARL C=')',EQ=XCHGRPRM1,NE=XCHGRVAL1 IF CLOSED -END OF PRM 15020000
XCHGRQUT1 CTSPARL C='''',EQ=XCHGRQUT2,NE=XCHGRQUT1 QUOTE WITHIN QUOTE   15030000
XCHGRQUT2 CTSPARL C='''',EQ=XCHGRQUT1           2ND QUOTE-KEEP LOOPING  15040000
          CTSPARL C=' ',EQ=XCHGRPRM1             BLANK, END OF PARAM    15050000
          CTSPARL C=')',EQ=XCHGRPRM1,NE=XCHGRVAL1 CLOSED, END OF PARM   15060000
*TSSR15 XCHAGRP1  CTSPARL C='R',EQ=XCHAGRP2   G IS NOT ENOUGH 4 GROUP   15070000
XCHAGRP1  CTSPARL C='R',EQ=XCHAGRP2,NE=XCHGRPRM2 GR MIN 4 GROUP TSSR15  15080000
          CTSPARL C='(',EQ=XCHAGRPD,NE=XCHCNPRM2                        15090000
XCHAGRP2  CTSPARL C='O',EQ=XCHAGRP3                                     15100000
          CTSPARL C='(',EQ=XCHAGRPD,NE=XCHCNPRM2                        15110000
XCHAGRP3  CTSPARL C='U',EQ=XCHAGRP4                                     15120000
          CTSPARL C='(',EQ=XCHAGRPD,NE=XCHCNPRM2                        15130000
XCHAGRP4  CTSPARL C='P',EQ=XCHAGRP9                                     15140000
          CTSPARL C='(',EQ=XCHAGRPD,NE=XCHCNPRM2                        15150000
XCHAGRP9  CTSPARL C='(',EQ=XCHAGRPD,NE=XCHCNERR                         15160000
XCHAGRPD  CTSPARL EXIT,RC=$PARFGRP <============ GROUP FOUND            15170000
*                                                                       15180000
* END OF BS2429                                                         15190000
*                                                                       15200000
****************************************************************        15210000
*                                                                       15220000
*                                                                       15230000
*    TSS COMMAND PARSING TABLES FOR AFTER/BEFORE UPDATE CONN            15240000
*    (BS2438 - IMPROVE PERFORMANCE)                                     15250000
*                                                                       15260000
****************************************************************        15270000
XCHABTAB  EQU   *                                                       15280000
XCHABTSS0 CTSPARL C=' ',EQ=XCHABTSS0                                    15290000
XCHABTSS1 CTSPARL C='T',EQ=XCHABTSS2,NE=XCHABERR                        15300000
XCHABTSS2 CTSPARL C='S',EQ=XCHABTSS3,NE=XCHABERR                        15310000
XCHABTSS3 CTSPARL C='S',EQ=XCHABTSS4,NE=XCHABERR                        15320000
XCHABTSS4 CTSPARL C=' ',EQ=XCHABPRM1,NE=XCHABERR                        15330000
XCHABERR  CTSPARL EXIT,RC=$PARFUND                                      15340000
*                                                                       15350000
XCHABPRM1 CTSPARL C='A',EQ=XCHAAFT1               AFTER                 15360000
          CTSPARL C='B',EQ=XCHABEF1               BEFORE                15370000
          CTSPARL C=' ',EQ=XCHABPRM1                                    15380000
XCHABPRM2 CTSPARL C='(',EQ=XCHABVAL1            IF '(' - START OF VALUE 15390000
          CTSPARL C=' ',EQ=XCHABPRM1,NE=XCHABPRM2 IF ' ' - END KEYWORD  15400000
XCHABVAL1 CTSPARL C='''',EQ=XCHABQUT1           IF QUOTE IGNORE         15410000
          CTSPARL C=' ',EQ=XCHABPRM1             IF BLANK = END OF PRAM 15420000
          CTSPARL C=')',EQ=XCHABPRM1,NE=XCHABVAL1 IF CLOSED -END OF PRM 15430000
XCHABQUT1 CTSPARL C='''',EQ=XCHABQUT2,NE=XCHABQUT1 QUOTE WITHIN QUOTE   15440000
XCHABQUT2 CTSPARL C='''',EQ=XCHABQUT1           2ND QUOTE-KEEP LOOPING  15450000
          CTSPARL C=' ',EQ=XCHABPRM1             BLANK, END OF PARAM    15460000
          CTSPARL C=')',EQ=XCHABPRM1,NE=XCHABVAL1 CLOSED, END OF PARM   15470000
XCHAAFT1  CTSPARL C='F',EQ=XCHAAFT2,NE=XCHABPRM2                        15480000
XCHAAFT2  CTSPARL C='T',EQ=XCHAAFT3                                     15490000
          CTSPARL C='(',EQ=XCHAAFTD,NE=XCHABPRM2                        15500000
XCHAAFT3  CTSPARL C='E',EQ=XCHAAFT4                                     15510000
          CTSPARL C='(',EQ=XCHAAFTD,NE=XCHABPRM2                        15520000
XCHAAFT4  CTSPARL C='R',EQ=XCHAAFT9                                     15530000
          CTSPARL C='(',EQ=XCHAAFTD,NE=XCHABPRM2                        15540000
XCHAAFT9  CTSPARL C='(',EQ=XCHAAFTD,NE=XCHABERR                         15550000
XCHAAFTD  CTSPARL EXIT,RC=$PARFAB  <============ GROUP FOUND            15560000
*                                                                       15570000
*TSSR15 XCHABEF1  CTSPARL C='E',EQ=XCHABEF2      BE IS MIN 4 BEFORE     15580000
XCHABEF1  CTSPARL C='E',EQ=XCHABEF2,NE=XCHABPRM2 BE MIN BEFORE TSSR15   15590000
          CTSPARL C='(',EQ=XCHAAFTD,NE=XCHABPRM2                        15600000
XCHABEF2  CTSPARL C='F',EQ=XCHABEF3                                     15610000
          CTSPARL C='(',EQ=XCHAAFTD,NE=XCHABPRM2                        15620000
XCHABEF3  CTSPARL C='O',EQ=XCHABEF4                                     15630000
          CTSPARL C='(',EQ=XCHAAFTD,NE=XCHABPRM2                        15640000
XCHABEF4  CTSPARL C='R',EQ=XCHABEF5                                     15650000
          CTSPARL C='(',EQ=XCHAAFTD,NE=XCHABPRM2                        15660000
XCHABEF5  CTSPARL C='E',EQ=XCHABEF9                                     15670000
          CTSPARL C='(',EQ=XCHAAFTD,NE=XCHABPRM2                        15680000
XCHABEF9  CTSPARL C='(',EQ=XCHAAFTD,NE=XCHABERR                         15690000
*                                                                       15700000
* END OF BS2438                                                         15710000
*                                                                       15720000
****************************************************************        15730000
*                                                                       15740000
*                                                                       15750000
*    TSS COMMAND PARSING TABLES FOR ACID IDENTIFICATION                 15760000
*                                                                       15770000
*                                                                       15780000
****************************************************************        15790000
XCHATAB  EQU   *                                                        15800000
XCHATSS0 CTSPARL C=' ',EQ=XCHATSS0                                      15810000
XCHATSS1 CTSPARL C='T',EQ=XCHATSS2,NE=XCHAERR                           15820000
XCHATSS2 CTSPARL C='S',EQ=XCHATSS3,NE=XCHAERR                           15830000
XCHATSS3 CTSPARL C='S',EQ=XCHATSS4,NE=XCHAERR                           15840000
XCHATSS4 CTSPARL C=' ',EQ=XCHAPRM1,NE=XCHAERR                           15850000
XCHAERR  CTSPARL EXIT,RC=$PARFUND                                       15860000
*                                                                       15870000
XCHAPRM1 CTSPARL C='A',EQ=XCHAACI1              ACID                    15880000
         CTSPARL C=' ',EQ=XCHAPRM1                                      15890000
XCHAPRM2 CTSPARL C='(',EQ=XCHAVAL1              IF '(' - START OF VALUE 15900000
         CTSPARL C=' ',EQ=XCHAPRM1,NE=XCHAPRM2  IF ' ' - END KEYWORD    15910000
XCHAVAL1 CTSPARL C='''',EQ=XCHAQUT1             IF QUOTE IGNORE         15920000
         CTSPARL C=' ',EQ=XCHAPRM1              IF BLANK = END OF PARAM 15930000
         CTSPARL C=')',EQ=XCHAPRM1,NE=XCHAVAL1  IF CLOSED - END OF PARM 15940000
XCHAQUT1 CTSPARL C='''',EQ=XCHAQUT2,NE=XCHAQUT1 QUOTE WITHIN QUOTE      15950000
XCHAQUT2 CTSPARL C='''',EQ=XCHAQUT1             2ND QUOTE-KEEP LOOPING  15960000
         CTSPARL C=' ',EQ=XCHAPRM1              BLANK, END OF PARAM     15970000
         CTSPARL C=')',EQ=XCHAPRM1,NE=XCHAVAL1  CLOSED, END OF PARM     15980000
*                                                                       15990000
XCHAACI1 CTSPARL C='C',EQ=XCHAACI2,NE=XCHAPRM2                          16000000
XCHAACI2 CTSPARL C='I',EQ=XCHAACI3,NE=XCHAPRM2                          16010000
XCHAACI3 CTSPARL C='D',EQ=XCHAACI4                                      16020000
         CTSPARL C='(',EQ=XCHAACID,NE=XCHAPRM2                          16030000
XCHAACI4 CTSPARL C='(',EQ=XCHAACID,NE=XCHAERR                           16040000
XCHAACID CTSPARL EXIT,RC=$PARFACI <============ ACID FOUND              16050000
*                                                                       16060000
****************************************************************        16070000
*                                                                       16080000
*                                                                       16090000
*    TSS COMMAND PARSING TABLES FOR PASSWORD IDENTIFICATION             16100000
*                                                                       16110000
*                                                                       16120000
****************************************************************        16130000
XCHPTAB  EQU   *                                                        16140000
XCHPTSS0 CTSPARL C=' ',EQ=XCHPTSS0                                      16150000
XCHPTSS1 CTSPARL C='T',EQ=XCHPTSS2,NE=XCHPERR                           16160000
XCHPTSS2 CTSPARL C='S',EQ=XCHPTSS3,NE=XCHPERR                           16170000
XCHPTSS3 CTSPARL C='S',EQ=XCHPTSS4,NE=XCHPERR                           16180000
XCHPTSS4 CTSPARL C=' ',EQ=XCHPPRM1,NE=XCHPERR                           16190000
XCHPERR  CTSPARL EXIT,RC=$PARFUND                                       16200000
*                                                                       16210000
XCHPPRM1 CTSPARL C='P',EQ=XCHPPAS1              PASSWORD                16220000
         CTSPARL C=' ',EQ=XCHPPRM1                                      16230000
XCHPPRM2 CTSPARL C='(',EQ=XCHPVAL1              IF '(' - START OF VALUE 16240000
         CTSPARL C=' ',EQ=XCHPPRM1,NE=XCHPPRM2  IF ' ' - END KEYWORD    16250000
XCHPVAL1 CTSPARL C='''',EQ=XCHPQUT1             IF QUOTE IGNORE         16260000
         CTSPARL C=' ',EQ=XCHPPRM1              IF BLANK = END OF PARAM 16270000
         CTSPARL C=')',EQ=XCHPPRM1,NE=XCHPVAL1  IF CLOSED - END OF PARM 16280000
XCHPQUT1 CTSPARL C='''',EQ=XCHPQUT2,NE=XCHPQUT1 QUOTE WITHIN QUOTE      16290000
XCHPQUT2 CTSPARL C='''',EQ=XCHPQUT1             2ND QUOTE-KEEP LOOPING  16300000
         CTSPARL C=' ',EQ=XCHPPRM1              BLANK, END OF PARAM     16310000
         CTSPARL C=')',EQ=XCHPPRM1,NE=XCHPVAL1  CLOSED, END OF PARM     16320000
*                                                                       16330000
XCHPPAS1 CTSPARL C='A',EQ=XCHPPAS2,NE=XCHPPRM2                          16340000
XCHPPAS2 CTSPARL C='S',EQ=XCHPPAS3,NE=XCHPPRM2                          16350000
XCHPPAS3 CTSPARL C='S',EQ=XCHPPAS4                                      16360000
         CTSPARL C='(',EQ=XCHPPASS,NE=XCHPPRM2                          16370000
XCHPPAS4 CTSPARL C='W',EQ=XCHPPAS5                                      16380000
         CTSPARL C='(',EQ=XCHPPASS,NE=XCHPPRM2                          16390000
XCHPPAS5 CTSPARL C='O',EQ=XCHPPAS6                                      16400000
         CTSPARL C='(',EQ=XCHPPASS,NE=XCHPPRM2                          16410000
XCHPPAS6 CTSPARL C='R',EQ=XCHPPAS7                                      16420000
         CTSPARL C='(',EQ=XCHPPASS,NE=XCHPPRM2                          16430000
XCHPPAS7 CTSPARL C='D',EQ=XCHPPAS8                                      16440000
         CTSPARL C='(',EQ=XCHPPASS,NE=XCHPPRM2                          16450000
XCHPPAS8 CTSPARL C='(',EQ=XCHPPASS,NE=XCHPERR                           16460000
XCHPPASS CTSPARL EXIT,RC=$PARFPAS <============ PASSWORD FOUND          16470000
*                                                                       16480000
*WS10064 START   PHRASE keyword mapping                                 16490000
****************************************************************        16500000
*                                                                       16510000
*    TSS COMMAND PARSING TABLES FOR PHRASE IDENTIFICATION               16520000
*                                                                       16530000
****************************************************************        16540000
XCHHTAB  EQU   *                                                        16550000
XCHHNOSP CTSPARL NOSEP,NE=XCHHTSS0                                      16560000
XCHHTSS0 CTSPARL C=' ',EQ=XCHHTSS0                                      16570000
XCHHTSS1 CTSPARL C='T',EQ=XCHHTSS2,NE=XCHHERR                           16580000
XCHHTSS2 CTSPARL C='S',EQ=XCHHTSS3,NE=XCHHERR                           16590000
XCHHTSS3 CTSPARL C='S',EQ=XCHHTSS4,NE=XCHHERR                           16600000
XCHHTSS4 CTSPARL C=' ',EQ=XCHHPRM1,NE=XCHHERR                           16610000
XCHHERR  CTSPARL EXIT,RC=$PARFUND                                       16620000
*                                                                       16630000
XCHHPRM1 CTSPARL C='P',EQ=XCHHPAS1              PASSWORD                16640000
         CTSPARL C=' ',EQ=XCHHPRM1                                      16650000
XCHHPRM2 CTSPARL C='(',EQ=XCHHVAL1              IF '(' - START OF VALUE 16660000
         CTSPARL C=' ',EQ=XCHHPRM1,NE=XCHHPRM2  IF ' ' - END KEYWORD    16670000
XCHHVAL1 CTSPARL C='''',EQ=XCHHQUT1             IF QUOTE IGNORE         16680000
         CTSPARL C=' ',EQ=XCHHPRM1              IF BLANK = END OF PARAM 16690000
         CTSPARL C=')',EQ=XCHHPRM1,NE=XCHHVAL1  IF CLOSED - END OF PARM 16700000
XCHHQUT1 CTSPARL C='''',EQ=XCHHQUT2,NE=XCHHQUT1 QUOTE WITHIN QUOTE      16710000
XCHHQUT2 CTSPARL C='''',EQ=XCHHQUT1             2ND QUOTE-KEEP LOOPING  16720000
         CTSPARL C=' ',EQ=XCHHPRM1              BLANK, END OF PARAM     16730000
         CTSPARL C=')',EQ=XCHHPRM1,NE=XCHHVAL1  CLOSED, END OF PARM     16740000
*                                                                       16750000
XCHHPAS1 CTSPARL C='H',EQ=XCHHPAS2,NE=XCHHPRM2                          16760000
XCHHPAS2 CTSPARL C='R',EQ=XCHHPAS3,NE=XCHHPRM2                          16770000
         CTSPARL C='(',EQ=XCHHPASS,NE=XCHHPRM2                          16780000
XCHHPAS3 CTSPARL C='A',EQ=XCHHPAS4                                      16790000
         CTSPARL C='(',EQ=XCHHPASS,NE=XCHHPRM2                          16800000
XCHHPAS4 CTSPARL C='S',EQ=XCHHPAS5                                      16810000
         CTSPARL C='(',EQ=XCHHPASS,NE=XCHHPRM2                          16820000
XCHHPAS5 CTSPARL C='E',EQ=XCHHPAS8                                      16830000
XCHHPAS8 CTSPARL C='(',EQ=XCHHPASS,NE=XCHHERR                           16840000
XCHHPASS CTSPARL EXIT,RC=$PARFPHR <============ PASSPHRASE FOUND        16850000
*WS10064 END                                                            16860000
*                                                                       16870000
****************************************************************        16880000
*                                                                       16890000
*                                                                       16900000
*    TSS COMMAND PARSING TABLES FOR FUNCTION IDENTIFICATION             16910000
*                                                                       16920000
*                                                                       16930000
****************************************************************        16940000
XCHFTAB  EQU   *                                                        16950000
XCHFTSS0 CTSPARL C=' ',EQ=XCHFTSS0                                      16960000
XCHFTSS1 CTSPARL C='T',EQ=XCHFTSS2,NE=XCHFERR                           16970000
XCHFTSS2 CTSPARL C='S',EQ=XCHFTSS3,NE=XCHFERR                           16980000
XCHFTSS3 CTSPARL C='S',EQ=XCHFTSS4,NE=XCHFERR                           16990000
XCHFTSS4 CTSPARL C=' ',EQ=XCHFPRM1,NE=XCHFERR                           17000000
XCHFERR  CTSPARL EXIT,RC=$PARFUND                                       17010000
*                                                                       17020000
XCHFPRM1 CTSPARL C='C',EQ=XCHFCRE1         CREATE                       17030000
         CTSPARL C='A',EQ=XCHFA1           ADD/ADMIN                    17040000
         CTSPARL C='R',EQ=XCHFR1           REMOVE/REPLACE/RENAME/REVOKE 17050000
         CTSPARL C='D',EQ=XCHFD1           DELETE/DEADMIN               17060000
         CTSPARL C='M',EQ=XCHFM1           MOVE/MODIFY                  17070000
         CTSPARL C='P',EQ=XCHFPER1         PERMIT               @DC3    17080000
         CTSPARL C='G',EQ=XCHFG1           G* COMMANDS.         WS10039 17090000
         CTSPARL C=' ',EQ=XCHFPRM1                                      17100000
*                                                                       17110000
XCHFG1   CTSPARL EXIT,RC=$PARFGEN          G* COMMANDS.         WS10039 17120000
*                                                                       17130000
XCHFPRM2 CTSPARL C='(',EQ=XCHFVAL1              IF '(' - START OF VALUE 17140000
         CTSPARL C=' ',EQ=XCHFPRM1,NE=XCHFPRM2  IF ' ' - END KEYWORD    17150000
*                                                                       17160000
XCHFVAL1 CTSPARL C='''',EQ=XCHFQUT1             IF QUOTE IGNORE         17170000
         CTSPARL C=' ',EQ=XCHFPRM1              IF BLANK = END OF PARAM 17180000
         CTSPARL C=')',EQ=XCHFPRM1,NE=XCHFVAL1  IF CLOSED - END OF PARM 17190000
*                                                                       17200000
XCHFQUT1 CTSPARL C='''',EQ=XCHFQUT2,NE=XCHFQUT1 QUOTE WITHIN QUOTE      17210000
XCHFQUT2 CTSPARL C='''',EQ=XCHFQUT1             2ND QUOTE-KEEP LOOPING  17220000
         CTSPARL C=' ',EQ=XCHFPRM1              IF BLANK = END OF PARAM 17230000
         CTSPARL C=')',EQ=XCHFPRM1,NE=XCHFVAL1  IF CLOSED - END OF PARM 17240000
*                                                                       17250000
XCHFCRE1 CTSPARL C='R',EQ=XCHFCRE2,NE=XCHFPRM2                          17260000
XCHFCRE2 CTSPARL C='E',EQ=XCHFCRE3,NE=XCHFPRM2                          17270000
XCHFCRE3 CTSPARL C='A',EQ=XCHFCRE4                                      17280000
         CTSPARL C=' ',EQ=XCHFCRET                               BS2387 17290000
         CTSPARL C='(',EQ=XCHFCRET,NE=XCHFPRM2                          17300000
XCHFCRE4 CTSPARL C='T',EQ=XCHFCRE5                                      17310000
         CTSPARL C=' ',EQ=XCHFCRET                               BS2387 17320000
         CTSPARL C='(',EQ=XCHFCRET,NE=XCHFPRM2                          17330000
XCHFCRE5 CTSPARL C='E',EQ=XCHFCRE6                                      17340000
         CTSPARL C=' ',EQ=XCHFCRET                               BS2387 17350000
         CTSPARL C='(',EQ=XCHFCRET,NE=XCHFPRM2                          17360000
*BS2387  XCHFCRE6 CTSPARL C='(',EQ=XCHFCRET,NE=XCHFERR                  17370000
XCHFCRE6 CTSPARL C=' ',EQ=XCHFCRET                               BS2387 17380000
         CTSPARL C='(',EQ=XCHFCRET,NE=XCHFERR                    BS2387 17390000
XCHFCRET CTSPARL EXIT,RC=$PARFCRE <============== CREATE                17400000
*                                                                       17410000
XCHFA1   CTSPARL C='D',EQ=XCHFAD1,NE=XCHFPRM2                           17420000
XCHFAD1  CTSPARL C='D',EQ=XCHFADD1                                      17430000
XCHFADM1 CTSPARL C='M',EQ=XCHFADM2,NE=XCHFPRM2                          17440000
XCHFADM2 CTSPARL C='I',EQ=XCHFADM3                                      17450000
         CTSPARL C=' ',EQ=XCHFADM                                BS2387 17460000
         CTSPARL C='(',EQ=XCHFADM,NE=XCHFPRM2                           17470000
XCHFADM3 CTSPARL C='N',EQ=XCHFADM4                                      17480000
         CTSPARL C=' ',EQ=XCHFADM                                BS2387 17490000
         CTSPARL C='(',EQ=XCHFADM,NE=XCHFPRM2                           17500000
*BS2387  XCHFADM4 CTSPARL C='(',EQ=XCHFADM,NE=XCHFERR                   17510000
XCHFADM4 CTSPARL C=' ',EQ=XCHFADM                                BS2387 17520000
         CTSPARL C='(',EQ=XCHFADM,NE=XCHFERR                     BS2387 17530000
XCHFADM  CTSPARL EXIT,RC=$PARFADM <============== ADMIN                 17540000
*                                                                       17550000
XCHFADD1 CTSPARL C='(',EQ=XCHFADD                                       17560000
         CTSPARL C=' ',EQ=XCHFADD                                BS2387 17570000
*BS2391  CTSPARL C='T',EQ=XCHFADD3,NE=XCHFPRM2                          17580000
         CTSPARL C='T',EQ=XCHFADD2                               BS2391 17590000
         CTSPARL C=' ',EQ=XCHFADD                                BS2387 17600000
*BS2391  CTSPARL C='(',EQ=XCHFADD                                       17610000
         CTSPARL C='(',EQ=XCHFADD,NE=XCHFPRM2                    BS2391 17620000
XCHFADD2 CTSPARL C='O',EQ=XCHFADD3,NE=XCHFPRM2                          17630000
*BS2387  XCHFADD3 CTSPARL C='(',EQ=XCHFADD,NE=XCHFERR                   17640000
XCHFADD3 CTSPARL C=' ',EQ=XCHFADD                                BS2387 17650000
         CTSPARL C='(',EQ=XCHFADD,NE=XCHFERR                     BS2387 17660000
XCHFADD  CTSPARL EXIT,RC=$PARFADD <============== ADDTO                 17670000
*                                                                       17680000
*WS10039 XCHFR1   CTSPARL C='E',EQ=XCHFRE1,NE=XCHFPRM2                  17690000
XCHFR1   CTSPARL C='E',EQ=XCHFRE1                               WS10039 17700000
         CTSPARL C='O',EQ=XCHFRO1,NE=XCHFPRM2                   WS10039 17710000
XCHFRE1  CTSPARL C='M',EQ=XCHFREM1                                      17720000
         CTSPARL C='N',EQ=XCHFREN1                                      17730000
         CTSPARL C='V',EQ=XCHFREV1                                      17740000
         CTSPARL C='F',EQ=XCHFREF1                               BS2702 17750000
         CTSPARL C='K',EQ=XCHFREK1                              WS10039 17760000
         CTSPARL C='P',EQ=XCHFREP1,NE=XCHFPRM2                          17770000
XCHFREP1 CTSPARL C='L',EQ=XCHFREP2                                      17780000
         CTSPARL C=' ',EQ=XCHFREP                                BS2387 17790000
         CTSPARL C='(',EQ=XCHFREP,NE=XCHFPRM2                           17800000
XCHFREP2 CTSPARL C='A',EQ=XCHFREP3                                      17810000
         CTSPARL C=' ',EQ=XCHFREP                                BS2387 17820000
         CTSPARL C='(',EQ=XCHFREP,NE=XCHFPRM2                           17830000
XCHFREP3 CTSPARL C='C',EQ=XCHFREP4                                      17840000
         CTSPARL C=' ',EQ=XCHFREP                                BS2387 17850000
         CTSPARL C='(',EQ=XCHFREP,NE=XCHFPRM2                           17860000
XCHFREP4 CTSPARL C='E',EQ=XCHFREP5                                      17870000
         CTSPARL C=' ',EQ=XCHFREP                                BS2387 17880000
         CTSPARL C='(',EQ=XCHFREP,NE=XCHFPRM2                           17890000
*BS2387  XCHFREP5 CTSPARL C='(',EQ=XCHFREP,NE=XCHFERR                   17900000
XCHFREP5 CTSPARL C=' ',EQ=XCHFREP                                BS2387 17910000
         CTSPARL C='(',EQ=XCHFREP,NE=XCHFERR                     BS2387 17920000
XCHFREP  CTSPARL EXIT,RC=$PARFREP <============== REPLACE               17930000
*                                                                       17940000
XCHFREM1 CTSPARL C='(',EQ=XCHFREM                                       17950000
         CTSPARL C=' ',EQ=XCHFREM                                BS2387 17960000
XCHFREM2 CTSPARL C='O',EQ=XCHFREM3                                      17970000
         CTSPARL C=' ',EQ=XCHFREM                                BS2387 17980000
         CTSPARL C='(',EQ=XCHFREM,NE=XCHFPRM2                           17990000
XCHFREM3 CTSPARL C='V',EQ=XCHFREM4                                      18000000
         CTSPARL C=' ',EQ=XCHFREM                                BS2387 18010000
         CTSPARL C='(',EQ=XCHFREM,NE=XCHFPRM2                           18020000
XCHFREM4 CTSPARL C='E',EQ=XCHFREM5                                      18030000
         CTSPARL C=' ',EQ=XCHFREM                                BS2387 18040000
         CTSPARL C='(',EQ=XCHFREM,NE=XCHFPRM2                           18050000
*BS2387  XCHFREM5 CTSPARL C='(',EQ=XCHFREM,NE=XCHFERR                   18060000
XCHFREM5 CTSPARL C=' ',EQ=XCHFREM                                BS2387 18070000
         CTSPARL C='(',EQ=XCHFREM,NE=XCHFERR                     BS2387 18080000
XCHFREM  CTSPARL EXIT,RC=$PARFREM <============== REMOVE                18090000
*                                                                       18100000
*WS10039 XCHFREN1 CTSPARL C='(',EQ=XCHFREN                              18110000
*WS10039          CTSPARL C=' ',EQ=XCHFREN                       BS2387 18120000
*WS10039 XCHFREN2 CTSPARL C='A',EQ=XCHFREN3                             18130000
*WS10039          CTSPARL C=' ',EQ=XCHFREN                       BS2387 18140000
*WS10039          CTSPARL C='(',EQ=XCHFREN,NE=XCHFPRM2                  18150000
XCHFREN1 CTSPARL C='A',EQ=XCHFREN3                             WS10039  18160000
         CTSPARL C='E',EQ=XCHFRNW1,NE=XCHFPRM2                 WS10039  18170000
XCHFREN3 CTSPARL C='M',EQ=XCHFREN4                                      18180000
         CTSPARL C=' ',EQ=XCHFREN                                BS2387 18190000
         CTSPARL C='(',EQ=XCHFREN,NE=XCHFPRM2                           18200000
XCHFREN4 CTSPARL C='E',EQ=XCHFREN5                                      18210000
         CTSPARL C=' ',EQ=XCHFREN                                BS2387 18220000
         CTSPARL C='(',EQ=XCHFREN,NE=XCHFPRM2                           18230000
*BS2387  XCHFREN5 CTSPARL C='(',EQ=XCHFREN,NE=XCHFERR                   18240000
XCHFREN5 CTSPARL C=' ',EQ=XCHFREN                                BS2387 18250000
         CTSPARL C='(',EQ=XCHFREN,NE=XCHFERR                     BS2387 18260000
XCHFREN  CTSPARL EXIT,RC=$PARFREN <============== RENAME                18270000
*                                11                                     18280000
XCHFREV1 CTSPARL C='(',EQ=XCHFREV                               @DC3    18290000
         CTSPARL C=' ',EQ=XCHFREV                                BS2387 18300000
XCHFREV2 CTSPARL C='O',EQ=XCHFREV3                              @DC3    18310000
         CTSPARL C=' ',EQ=XCHFREV                                BS2387 18320000
         CTSPARL C='(',EQ=XCHFREV,NE=XCHFPRM2                   @DC3    18330000
XCHFREV3 CTSPARL C='K',EQ=XCHFREV4                              @DC3    18340000
         CTSPARL C=' ',EQ=XCHFREV                                BS2387 18350000
         CTSPARL C='(',EQ=XCHFREV,NE=XCHFPRM2                   @DC3    18360000
XCHFREV4 CTSPARL C='E',EQ=XCHFREV5                              @DC3    18370000
         CTSPARL C=' ',EQ=XCHFREV                                BS2387 18380000
         CTSPARL C='(',EQ=XCHFREV,NE=XCHFPRM2                   @DC3    18390000
*BS2387  XCHFREV5 CTSPARL C='(',EQ=XCHFREV,NE=XCHFERR           @DC3    18400000
XCHFREV5 CTSPARL C=' ',EQ=XCHFREV                                BS2387 18410000
         CTSPARL C='(',EQ=XCHFREV,NE=XCHFERR                     BS2387 18420000
XCHFREV  CTSPARL EXIT,RC=$PARFREV <============== REVOKE        @DC3    18430000
*                                                                       18440000
XCHFRO1  CTSPARL C='(',EQ=XCHFROV                              WS10039  18450000
         CTSPARL C=' ',EQ=XCHFROV                              WS10039  18460000
         CTSPARL C='L',EQ=XCHFRO2,NE=XCHFPRM2                  WS10039  18470000
XCHFRO2  CTSPARL C='(',EQ=XCHFROV                              WS10039  18480000
         CTSPARL C=' ',EQ=XCHFROV                              WS10039  18490000
         CTSPARL C='L',EQ=XCHFRO3,NE=XCHFPRM2                  WS10039  18500000
XCHFRO3  CTSPARL C='(',EQ=XCHFROV                              WS10039  18510000
         CTSPARL C=' ',EQ=XCHFROV                              WS10039  18520000
         CTSPARL C='O',EQ=XCHFRO4,NE=XCHFPRM2                  WS10039  18530000
XCHFRO4  CTSPARL C='(',EQ=XCHFROV                              WS10039  18540000
         CTSPARL C=' ',EQ=XCHFROV                              WS10039  18550000
         CTSPARL C='V',EQ=XCHFRO5,NE=XCHFPRM2                  WS10039  18560000
XCHFRO5  CTSPARL C='(',EQ=XCHFROV                              WS10039  18570000
         CTSPARL C=' ',EQ=XCHFROV                              WS10039  18580000
         CTSPARL C='E',EQ=XCHFRO6,NE=XCHFPRM2                  WS10039  18590000
XCHFRO6  CTSPARL C='(',EQ=XCHFROV                              WS10039  18600000
         CTSPARL C=' ',EQ=XCHFROV                              WS10039  18610000
         CTSPARL C='R',EQ=XCHFRO7,NE=XCHFPRM2                  WS10039  18620000
XCHFRO7  CTSPARL C=' ',EQ=XCHFROV                              WS10039  18630000
         CTSPARL C='(',EQ=XCHFROV,NE=XCHFERR                   WS10039  18640000
XCHFROV  CTSPARL EXIT,RC=$PARFROV <============== ROLLOVER     WS10039  18650000
*                                                              WS10039  18660000
XCHFREK1 CTSPARL C='(',EQ=XCHFREK                              WS10039  18670000
         CTSPARL C=' ',EQ=XCHFREK                              WS10039  18680000
         CTSPARL C='E',EQ=XCHFREK2,NE=XCHFPRM2                 WS10039  18690000
XCHFREK2 CTSPARL C='(',EQ=XCHFREK                              WS10039  18700000
         CTSPARL C=' ',EQ=XCHFREK                              WS10039  18710000
         CTSPARL C='Y',EQ=XCHFREK3,NE=XCHFPRM2                 WS10039  18720000
XCHFREK3 CTSPARL C=' ',EQ=XCHFREK                              WS10039  18730000
         CTSPARL C='(',EQ=XCHFREK,NE=XCHFERR                   WS10039  18740000
XCHFREK  CTSPARL EXIT,RC=$PARFRKY <============== REKEY        WS10039  18750000
*                                                              WS10039  18760000
XCHFRNW1 CTSPARL C='(',EQ=XCHFRNW                              WS10039  18770000
         CTSPARL C=' ',EQ=XCHFRNW                              WS10039  18780000
         CTSPARL C='W',EQ=XCHFRNW2,NE=XCHFPRM2                 WS10039  18790000
XCHFRNW2 CTSPARL C=' ',EQ=XCHFRNW                              WS10039  18800000
         CTSPARL C='(',EQ=XCHFRNW,NE=XCHFERR                   WS10039  18810000
XCHFRNW  CTSPARL EXIT,RC=$PARFRNW <============== RENEW        WS10039  18820000
*                                                                       18830000
*        IDENTIFY DELETE/DEADMIN KEYWORD                                18840000
*                                                                       18850000
XCHFD1   CTSPARL C='E',EQ=XCHFDE1,NE=XCHFPRM2                           18860000
XCHFDE1  CTSPARL C='A',EQ=XCHFDEA1                                      18870000
         CTSPARL C='L',EQ=XCHFDEL1,NE=XCHFPRM2                          18880000
XCHFDEL1 CTSPARL C='E',EQ=XCHFDEL2                                      18890000
         CTSPARL C=' ',EQ=XCHFDEL                                BS2387 18900000
         CTSPARL C='(',EQ=XCHFDEL,NE=XCHFPRM2                           18910000
XCHFDEL2 CTSPARL C='T',EQ=XCHFDEL3                                      18920000
         CTSPARL C=' ',EQ=XCHFDEL                                BS2387 18930000
         CTSPARL C='(',EQ=XCHFDEL,NE=XCHFPRM2                           18940000
XCHFDEL3 CTSPARL C='E',EQ=XCHFDEL4                                      18950000
         CTSPARL C=' ',EQ=XCHFDEL                                BS2387 18960000
         CTSPARL C='(',EQ=XCHFDEL,NE=XCHFPRM2                           18970000
*BS2387  XCHFDEL4 CTSPARL C='(',EQ=XCHFDEL,NE=XCHFERR                   18980000
XCHFDEL4 CTSPARL C=' ',EQ=XCHFDEL                                BS2387 18990000
         CTSPARL C='(',EQ=XCHFDEL,NE=XCHFERR                     BS2387 19000000
XCHFDEL  CTSPARL EXIT,RC=$PARFDEL <============== DELETE FOUND          19010000
*                                                                       19020000
XCHFDEA1 CTSPARL C='(',EQ=XCHFDEA                                       19030000
XCHFDEA2 CTSPARL C='D',EQ=XCHFDEA3                                      19040000
         CTSPARL C=' ',EQ=XCHFDEA                                BS2387 19050000
         CTSPARL C='(',EQ=XCHFDEA,NE=XCHFPRM2                           19060000
XCHFDEA3 CTSPARL C='M',EQ=XCHFDEA4                                      19070000
         CTSPARL C=' ',EQ=XCHFDEA                                BS2387 19080000
         CTSPARL C='(',EQ=XCHFDEA,NE=XCHFPRM2                           19090000
XCHFDEA4 CTSPARL C='I',EQ=XCHFDEA5                                      19100000
         CTSPARL C=' ',EQ=XCHFDEA                                BS2387 19110000
         CTSPARL C='(',EQ=XCHFDEA,NE=XCHFPRM2                           19120000
XCHFDEA5 CTSPARL C='N',EQ=XCHFDEA6                                      19130000
         CTSPARL C=' ',EQ=XCHFDEA                                BS2387 19140000
         CTSPARL C='(',EQ=XCHFDEA,NE=XCHFPRM2                           19150000
*BS2387  XCHFDEA6 CTSPARL C='(',EQ=XCHFDEA,NE=XCHFERR                   19160000
XCHFDEA6 CTSPARL C=' ',EQ=XCHFDEA                                BS2387 19170000
         CTSPARL C='(',EQ=XCHFDEA,NE=XCHFERR                     BS2387 19180000
XCHFDEA  CTSPARL EXIT,RC=$PARFDEA <============== DEADMIN FOUND         19190000
*                                                                       19200000
*        IDENTIFY MOVE/MODIFY KEYWORD                                   19210000
*                                                                       19220000
XCHFM1   CTSPARL C='O',EQ=XCHFMO1,NE=XCHFPRM2                           19230000
XCHFMO1  CTSPARL C='V',EQ=XCHFMOV1                                      19240000
         CTSPARL C='D',EQ=XCHFMOD1,NE=XCHFPRM2                          19250000
*TSSR15 XCHFMOD1 CTSPARL C='I',EQ=XCHFMOD2 MODI IS MIN 4 MODIFY         19260000
XCHFMOD1 CTSPARL C='I',EQ=XCHFMOD2,NE=XCHFPRM2 MODI MIN   TSSR15        19270000
         CTSPARL C=' ',EQ=XCHFMOD,NE=XCHFPRM2                           19280000
XCHFMOD2 CTSPARL C='F',EQ=XCHFMOD3                                      19290000
         CTSPARL C=' ',EQ=XCHFMOD,NE=XCHFPRM2                           19300000
XCHFMOD3 CTSPARL C='Y',EQ=XCHFMOD4                                      19310000
         CTSPARL C=' ',EQ=XCHFMOD,NE=XCHFPRM2                           19320000
XCHFMOD4 CTSPARL C=' ',EQ=XCHFMOD,NE=XCHFERR                            19330000
XCHFMOD  CTSPARL EXIT,RC=$PARFMOD <============== MODIFY FOUND          19340000
*                                                                       19350000
XCHFMOV1 CTSPARL C='(',EQ=XCHFMOV                                       19360000
         CTSPARL C=' ',EQ=XCHFMOV                                BS2387 19370000
XCHFMOV2 CTSPARL C='E',EQ=XCHFMOV3,NE=XCHFPRM2                          19380000
*BS2387  XCHFMOV3 CTSPARL C='(',EQ=XCHFMOV,NE=XCHFPRM2                  19390000
XCHFMOV3 CTSPARL C=' ',EQ=XCHFMOV                                BS2387 19400000
         CTSPARL C='(',EQ=XCHFMOV,NE=XCHFPRM2                    BS2387 19410000
XCHFMOV  CTSPARL EXIT,RC=$PARFMOV <============== MOVE FOUND            19420000
*                                                               @DC3    19430000
*        IDENTIFY PERMIT COMMAND                                @DC3    19440000
*                                                               @DC3    19450000
XCHFPER1 CTSPARL C='E',EQ=XCHFPER2,NE=XCHFPRM2                  @DC3    19460000
XCHFPER2 CTSPARL C='R',EQ=XCHFPER3                              @DC3    19470000
         CTSPARL C=' ',EQ=XCHFPERT                               BS2387 19480000
         CTSPARL C='(',EQ=XCHFPERT,NE=XCHFPRM2                  @DC3    19490000
XCHFPER3 CTSPARL C='M',EQ=XCHFPER4                              @DC3    19500000
         CTSPARL C=' ',EQ=XCHFPERT                               BS2387 19510000
         CTSPARL C='(',EQ=XCHFPERT,NE=XCHFPRM2                  @DC3    19520000
XCHFPER4 CTSPARL C='I',EQ=XCHFPER5                              @DC3    19530000
         CTSPARL C=' ',EQ=XCHFPERT                               BS2387 19540000
         CTSPARL C='(',EQ=XCHFPERT,NE=XCHFPRM2                  @DC3    19550000
XCHFPER5 CTSPARL C='T',EQ=XCHFPER6                              @DC3    19560000
         CTSPARL C=' ',EQ=XCHFPERT                               BS2387 19570000
         CTSPARL C='(',EQ=XCHFPERT,NE=XCHFPRM2                  @DC3    19580000
*BS2387  XCHFPER6 CTSPARL C='(',EQ=XCHFPERT,NE=XCHFERR          @DC3    19590000
XCHFPER6 CTSPARL C=' ',EQ=XCHFPERT                               BS2387 19600000
         CTSPARL C='(',EQ=XCHFPERT,NE=XCHFERR                    BS2387 19610000
XCHFPERT CTSPARL EXIT,RC=$PARFPER <============== PERMIT        @DC3    19620000
*                                                               BS2702  19630000
*        IDENTIFY REFRESH COMMAND                               BS2702  19640000
*                                                               BS2702  19650000
XCHFREF1 CTSPARL C='R',EQ=XCHFREF2                              BS2702  19660000
         CTSPARL C='(',EQ=XCHFREF,NE=XCHFERR                    BS2702  19670000
XCHFREF2 CTSPARL C='E',EQ=XCHFREF3                              BS2702  19680000
         CTSPARL C='(',EQ=XCHFREF,NE=XCHFERR                    BS2702  19690000
XCHFREF3 CTSPARL C='S',EQ=XCHFREF4                              BS2702  19700000
         CTSPARL C='(',EQ=XCHFREF,NE=XCHFERR                    BS2702  19710000
XCHFREF4 CTSPARL C='H',EQ=XCHFREF5                              BS2702  19720000
XCHFREF5 CTSPARL C='(',EQ=XCHFREF,NE=XCHFERR                    BS2702  19730000
XCHFREF  CTSPARL EXIT,RC=$PARFREF <============== REFRESH       BS2702  19740000
****************************************************************        19750000
*        CTSSXCH ROUTINE WORK AREA                                      19760000
****************************************************************        19770000
*                                                                       19780000
XCHWAREA DSECT                                                          19790000
SAVEAREA DS    18F                     SAVE AREA TO CALL OTHERS         19800000
PCCAREA  CALL  ,(,,,,),MF=L            EXECUTE FORM CALL AREA           19810000
PCCWORK  DS    XL512                   WORK AREA FOR CTSAPCC ROUTINE    19820000
*RQCAREA  DS    CL(RQCLEN)              AREA FOR RQC          IS10003   19830000
PACKD    DS    D                       RETURN CODE CONVERSION           19840000
CHARRC   DS    CL8                     RETURN CODE CONVERSION           19850000
WTOAREA  DS    XL384                   WTO WORK AREA                    19860000
ABNDCODE DS    XL4                     ABCODE SAVED BY ESTAE ROUTINE    19870000
ABNDBIN  DS    XL5                     ISOLATED ABEND CODE + PAD BYTE   19880000
ABNDTYPE DS    CL1                     ABEND TYPE (S/U)                 19890000
ABNDCHAR DS    CL9                     CHARCTER ABEND CODE FOR CTSMSG   19900000
DELIMITR DS    CL1                     DELIMITER                WS10064 19910000
WRKESTAE DS    CL(LENESTAE)            EXECUTE FORM FOR ESTAE           19920000
SAVEREGS DS    15F                     TEMPORARY SAVE REGISTERS AREA    19930000
PARCALL  CALL  ,(,,,,,,,,,,,),MF=L     EXECUTE FORM CALL AREA           19940000
EXTCALL  CALL  ,(,,,),MF=L             EXECUTE FORM CALL AREA           19950000
PARFUNC  DS    XL4                     COMMAND FUNCTION                 19960000
PARFUNCG DS    XL4                     COMMAND FUNCTION (GROUP)         19970000
PAROBJ   DS    CL8                     COMMAND OBJECT                   19980000
PARVAL   DS    CL8                     VALUE FOR 2ND CHECK              19990000
MSGBUF   DS    0XL127                                           @DC2    20000000
MSGTEXTL DS    HL2                                              @DC2    20010000
MSGTEXT  DS    CL120                                            @DC2    20020000
SAVERET  DS    A                                                WS10064 20030000
SAVERPW  DS    A                                                WS10064 20040000
CMDBUFFA DS    A                       PTR TO CMD BUFFER        BS10090 20050000
CMDBUFFL DS    H                       COMMAND BUFFER LEN       BS10090 20060000
COMMENT  DS    X                       IN MIDDLE OF COMMENT?    BS10090 20070000
CMNTYES  EQU   X'80'                   YES                      BS10090 20080000
CMNTNO   EQU   X'00'                   NO                       BS10090 20090000
PVALADD  DS    A                                              BS2429    20100000
PVALLEN  DS    A                                              BS2429    20110000
VALPTR   DS    A                                              BS2429    20120000
VALLEN   DS    A                                              BS2429    20130000
PARVALL  DS    0CL512                  VALUE FOR 3RD CHECK    BS2429    20140000
PARVAL1  DS    CL256                   VALUE FOR 3RD CHECK    BS2429    20150000
PARVAL2  DS    CL256                   VALUE FOR 3RD CHECK    BS2429    20160000
SAVEACID DS    CL8                     SAVE ACID              BS2429    20170000
SAVEFUNC DS    XL4                     SAVE FUNCTION          BS2429    20180000
RESERVED DS    16X                     RESERVED AREA                    20190000
RQCAREA  DS    CL(RQCLEN)              AREA FOR RQC           IS10003   20200000
XCHWLEN  EQU   *-XCHWAREA                                               20210000
*                                                                       20220000
****************************************************************        20230000
*        SA-AGENT CONTROL BLOCKS                                        20240000
****************************************************************        20250000
*                                                                       20260000
RQC      DSECT                                                          20270000
         COPY  CTSRQC                                                   20280000
EVT      DSECT                                                          20290000
         COPY  CTSEVT                                                   20300000
EXT      DSECT                                                          20310000
EXTVAL   DS    A                                                        20320000
EXTVLEN  DS    A                                                        20330000
EXTPTR   DS    A                                                        20340000
EXTLEN   DS    A                                                        20350000
*                                                                       20360000
CTSAEXT  CSECT                                                          20370000
CTSAEXT  AMODE 31                                                       20380000
CTSAEXT  RMODE ANY                                                      20390000
         SAVE  (14,12),,CTSAEXT-&SYSDATE-&SYSTIME                       20400000
         LR    R12,R15                                                  20410000
         USING CTSAEXT,R12                                              20420000
         LR    R3,R1                                                    20430000
         USING EXT,R3                                                   20440000
         L     R4,EXTVAL           R4 -> CURR                           20450000
         L     R4,0(R4)                                                 20460000
         L     R5,EXTVLEN          R5 -> MAXLEN                         20470000
         L     R5,0(R5)                                                 20480000
         LTR   R5,R5                                                    20490000
         BNP   PARRET16                                                 20500000
*                                                                       20510000
*        SKIP LEADING BLANKS OF VALUE IN COMMAND BUFFER                 20520000
*                                                                       20530000
PARDOCP1 DS    0H                                                       20540000
         CLI   0(R4),C' '          START OF VALUE ?                     20550000
         BNH   PARDOL1             NO, NOT YET                          20560000
         CLI   0(R4),C','          START OF VALUE ?                     20570000
         BNE   PARDOCP2            YES                                  20580000
PARDOL1  DS    0H                                                       20590000
         LA    R4,1(R4)            KEEP GOING                           20600000
         BCT   R5,PARDOCP1         LOOP FOR NEXT                        20610000
         LTR   R5,R5               ANYTHING LEFT ?                      20620000
         BNP   PARRET16            VALUE IS ALL BLANKS                  20630000
PARDOCP2 DS    0H                                                       20640000
         LR    R6,R4               R6 -> START OF TEXT                  20650000
         XR    R7,R7               R7 -> LENGTH OF TEXT                 20660000
PARDOCPY DS    0H                                                       20670000
         CLI   0(R4),C' '          END OF VALUE ?                       20680000
         BNH   PARCPYOK            YES, DONE WITH COPY                  20690000
         CLI   0(R4),C','          END OF VALUE ?                       20700000
         BE    PARCPYOK            YES, DONE WITH COPY                  20710000
         LA    R4,1(R4)            NEXT CHAR                            20720000
         LA    R7,1(R7)            ADVANCE COUNTER                      20730000
         BCT   R5,PARDOCPY         LOOP FOR NEXT                        20740000
PARCPYOK DS    0H                                                       20750000
         LA    R4,1(R4)            POINT TO NEXT CHAR                   20760000
         BCTR  R5,0                                                     20770000
         L     R1,EXTPTR                                                20780000
         ST    R6,0(R1)                                                 20790000
         L     R1,EXTLEN                                                20800000
         ST    R7,0(R1)                                                 20810000
         L     R1,EXTVAL                                                20820000
         ST    R4,0(R1)                                                 20830000
         L     R1,EXTVLEN                                               20840000
         ST    R5,0(R1)                                                 20850000
         LA    R15,0                                                    20860000
         B     PARNEXIT                                                 20870000
PARRET4  DS    0H                                                       20880000
         LA    R15,4                                                    20890000
         B     PARNEXIT                                                 20900000
PARRET16 DS    0H                                                       20910000
         LA    R15,16                                                   20920000
         B     PARNEXIT                                                 20930000
*                                                                       20940000
PARNEXIT DS    0H                                                       20950000
         RETURN (14,12),,RC=(15)                                        20960000
         PRINT NOGEN                                                    20970000
*                                                                       20980000
****************************************************************        20990000
*        SYSTEM  CONTROL BLOCKS                                         21000000
****************************************************************        21010000
**                                                                      21020000
         IHASDWA                                                        21030000
         CVT   DSECT=YES,LIST=YES                                IS0333 21040000
         ICHPRCVT                                                IS0333 21050000
         END                                                            21060000
