         MACRO                                                          00000100
.********************************************************************** 00000200
.*                                                                      00000300
.* EXCUTE FORM:                                                         00000400
.*                                                                      00000500
.*    CTSAMSK TEXT,LTEXT,MASK,LMASK,BLNKSRCH                            00000600
.*                                                                      00000700
.*    CHECK IF GIVEN TEXT MATCHES GIVEN MASK.                           00000800
.*                                                                      00000900
.* OR GENARETE FORM:                                                    00001000
.*                                                                      00001100
.*    CTSAMSK GEN                                                       00001200
.*                                                                      00001300
.*    GENERATE CTSAMSK ROUTINE CODE.                                    00001400
.*                                                                      00001500
.*                                                                      00001600
.* ATTRIBUTES: REENTERANT, REUSABLE                                     00001700
.*                                                                      00001800
.*                                                                      00001900
.* MASK SPECIAL CHARACTERS:                                             00002000
.*                                                                      00002100
.*    '*' - ANY NUMBER (INCLUDING ZERO) OF CHARACTERS.                  00002200
.*    '?' - ONE CHARACTER.                                              00002300
.*    ALL OTHER CHARACTERS - AS THEMSELVES.                             00002400
.*                                                                      00002500
.*                                                                      00002600
.* INPUT:                                                               00002700
.*                                                                      00002800
.*    TEXT  - A-TYPE ADDRESS, RESIGTER (5)-(12), OR QUOTED TEXT.        00002900
.*    LTEXT - EQUATE SYMBOL, REGISTER (5)-(12), NUMBER, OR OMITTED.     00003000
.*    MASK  - A-TYPE ADDRESS, RESIGTER (5)-(12), OR QUOTED TEXT.        00003100
.*    LMASK - EQUATE SYMBOL, REGISTER (5)-(12), NUMBER, OR OMITTED.     00003200
.*    BLNKSRCH - FLAG INDICATING WHETHER LMASK IS ACTUAL MASK LENGTH,   00003300
.*               OR MASK SHOULD BE SEARCHED FOR THE LAST NON-BLANK      00003400
.*               N - DON'T SEARCH (DEFAULT)                             00003500
.*               Y - SEARCH                                             00003600
.*                                                                      00003700
.*    NOTE - LENGTH MAY BE OMITTED ONLY WHEN STRING IS A                00003800
.*           QUOTED CONSTANT.                                           00003900
.*                                                                      00004000
.* OUTPUT:                                                              00004100
.*                                                                      00004200
.*    MATCH    - R15=0, CONDITION CODE = 00                             00004300
.*    NO MATCH - R15=4, CONDITION CODE = 10                             00004400
.*                                                                      00004500
.*                                                                      00004600
.* USED REGISTERS:                                                      00004700
.*                                                                      00004800
.*    R0,R1,R2,R3,R4,R14,R15                                            00004900
.*                                                                      00005000
.********************************************************************   00005100
.***                                                              ***   00005200
.***       CONTROL O   RELEASE 1.0.0                              ***   00005300
.***                                                              ***   00005400
.***       LICENCED MATERIAL - 4TH DIMENSION SOFTWARE LTD.        ***   00005500
.***                                                              ***   00005600
.********************************************************************   00005700
.*                                                                      00005800
.*                                                                      00005900
.********************************************************************** 00006000
.*                                                                      00006100
         CTSAMSK &TEXT,&LTEXT,&MASK,&LMASK,&BLNKSRCH                    00006200
.*                                                                      00006300
.* CHECK IF THIS IS GENERATE CALL                                       00006400
.*                                                                      00006500
         AIF (T'&LMASK NE 'O').EXECUTE                                  00006600
         AIF (T'&MASK NE 'O').EXECUTE                                   00006700
         AIF (T'&LTEXT NE 'O').EXECUTE                                  00006800
         AIF ('&TEXT' NE 'GEN').EXECUTE                                 00006900
         AGO .GENERATE                                                  00007000
.EXECUTE ANOP                                                           00007100
         AIF ('&TEXT'(1,1) EQ '(').TEXT_R                               00007200
         AIF ('&TEXT'(1,1) EQ '''').TEXT_Q                              00007300
         LA    R1,&TEXT            LOAD ADDRESS OF STORAGE              00007400
         AGO   .DO_LTEXT                                                00007500
.TEXT_R  ANOP                                                           00007600
         LA    R1,0&TEXT           LOAD REGISTER VALUE                  00007700
         AGO   .DO_LTEXT                                                00007800
.TEXT_Q  ANOP                                                           00007900
         B     @TXT&SYSNDX         SKIP INLINE STORAGE                  00008000
TEXT&SYSNDX DC    C&TEXT           STORAGE FOR GIVEN CONSTANT           00008100
@TXT&SYSNDX DS    0H                                                    00008200
         LA    R1,TEXT&SYSNDX      LOAD ADDRESS OF CONSTANT             00008300
.DO_LTEXT ANOP                                                          00008400
         AIF (T'&LTEXT EQ 'O').LTEXT_O                                  00008500
         AIF ('&LTEXT'(1,1) EQ '(').LTEXT_R                             00008600
         LA    R2,&LTEXT           LOAD EQUATE SYMBOL OR NUMBER         00008700
         AGO   .DO_MASK                                                 00008800
.LTEXT_R ANOP                                                           00008900
         LA    R2,0&LTEXT          LOAD REGISTER VALUE                  00009000
         AGO   .DO_MASK                                                 00009100
.LTEXT_O ANOP                                                           00009200
         AIF ('&TEXT'(1,1) EQ '''').LTEXT_O1                            00009300
         MNOTE 12,'LTEXT OMITTED WHILE TEXT IS NOT CONSTANT'            00009400
         MEXIT                                                          00009500
.LTEXT_O1 ANOP                                                          00009600
&TEXTL   SETA K'&TEXT-2                                                 00009700
         LA    R2,&TEXTL                                                00009800
.DO_MASK ANOP                                                           00009900
         AIF ('&MASK'(1,1) EQ '(').MASK_R                               00010000
         AIF ('&MASK'(1,1) EQ '''').MASK_Q                              00010100
         LA    R3,&MASK            LOAD ADDRESS OF STORAGE              00010200
         AGO   .DO_LMASK                                                00010300
.MASK_R  ANOP                                                           00010400
         LA    R3,0&MASK           LOAD REGISTER VALUE                  00010500
         AGO   .DO_LMASK                                                00010600
.MASK_Q  ANOP                                                           00010700
         B     @MSK&SYSNDX         SKIP INLINE STORAGE                  00010800
MASK&SYSNDX DC    C&MASK           STORAGE FOR GIVEN CONSTANT           00010900
@MSK&SYSNDX DS    0H                                                    00011000
         LA    R3,MASK&SYSNDX      LOAD ADDRESS OF CONSTANT             00011100
.DO_LMASK ANOP                                                          00011200
         AIF (T'&LMASK EQ 'O').LMASK_O                                  00011300
         AIF ('&LMASK'(1,1) EQ '(').LMASK_R                             00011400
         LA    R4,&LMASK           LOAD EQUATE SYMBOL OR NUMBER         00011500
         AGO   .CALL                                                    00011600
.LMASK_R ANOP                                                           00011700
         LA    R4,0&LMASK          LOAD REGISTER VALUE                  00011800
         AGO   .CALL                                                    00011900
.LMASK_O ANOP                                                           00012000
         AIF ('&MASK'(1,1) EQ '''').LMASK_O1                            00012100
         MNOTE 12,'LMASK OMITTED WHILE MASK IS NOT CONSTANT'            00012200
         MEXIT                                                          00012300
.LMASK_O1 ANOP                                                          00012400
&MASKL   SETA K'&MASK-2                                                 00012500
         LA    R4,&MASKL                                                00012600
.CALL    ANOP                                                           00012700
         AIF ('&BLNKSRCH' NE 'Y').SKIPSRCH                              00012800
*                                                                       00012900
* BEFORE CALLING, EXECUTE BLANK SEARCH, IF SO INDICATED                 00013000
*                                                                       00013100
         LA    R2,0(R1,R2)         R2 -> ONE AFTER LISTED END OF TEXT   00013200
TXTL&SYSNDX EQU   *                                                     00013300
         BCTR  R2,0                DECREASE END POINTER                 00013400
         CLI   0(R2),C' '          IS IT BLANK ?                        00013500
         BNE   TXTE&SYSNDX         YES - END OF TEXT FOUND              00013600
         CR    R1,R2               END POINTER > START POINTER ?        00013700
         BL    TXTL&SYSNDX                                              00013800
TXTE&SYSNDX EQU   *                                                     00013900
         LA    R2,1(R2)            R2 -> ONE AFTER ACTUAL END OF TEXT   00014000
         SR    R2,R1               R2 = ACTUAL TEXT LENGTH              00014100
.*                                                                      00014200
         LA    R4,0(R3,R4)         R4 -> ONE AFTER LISTED END OF MASK   00014300
MSKL&SYSNDX EQU   *                                                     00014400
         BCTR  R4,0                DECREASE END POINTER                 00014500
         CLI   0(R4),C' '          IS IT BLANK ?                        00014600
         BNE   MSKE&SYSNDX         YES - END OF MASK FOUND              00014700
         CR    R3,R4               END POINTER > START POINTER ?        00014800
         BL    MSKL&SYSNDX                                              00014900
MSKE&SYSNDX EQU   *                                                     00015000
         LA    R4,1(R4)            R4 -> ONE AFTER ACTUAL END OF MASK   00015100
         SR    R4,R3               R4 = ACTUAL MASK LENGTH              00015200
.SKIPSRCH ANOP                                                          00015300
         BAL   R14,CTSMSK                                               00015401
         LTR   R15,R15             TEST RESULT                          00015500
         MEXIT                                                          00015600
.*                                                                      00015700
.GENERATE ANOP                                                          00015800
*********************************************************************** 00015900
*                                                                       00016000
* COMPARE MASK ROUTINE                                                  00016100
*                                                                       00016200
*    WRITTEN BY SHLOMI BERNTHAL 06.11.90                                00016300
*                                                                       00016400
*  CHECK IF GIVEN TEXT MATCHES GIVEN MASK.                              00016500
*                                                                       00016600
*  MASK SPECIAL CHARACTERS:                                             00016700
*   '*' - ANY NUMBER (INCLUDING ZERO) OF CHARACTERS                     00016800
*   '?' - ONE CHARACTER                                                 00016900
*   ALL OTHER CHARACTERS - AS THEMSELVES                                00017000
*                                                                       00017100
*********************************************************************** 00017200
*                                                                       00017300
*                        /* T  - POINTER ON TEXT                        00017400
*  ALGORITHM:            /* TA - TEXT ADDRESS                           00017500
*  ----------            /* TL - TEXT LENGTH                            00017600
*                        /* M  - POINTER ON MASK                        00017700
*                        /* MA - MASK ADDRESS                           00017800
*                        /* ML - MASK LENGTH                            00017900
*                        /* P_AST - PLACE ON TEXT WHERE COMPARISON      00018000
*                        /*         TO A *EXP BEGAN LAST                00018100
*  P_AST=0;              /*         (*EXP := PART OF MASK THAT FOLLOWS  00018200
*  M=MA;                 /*          A '*' AND DOESN'T CONTAIN ONE;     00018300
*  T=TA;                 /* LAST_AST(M)+1 - PLACE ON TEXT WHERE CURRENT 00018400
*                        /*                 *EXP BEGAN                  00018500
*  LOOP:                                                                00018600
*     M<MA+ML? YES: T<TA+TL? YES: START_LOOP;                           00018700
*                                     /* IS THE REST OF M ONLY '*'S ?   00018800
*                             NO: M=('*')*? YES: EQUAL;                 00018900
*                                            NO: NOT_EQUAL;             00019000
*               NO: T<TA+TL? YES: P_AST=0? YES: NOT_EQUAL;              00019100
*                                           NO: T=++P_AST;              00019200
*                                              M=LAST_AST(M)+1;         00019300
*                                              LOOP;                    00019400
*                             NO: EQUAL;                                00019500
*  START_LOOP:                                                          00019600
*     M='*': M+1=MA+ML? YES: EQUAL;                                     00019700
*                        NO: ++M;                                       00019800
*                            P_AST=T;                                   00019900
*                            LOOP;                                      00020000
*     M='?': ++M;                                                       00020100
*            ++T;                                                       00020200
*            LOOP;                                                      00020300
*     ELSE:  T=M? YES: ++T;                                             00020400
*                      ++M;                                             00020500
*                      LOOP;                                            00020600
*                  NO: P_AST=0? YES: NOT_EQUAL;                         00020700
*                                NO: T=++P_AST;                         00020800
*                                    M=LAST_AST(M)+1;                   00020900
*                                    LOOP;                              00021000
*                                                                       00021100
*********************************************************************** 00021200
*                                                                       00021300
* UPON ENTRY:                                                           00021400
*             R1  - TEXT ADDRESS                                        00021500
*             R2  - TEXT LENGTH                                         00021600
*             R3  - MASK ADDRESS                                        00021700
*             R4  - MASK LENGTH                                         00021800
*             R14 - RETURN ADDRESS                                      00021900
*                                                                       00022000
* DURING EXECUTION:                                                     00022100
*                                                                       00022200
*             R1  - TEXT POINTER                                        00022300
*             R2  - END OF TEXT                                         00022400
*             R3  - MASK POINTER                                        00022500
*             R4  - END OF MASK                                         00022600
*             R14 - P_AST (EXPLAINED ABOVE)                             00022700
*             R15 - LAST_AST(M)+1 (EXPLAINED ABOVE)                     00022800
*                                                                       00022900
* UPON EXIT:                                                            00023000
*                                                                       00023100
*    R15=0 - TEXT MATCHES MASK                                          00023200
*    R15=4 - TEXT DOESN'T MATCH MASK                                    00023300
*                                                                       00023400
CTSMSK   DS    0F                                                       00023501
*                                                                       00023600
* SAVE RETURN ADDRESS IN R0                                             00023700
*                                                                       00023800
         LR    R0,R14                                                   00023900
*                                                                       00024000
* BEFORE LOOP, SET REGISTERS TO INITIAL VALUES                          00024100
*                                                                       00024200
         LA    R2,0(R1,R2)         SET END OF TEXT                      00024300
         LA    R4,0(R3,R4)         SET END OF MASK                      00024400
         SLR   R14,R14             NO ASTERISK YET                      00024500
         SLR   R15,R15             NO ASTERISK YET                      00024600
*                                                                       00024700
* LOOP: CHECK POINTERS                                                  00024800
*                                                                       00024900
LOOP     EQU   *                                                        00025000
         CR    R3,R4               M<MA+ML?                             00025100
         BNL   END_MASK            NO - MASK EXHAUSTED                  00025200
         CR    R1,R2               T<TA+TL?                             00025300
         BL    STRTLOOP            YES - START_LOOP (MORE MASK & TEXT)  00025400
*                                                                       00025500
* WE ARE HERE IF TEXT IS EXHAUSTED AND MASK ISN'T.                      00025600
* IN THIS CASE, MATCH IS POSSIBLE ONLY IF THE REST OF THE MASK          00025700
* IS COMPOSED OF ASTERISKS ALONE.                                       00025800
*                                                                       00025900
ASTLOOP  EQU   *                                                        00026000
         CLI   0(R3),C'*'          M='*'?                               00026100
         BNE   NOTEQUAL            NO - NOT_EQUAL (MORE RELEVANT MASK)  00026200
         LA    R3,1(R3)            ++M                                  00026300
         CR    R3,R4               M=MA+ML?                             00026400
         BE    EQUAL               YES - EQUAL (PART OF MASK LEFT ='*') 00026500
         BL    ASTLOOP             LOWER - CHECK NEXT MASK CHAR         00026600
*                                                                       00026700
* END OF MASK                                                           00026800
*                                                                       00026900
END_MASK EQU   *                                                        00027000
         CR    R1,R2               T<TA+TL?                             00027100
         BNL   EQUAL               NO - EQUAL (END MASK & END TEXT)     00027200
         LTR   R14,R14             P_AST=0?                             00027300
         BZ    NOTEQUAL            YES - NOT_EQUAL (NO '*', FIXED MASK) 00027400
*                                                                       00027500
* RETURN TO WHERE COMPARISON TO *EXP BEGAN, ADVANCE POINTER ON TEXT     00027600
* BY ONE, SET POINTER ON MASK TO BEGINNING OF *EXP, AND TRY AGAIN.      00027700
*                                                                       00027800
         LA    R14,1(R14)          ++P_AST                              00027900
         LR    R1,R14              T=P_AST                              00028000
         LR    R3,R15              M=LAST_AST(M)+1                      00028100
         B     LOOP                LOOP                                 00028200
*                                                                       00028300
* START_LOOP: BODY OF LOOP                                              00028400
*                                                                       00028500
STRTLOOP EQU   *                                                        00028600
         CLI   0(R3),C'*'          M='*'?                               00028700
         BNE   IS_QUEST            NO - TRY QUESTION MARK               00028800
*                                                                       00028900
* HANDLE ASTERISK                                                       00029000
*                                                                       00029100
         LA    R3,1(R3)            ++M                                  00029200
         CR    R3,R4               M=MA+ML?                             00029300
         BE    EQUAL               YES - EQUAL ('*' AT END OF MASK)     00029400
         LR    R14,R1              P_AST=T (SO THAT WE CAN RETRY)       00029500
         LR    R15,R3              LAST_AST(M)+1=M (")                  00029600
         B     LOOP                LOOP                                 00029700
IS_QUEST EQU   *                                                        00029800
         CLI   0(R3),C'?'          M='?'?                               00029900
         BNE   COMPARE             NO - NOT A SPECIAL CHAR              00030000
*                                                                       00030100
* HANDLE QUESTION MASK                                                  00030200
*                                                                       00030300
         LA    R1,1(R1)            ++T                                  00030400
         LA    R3,1(R3)            ++M                                  00030500
         B     LOOP                LOOP                                 00030600
*                                                                       00030700
* COMPARE TWO REGULAR CHARACTERS                                        00030800
*                                                                       00030900
COMPARE  EQU    *                                                       00031000
         CLC    0(1,R1),0(R3)      T=M?                                 00031100
         BNE    CHAR_DIF                                                00031200
*                                                                       00031300
* T=M                                                                   00031400
*                                                                       00031500
         LA     R1,1(R1)           ++T                                  00031600
         LA     R3,1(R3)           ++M                                  00031700
         B      LOOP               LOOP                                 00031800
*                                                                       00031900
* T^=M                                                                  00032000
*                                                                       00032100
CHAR_DIF EQU    *                                                       00032200
         LTR    R14,R14            P_AST=0?                             00032300
         BZ     NOTEQUAL           NOT_EQUAL (NO '*', CAN'T RETRY)      00032400
*                                                                       00032500
* RETURN TO WHERE COMPARISON TO *EXP BEGAN, ADVANCE POINTER ON TEXT     00032600
* BY ONE, SET POINTER ON MASK TO BEGINNING OF *EXP, AND TRY AGAIN.      00032700
*                                                                       00032800
         LA     R14,1(R14)         ++P_AST                              00032900
         LR     R1,R14             T=P_AST                              00033000
         LR     R3,R15             M=LAST_AST(M)+1                      00033100
         B      LOOP               LOOP                                 00033200
*                                                                       00033300
* RETURN                                                                00033400
*                                                                       00033500
RETURN   EQU   *                                                        00033600
*                                                                       00033700
* RESTORE RETURN ADDRESS FROM R0                                        00033800
*                                                                       00033900
         LR    R14,R0                                                   00034000
         BR    R14                 RETURN                               00034100
*                                                                       00034200
* TEXT MATCHES MASK, R15 = 0                                            00034300
*                                                                       00034400
EQUAL    EQU   *                                                        00034500
         SLR   R15,R15                                                  00034600
         B     RETURN                                                   00034700
*                                                                       00034800
* TEXT DOESN'T MATCH MASK, R15 = 4                                      00034900
*                                                                       00035000
NOTEQUAL EQU   *                                                        00035100
         LA    R15,4                                                    00035200
         B     RETURN                                                   00035300
*                                                                       00035400
*********************************************************************** 00035500
         MEND                                                           00035600
