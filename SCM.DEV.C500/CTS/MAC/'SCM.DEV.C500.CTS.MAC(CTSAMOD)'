         MACRO                                                          00010000
&NAME    CTSAMOD  &MODE,&R=R14,                                        *00020000
               &RENT=NO,&AMDWAREA=AMDWAREA,&MCTADDR=MCTADDR      WM0910 00030000
.*********************************************************************  00040000
.***                                                              ****  00050000
.***       HANDLE ADDRESSABILITY MODE FOR MVS/XA, MSP/AE AND ABOVE****  00060000
.***                                                              ****  00070000
.***       CONTROL-M   RELEASE 3.0.9                              ****  00080000
.***                                                              ****  00081000
.***       LICENCED MATERIAL - 4TH DIMENSION SOFTWARE LTD.        ****  00082000
.***                                                              ****  00083000
.***----------------------- V 3.0.9. -----------------------------****  00084000
.*** WM0910 23.07.92  SUPPORT FUJITSU MSP                     EC  ****  00085000
.*** NY001  04.11.92  SUPPORT MULTI-BEGIN-BLOCKS              NY  ****  00086000
.*********************************************************************  00087000
.*                                                                      00088000
.*       AMODUSE=CVT    USES CVT RATHER THAN CTMAMD ROUTINE TO DECIDE   00089000
.*                      SYSTEM 24/31 BIT CAPABILITY. SHOULD BE USED     00090000
.*                      ONLY FROM CONTROL-O.                            00100000
.*       AMODE=SAVE     SAVE CURRENT AMODE IN &R                        00110000
.*       AMODE=RESTORE  SET  CURRENT AMODE FROM SAVED &R                00120000
.*       AMODE=31       SAVE CURRENT AMODE IN &R AND SET AMODE 31       00130000
.*       AMODE=24       SAVE CURRENT AMODE IN &R AND SET AMODE 24       00140000
.*       AMODE=TEST     RETURNS CC OF SYSTEM AMODE CAPABILITY -         00150000
.*                      TEST WITH BZ   - FOR 24 BIT CAPABILITY (SP)     00160000
.*                      TEST WITH BNZ  - FOR 31 BIT CAPABILITY (XA)     00160100
.*                                                                      00160200
.*       MACRO IS REENTRANT                                             00160300
.*       CHANGES THE R0 AND &R REGISTERS                                00160400
.*       RENT=YES    SHOULD BE CODED IF CALLED  F R O M  A REENTRANT    00160500
.*                   ROUTINE.                                           00160600
.*       AMDWAREA    IS A WORKAREA SUPPLIED BY THE REENTRANT ROUTINE    00160700
.*                                                                      00160800
.*                                                                      00160900
         AIF   (T'&NAME EQ 'O').NONAME                                  00161000
&NAME    EQU   *                                                        00162000
.NONAME  ANOP                                                           00163000
         LCLA  &NPOSPRM                                         WM0910  00164000
&NPOSPRM SETA  N'&SYSLIST                                       WM0910  00165000
         AIF   (&NPOSPRM EQ 1).PRMOK                            WM0910  00166000
         MNOTE 8,'INVALID NUMBER OF POSITIONAL PARAMETERS'      WM0910  00167000
.PRMOK   ANOP                                                   WM0910  00168000
.*                                                              WM0910  00169000
.*  IF AMODUSE=CVT, USE CVTMVSE RATHER THAN CTMAMD ROUTINE      WM0910  00170000
.*                                                              WM0910  00180000
         GBLC   &AMODUSE                                        WM0910  00190000
         AIF   ('&AMODUSE' EQ 'CVT').USECVT                     WM0910  00200000
.*                                                              WM0910  00210000
.*  EXPAND ONCE CTMAMD ROUTINE CONSTANTS .                      WM0910  00220000
.*  IF RENT=YES, EXPAND THE MVC'S TO AMDWAREA EACH TIME.        WM0910  00230000
.*                                                              WM0910  00240000
         GBLC  &REENTR                                          WM0910  00250000
         GBLC  &MCTOPCD         REMEMBER WHETHER ICT/MCTADDR    WM0910  00251000
         GBLA  &AMDCNT                                          WM0910  00252000
         AIF   (&AMDCNT GT 0 AND '&RENT' EQ 'NO').AMDCNTK       WM0910  00253000
         AIF   (&AMDCNT GT 0 AND '&RENT' EQ 'YES').AMDCOPV      WM0910  00254000
&AMDCNT  SETA  &AMDCNT+1                                        WM0910  00255000
         GBLC  &CTMODUL                                         WM0910  00256000
         B     AMDCALLA                  SKIP CTMAMD CONSTANTS  WM0910  00257000
.*                                                              WM0910  00258000
.* EXPAND 'CALL CTMAMD,(0,AMDWTO...)' OR 'CALL CTMAMD,(MCTADDR.)WM0910  00259000
.*                                                              WM0910  00260000
         LCLC  &MCTADD                                          WM0910  00270000
         AIF   ('&RENT' EQ 'NO').NORENT1                        WM0910  00280000
&MCTADD  SETC  '0'                                              WM0910  00290000
&REENTR  SETC  'YES'                                            WM0910  00300000
         AGO   .RENT1                                           WM0910  00301000
.NORENT1 ANOP                                                   WM0910  00302000
&MCTADD  SETC  '&MCTADDR'                                       WM0910  00303000
&REENTR  SETC  'NO'                                             WM0910  00304000
.RENT1   ANOP                                                   WM0910  00305000
&MCTOPCD SETC  '&MCTADDR'                                       WM0910  00306000
AMDWA    DS    0F                                               WM0910  00307000
AMDSAR1  DS    F                                                WM0910  00308000
 MNOTE ' WTO ''CTMAMD - BAD IOA/CTMPARM SUPPLIED FROM CSECT:&CTMODUL'',*00309000
               MF=L  '                                          WM0910  00310000
AMDWTO   WTO  'CTMAMD - BAD IOA/CTMPARM SUPPLIED FROM CSECT: &CTMODUL',*00320000
               MF=L                                             WM0910  00330000
 MNOTE ' CALL  ,(&MCTADD,AMDWTO,0),MF=L  '                      WM0910  00340000
AMDCALL  CALL  ,(&MCTADD,AMDWTO,0),MF=L                         WM0910  00350000
AMDCALLA DS    0H                                               WM0910  00360000
AMDWAL   EQU   *-AMDWA                                          WM0910  00370000
.*                                                              WM0910  00380000
.*  IF RENT, COPY VARIABLES TO WORKAREA                         WM0910  00390000
.*                                                              WM0910  00400000
.AMDCOPV ANOP                                                   WM0910  00410000
         AIF   ('&RENT' EQ 'NO').NORENT2                        WM0910  00420000
         LR    R0,R1               SAVE R1                       NY001  00430000
         L     R1,=A(AMDWA)        R1 -> VARS                    NY001  00440000
*NY001   MVC   &AMDWAREA.(AMDWAL),AMDWA       VARS TO WAREA     WM0910  00450000
         MVC   &AMDWAREA.(AMDWAL),0(R1)       VARS TO WAREA     WM0910  00460000
         LR    R1,R0               RESTORE R1.                   NY001  00470000
         LA    R0,&MCTADDR                    FIX MCTADDR       WM0910  00480000
         ST    R0,&AMDWAREA+(AMDCALL-AMDWA)   ..ADDRESS         WM0910  00490000
*NY001   LA    R0,AMDWTO                      FIX WTO=L         WM0910  00500000
         L     R0,=A(AMDWTO)                  FIX WTO=L          NY001  00510000
         ST    R0,&AMDWAREA+(AMDCALL-AMDWA)+4 ..ADDRESS         WM0910  00520000
         LA    R0,0                           FIX THIRD         WM0910  00530000
         ST    R0,&AMDWAREA+(AMDCALL-AMDWA)+8 ..PARAMETER       WM0910  00540000
.NORENT2 ANOP                                                   WM0910  00550000
.AMDCNTK ANOP                                                   WM0910  00560000
         AIF   ('&MCTOPCD' EQ '&MCTADDR').MCTADOK               WM0910  00570000
        MNOTE 8,'MCTADDR/ICTADDR SHOULD BE SPECIFIED CONSISTENTLY,'     00580000
.MCTADOK ANOP                                                   WM0910  00590000
         AIF   ('&RENT' EQ 'NO').NORENT3                        WM0910  00600000
         AIF   ('&REENTR' EQ 'YES').NOMNOT1                     WM0910  00610000
        MNOTE 8,'RENT=NO SHOULD BE SPECIFIED CONSISTENTLY,'     WM0910  00620000
        MNOTE 8,'OR CTMA24/31 AND MIX OF CTSAMOD RENT=YES'      WM0910  00630000
.NOMNOT1 ANOP                                                   WM0910  00640000
         ST    R1,&AMDWAREA                 SAVE R1 AND PASS    WM0910  00650000
         LA    R1,&AMDWAREA+(AMDCALL-AMDWA) ..PARMLIST VIA R1   WM0910  00660000
         LR    R0,R14                       SAVE R14            WM0910  00670000
         L     R14,=V(CTMAMD)               CALL CTMAMD         WM0910  00680000
         BALR  R14,R14                      ..ROUTINE           WM0910  00690000
         B     AMD&SYSNDX                   SKIP PARMS ADJACENT WM0910  00700000
         DC    AL4(0)                       ..TO BALR (0=RENT)  WM0910  00710000
AMD&SYSNDX EQU *                            ..I.E. R1=A(PARMS)  WM0910  00720000
         N     R14,=XL4'80000000'           CLEAR RETURN CODE   WM0910  00730000
         LTR   R14,R14                      TEST RETURN CODE    WM0910  00740000
         L     R1,&AMDWAREA                 RESTORE R1          WM0910  00750000
         AGO   .RENT4                                           WM0910  00760000
.NORENT3 ANOP                                                   WM0910  00770000
         AIF   ('&REENTR' EQ 'NO').NOMNOT2                      WM0910  00780000
        MNOTE 8,'RENT=YES SHOULD BE SPECIFIED CONSISTENTLY,'    WM0910  00790000
        MNOTE 8,'OR CTMA24/31 AND MIX OF CTSAMOD RENT=YES'      WM0910  00800000
.NOMNOT2 ANOP                                                   WM0910  00810000
         LR    R0,R14                       SAVE R14            WM0910  00820000
         L     R14,=V(CTMAMD)               CALL CTMAMD         WM0910  00830000
         BALR  R14,R14                      ..ROUTINE           WM0910  00840000
         B     AMD&SYSNDX                   SKIP PARMS ADJACENT WM0910  00850000
         DC    AL4(AMDCALL)                 ..TO BALR (^0=NORENT)M0910  00860000
AMD&SYSNDX EQU *                                                WM0910  00870000
         N     R14,=XL4'80000000'           CLEAR RETURN CODE   WM0910  00880000
         LTR   R14,R14                      TEST RETURN CODE    WM0910  00890000
.RENT4   ANOP                                                   WM0910  00900000
         LR    R14,R0                       RESTORE R14         WM0910  00910000
         AIF   ('&MODE' EQ 'TEST').MACEND                       WM0910  00920000
         BZ    NXA&SYSNDX                   IF 24 BIT - SKIP    WM0910  00930000
         AGO   .AFTCVT                      DONT EXPAND OLD CTMAWM0910  00940000
.*                                                                      00950000
.*   USE CVTMVSE RATHER THAN CTMAMD ROUTINE                     WM0910  00960000
.*                                                                      00970000
.USECVT  ANOP                                                   WM0910  00980000
         LR    R0,&R                                                    00990000
         L     &R,16                                                    01000000
         TM    CVTDCB-CVT(&R),CVTMVSE                                   01010000
         LR    &R,R0                                                    01020000
         BZ    NXA&SYSNDX                                               01030000
         AIF   ('&MODE' EQ 'TEST').MACEND                       *DC     01031000
.*                                                                      01032000
.AFTCVT  ANOP                                                   WM0910  01033000
         AIF   (T'&MODE EQ 'O').ERRPARM                                 01034000
         AIF   ('&MODE' EQ 'SAVE').ASAVE                                01035000
         AIF   ('&MODE' EQ 'RESTORE').ARESTOR                           01036000
         AIF   ('&MODE' EQ '31').A31                                    01037000
         AIF   ('&MODE' EQ '24').A24                                    01038000
         AGO   .ERRPARM                                                 01039000
.*                                                                      01040000
.ASAVE   ANOP                                                           01050000
         BASR  &R,0                                                     01060000
         N     &R,=XL4'80000000'                                        01070000
         AGO   .MACEND                                                  01080000
.*                                                                      01090000
.ARESTOR ANOP                                                           01100000
         AIF   ('&R' EQ 'R0').BADR14B                           WM0910  01110000
         AIF   ('&R' EQ '0').BADR14B                            WM0910  01120000
         AGO   .GODR14B                                         WM0910  01130000
.BADR14B ANOP                                                   WM0910  01140000
         MNOTE 8,'CANNOT RESTORE FROM R0'                       WM0910  01150000
.GODR14B ANOP                                                   WM0910  01160000
         N     &R,=XL4'80000000'                                        01161000
         O     &R,=A(BS0&SYSNDX)                                        01162000
         BSM   0,&R                                                     01163000
BS0&SYSNDX EQU   *                                                      01164000
         AGO   .MACEND                                                  01165000
.*                                                                      01166000
.A24     ANOP                                                           01167000
         BASR  &R,0                                                     01168000
         N     &R,=XL4'80000000'                                        01169000
         LR    R0,&R                                                    01170000
         LA    &R,BS1&SYSNDX                                            01180000
         BSM   0,&R                                                     01190000
BS1&SYSNDX EQU *                                                        01200000
         LR    &R,R0                                                    01210000
         AGO   .MACEND                                                  01220000
.*                                                                      01230000
.A31     ANOP                                                           01240000
         BASR  &R,0                                                     01250000
         N     &R,=XL4'80000000'                                        01260000
         LR    R0,&R                                                    01270000
         LA    &R,BS2&SYSNDX                                            01280000
         O     &R,=XL4'80000000'                                        01290000
         BSM    0,&R                                                    01300000
BS2&SYSNDX EQU   *                                                      01310000
         LR    &R,R0                                                    01320000
         AGO   .MACEND                                                  01330000
.*                                                                      01340000
.ERRPARM ANOP                                                           01350000
         MNOTE 8,'INVALID PARAMETERS'                                   01360000
         MEXIT                                                          01370000
.MACEND  ANOP                                                           01380000
NXA&SYSNDX DS 0H                                                        01390000
         MEXIT                                                          01400000
         MEND                                                           01410000
