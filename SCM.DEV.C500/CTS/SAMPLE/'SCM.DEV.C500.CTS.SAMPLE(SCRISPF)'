/*** REXX ******************************************************/
/*                                                             */
/*      SA-AGENT SAMPLE SCRIPT FOR ISPF SERVICES               */
/*                                                             */
/***************************************************************/
/*                                                             */
/* NAME         : SCRISPF                                      */
/* PURPOSE      : SAMPLE SCRIPT THAT USES ISPF SERVICES        */
/* INVOKED      : BY SA-AGENT                                  */
/* INPUT/OUTPUT : CTSA_TOKEN                                   */
/*                                                             */
/***************************************************************/
/*                                                             */
/* DESCRIPTION :                                               */
/* -------------                                               */
/*                                                             */
/*  THIS IS A SAMPLE SCRIPT THAT USES ISPF SERVICES            */
/*                                                             */
/* LOGIC:                                                      */
/* ------                                                      */
/*                                                             */
/*  THE SCRIPT SETUP THE ISPF ENVIRONMENT USING CALLISPF REXX  */
/*  WHICH REINKOVE IT AFTER ISPF ENVIRONMENT SETUP             */
/*                                                             */
/* NOTE:                                         IS10184       */
/* -----                                                       */
/* IF THE SCRIPT IS CHANGED TO RETURN DATA IN CTSA1. VARIABLES */
/* THEN THE FOLLOWING CALL:                                    */
/* ADDRESS LINK "CTSAVAR RC" CTSA_TOKEN CTSA1.RCODE            */
/* SHOULD BE CHANGED TO:                                       */
/* ADDRESS LINK "CTSAVAR PUT" CTSA_TOKEN                       */
/***************************************************************/

ARG CTSA_TOKEN

ADDRESS TSO

/****************************************************************/
/***                                                          ***/
/*** IF ISPF ENVIRONMENT IS NOT ACTIVE, USE CALLISPF REXX TO  ***/
/*** SET IT UP .                                              ***/
/***                                                          ***/
/*** CALLISPF WILL REINVOKE THE SCRIPT UNDER ISPF ENVIRONMENT ***/
/***                                                          ***/
/****************************************************************/

ISPF_ACTIVE = SYSVAR(SYSISPF)
IF ( ISPF_ACTIVE <> "ACTIVE" ) THEN DO
   PARSE SOURCE . . SCRIPT_NAME .
   CALL CALLISPF CTSA_TOKEN SCRIPT_NAME
   RETURN RESULT
END

/****************************************************************/
/***                                                          ***/
/***   THIS PART OF THE SCRIPT IS ACTIVATED ONLY IF ISPF      ***/
/***   ENVIRONMENT WAS SET UP CORRECTLY BY CALLISPF           ***/
/***                                                          ***/
/****************************************************************/

/***************************************************************/
/***                                                         ***/
/***       READ CTSA VARIABLES INTO REXX STEM                ***/
/***                                                         ***/
/***************************************************************/

ARG CTSA_TOKEN
ADDRESS LINK "CTSAVAR GET"  CTSA_TOKEN
IF ( RC <> 0 ) THEN DO
   SAY "SCRIPT ERROR. CTSAVAR GET FAILED WITH RC = "RC
   RETURN 16
END

/***************************************************************/
/***                                                         ***/
/***       ACTUAL PROCESSING                                 ***/
/***                                                         ***/
/***************************************************************/

CALL PROCESS
IF ( RESULT = 0 ) THEN CTSA1.RCODE="OK"           /* O.K.         */
                  ELSE CTSA1.RCODE="FATAL"        /* ERROR        */

/***************************************************************/
/***                                                         ***/
/***       COMMIT CTSA VARIABLES AND TERMINATE               ***/
/***                                                         ***/
/***************************************************************/

ADDRESS LINK "CTSAVAR RC" CTSA_TOKEN CTSA1.RCODE
IF ( RC <> 0 ) THEN DO
   SAY "SCRIPT ERROR. CTSAVAR PUT FAILED WITH RC = "RC
   RETURN 16
END

RETURN

/***************************************************************/
/***                                                         ***/
/***       ACTUAL SCRIPT PROCESSING                          ***/
/***                                                         ***/
/***************************************************************/

PROCESS :

SAY "FUNCTION=" || CTSA0.FUNC_NAME "ACTION=" || CTSA0.ACTION

SAY "SYSVAR(SYSENV) =" SYSVAR(SYSENV)
SAY "SYSVAR(SYSISPF)=" SYSVAR(SYSISPF)

ADDRESS TSO "SUBCOM ISPEXEC"

SAY "SUBCOM RC=" RC
IF (RC <> 0) THEN DO
   SAY "SCRIPT ERROR - ISPF ENVIRONMENT IS NOT ACTIVE"
   RETURN 16
END

/*** DEMONSTRATE VPUT , VGET ISPF SERVICES ***/

V1 = "HELLO"
V2 = "WORLD"
ADDRESS ISPEXEC "VPUT (V1 V2)"
IF ( RC <>0 ) THEN DO
   SAY "ISPF VPUT HAS FAILED. RC = " RC
   RETURN 8
END

V1 = "CLEARED"
V2 = "CLEARED"

SAY "BEFORE VGET: " V1 V2

ADDRESS ISPEXEC "VGET (V1 V2)"
IF ( RC <>0 ) THEN DO
   SAY "ISPF VGET HAS FAILED. RC = " RC
   RETURN 8
END

SAY "AFTER VGET: " V1 V2

RETURN  0
