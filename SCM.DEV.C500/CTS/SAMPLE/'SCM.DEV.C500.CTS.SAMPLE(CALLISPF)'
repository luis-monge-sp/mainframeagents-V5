/*** REXX ******************************************************/
/*                                                             */
/*      CALL ISPF SCRIPT ROUTINE                               */
/*                                                             */
/***************************************************************/
/*                                                             */
/* NAME         : CALLISPF                                     */
/*                                                             */
/* PURPOSE      : SAMPLE SCRIPT TO CALL A REXX THAT USES       */
/*                ISPF SERVICES                                */
/*                                                             */
/* DESCRIPTION :                                               */
/*                                                             */
/*  THIS REXX INVOKES ANOTHER REXX THAT USES ISPF SERVICES     */
/*                                                             */
/***************************************************************/

ARG CTSA_TOKEN SCRIPT_NAME

MSG_MEMBER        = "CTSMSGS"     /* NAME OF MEMBER IN ISPPPROF */
                                  /* FOR MESSAGES PASSING       */
PARSE SOURCE . . CINAME .

/*****************************************************************/
/***                                                           ***/
/***   CALL EITHER ISPF ENVIRONMENT SETUP OR ACTUAL SCRIPT     ***/
/***                                                           ***/
/*****************************************************************/

ISPF_ACTIVE = SYSVAR(SYSISPF)

IF ( ISPF_ACTIVE <> "ACTIVE" ) THEN ,
   CALL CALLISP1
ELSE
   CALL CALLISP2

RETURN RESULT

/*****************************************************************/
/***                                                           ***/
/***   SETUP ISPF ENVIRONMENT                                  ***/
/***                                                           ***/
/*****************************************************************/

CALLISP1:

ADDRESS TSO

"PROFILE NOPREFIX"

/*** SETUP OPTIONS ***/

ISPPROF_ALLOCATED = "N"
FILES_ALLOCATED = ""

CALL CALLITAB
PARSE VAR RESULT ,
  ISPPROF_NAME ISPPROF_STAT ISR_PREFIX ISP_PREFIX ISP_STAT ,
  ISPPROF_UNIT ISPPROF_BLKSZ ISPPROF_SPACE

/*****************************************************************/
/***                                                           ***/
/***   ALLOCATE ISPF LIBRARIES TO BE ABLE TO USE ISPF SERVICES ***/
/***                                                           ***/
/*****************************************************************/

IF ( ISP_STAT = "SHR" ) THEN DO

   "ALLOCATE FILE(ISPPLIB) DATASET("   || ,
              ISR_PREFIX || ".ISRPENU " ||  ,
              ISP_PREFIX || ".ISPPENU ) SHR"
   IF ( RC <> 0 ) THEN DO
     SAY CINAME ||':  ALLOCATION OF ISPPLIB FAILED. RC=' || RC
     EXIT 16
   END

   FILES_ALLOCATED = FILES_ALLOCATED || "ISPPLIB "

   "ALLOCATE FILE(ISPMLIB) DATASET("   || ,
              ISR_PREFIX || ".ISRMENU " ||  ,
              ISP_PREFIX || ".ISPMENU ) SHR"
   IF ( RC <> 0 ) THEN DO
     SAY CINAME ||':  ALLOCATION OF ISPMLIB FAILED. RC=' || RC
     CALL FREE_FILES
     EXIT 16
   END

   FILES_ALLOCATED = FILES_ALLOCATED || "ISPMLIB "

   "ALLOCATE FILE(ISPTLIB) DATASET("   || ,
              ISR_PREFIX || ".ISRTLIB " ||  ,
              ISP_PREFIX || ".ISPTENU ) SHR"
   IF ( RC <> 0 ) THEN DO
     SAY CINAME ||': ALLOCATION OF ISPTLIB FAILED. RC=' || RC
     CALL FREE_FILES
     EXIT 16
   END

   FILES_ALLOCATED = FILES_ALLOCATED || "ISPTLIB "

   "ALLOCATE FILE(ISPSLIB) DATASET("   || ,
              ISR_PREFIX || ".ISRSENU " ||  ,
              ISP_PREFIX || ".ISPSLIB ) SHR"
   IF ( RC <> 0 ) THEN DO
     SAY CINAME ||': ALLOCATION OF ISPSLIB FAILED. RC=' || RC
     CALL FREE_FILES
     EXIT 16
   END

   FILES_ALLOCATED = FILES_ALLOCATED || "ISPSLIB "

END

/*****************************************************************/
/***                                                           ***/
/***   ALLOCATE ISPF PROFILE LIBRARY                           ***/
/***                                                           ***/
/*****************************************************************/

/*** ALLOCATE A NEW ISPF PROFILE LIBRARY ***/

IF ( ISPPROF_STAT = "NEW" ) THEN DO
   "ALLOCATE FILE(ISPPROF) " ,
      " DATASET(" || ISPPROF_NAME || ") NEW " ,
      " DSORG(PO) RECFM(F,B) LRECL(80) " || ,
      ISPPROF_BLKSZ || " " || ISPPROF_SPACE || " " || ,
      ISPPROF_UNIT

   IF ( RC <> 0 ) THEN DO
      SAY CINAME ||': ALLOCATION OF NEW ISPPROF FAILED. RC=',
          || RC
      CALL FREE_FILES
      EXIT 16
   END

   ISPPROF_ALLOCATED = "Y"

END

/*** ALLOCATE AN EXISTING ISPF PROFILE LIBRARY ***/

ELSE IF ( ISPPROF_STAT = "SHR" ) THEN DO

   "ALLOCATE FILE(ISPPROF) " ,
      " DATASET(" || ISPPROF_NAME || ") SHR "
   IF ( RC <> 0 ) THEN DO
      SAY CINAME ||': ALLOCATION OF EXISTING ISPPROF FAILED. RC=' || RC
      CALL FREE_FILES
      EXIT 16
   END

   ISPPROF_ALLOCATED = "Y"

END

/*****************************************************************/
/***                                                           ***/
/***   CLEAR MESSAGES MEMBER                                   ***/
/***                                                           ***/
/*****************************************************************/

/*** ALLOCATE MESSAGES MEMBER IN ISPPROF ***/

"ALLOCATE FILE(ISPWORK) " || ,
    "DS(" || ISPPROF_NAME || "(" || MSG_MEMBER || ")) SHR REUS"

IF ( RC<>0 ) THEN DO
   SAY CINAME ||': FAILED TO ALLOCATE ISPWORK FILE. RC=' || RC
   CALL FREE_FILES
   EXIT (16)
END

/*** WRITE A LINE TO MESSAGES MEMBER IN ISPPROF ***/

CLEAR_LINE.1 = "NO MESSAGES RETURNED BY SCRIPT " || SCRIPT_NAME

"EXECIO 1 DISKW ISPWORK ( STEM CLEAR_LINE. FINIS "

IF ( RC<>0 ) THEN DO
   "FREE FILE(ISPWORK) "
   CALL FREE_FILES
   SAY CINAME ||': FAILED TO CLEAR MESSAGE MEMBER. RC=' || RC
   EXIT (16)
END

/*** FREE MESSAGES MEMBER ***/

"FREE FILE(ISPWORK) "

/*****************************************************************/
/***                                                           ***/
/***   ACTIVATE REXX WITH ISPF ENVIRONMENT                     ***/
/***                                                           ***/
/*****************************************************************/

PARSE SOURCE . . CINAME .
PARSE VAR ISPPROF_NAME ISPPROF_HLQ '.' .

"PROFILE PREFIX(" || ISPPROF_HLQ || ")"

"ISPSTART NEWAPPL(CTSA) CMD(" || ,
     CINAME || " " CTSA_TOKEN || " " SCRIPT_NAME         || ")"

ISPSTART_RC = RC

"PROFILE NOPREFIX"

/*****************************************************************/
/***                                                           ***/
/***   OBTAIN MESSAGES FROM ISPF PROFILE AND ISSUE THEM        ***/
/***                                                           ***/
/*****************************************************************/

/*** ALLOCATE MESSAGES MEMBER IN ISPPROF ***/

"ALLOCATE FILE(ISPWORK) " ,
          "DS(" || ISPPROF_NAME || "(CTSMSGS)) SHR REUS"

IF ( RC<>0 ) THEN DO
   SAY CINAME ||': FAILED TO ALLOCATE ISPWORK FILE. RC=' || RC
   CALL FREE_FILES
   EXIT (16)
END

/*** READ MESSAGES MEMBER IN ISPPROF ***/

"EXECIO * DISKR ISPWORK ( STEM TRAP_LINE. FINIS "

IF ( RC<>0 ) THEN DO
   "FREE FILE(ISPWORK) "
   CALL FREE_FILES
   SAY CINAME ||': FAILED TO READ MESSAGES FROM ISPWORK FILE. RC=',
       || RC
   EXIT (16)
END

/*** FREE MESSAGES MEMBER ***/

"FREE FILE(ISPWORK) "

DO I=1 TO TRAP_LINE.0
   SAY TRAP_LINE.I
END

/*****************************************************************/
/***                                                           ***/
/***   FINISH                                                  ***/
/***                                                           ***/
/*****************************************************************/

CALL FREE_FILES

RETURN ISPSTART_RC

/*****************************************************************/
/***                                                           ***/
/***   FREE FILES THAT WHERE ALLOCATED BY THE SCRIPT           ***/
/***                                                           ***/
/*****************************************************************/

FREE_FILES :


IF ( FILES_ALLOCATED <> "" ) THEN ,
   "FREE FILE(" || FILES_ALLOCATED || ")"

IF ( ISPPROF_ALLOCATED = "Y" ) THEN DO

   IF ( ISPPROF_STAT = "NEW" )  THEN ,
      "FREE FILE(ISPPROF) DELETE"
   ELSE  ,
      "FREE FILE(ISPPROF)"
END

RETURN

/*****************************************************************/
/***                                                           ***/
/***   CALL REAL SCRIPT                                        ***/
/***                                                           ***/
/*****************************************************************/

CALLISP2:

/*** OBTAIN ISPPROF DATASET NAME ***/

CALL LISTDSI(ISPPROF FILE)
IF ( RESULT > 0 ) THEN DO
   SAY CINAME ||': LISTDSI FAILED. SYSREASON=' SYSREASON
   RETURN 12
END
PROFILE_NAME = SYSDSNAME

/*** ACTIVATE SCRIPT ***/

X = OUTTRAP("TRAP_LINE.","*", CONCAT )
INTERPRET "CALL " SCRIPT_NAME CTSA_TOKEN
SCR_RC = 0  /* RESULT */
X = OUTTRAP('OFF')

/*** WRITE MESSAGES TO MESSAGES MEMBER ***/

"ALLOCATE FILE(ISPWRK) DATASET('" || ,
          PROFILE_NAME || "(" || MSG_MEMBER || ")') SHR"
"EXECIO" TRAP_LINE.0 "DISKW ISPWRK ( STEM TRAP_LINE. FINIS "
"FREE FILE(ISPWRK) "

RETURN SCR_RC
