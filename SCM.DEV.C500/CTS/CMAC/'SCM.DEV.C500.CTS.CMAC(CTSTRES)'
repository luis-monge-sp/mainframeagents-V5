/**************************************************************
*                                                             *
* Title            : TSS                                      *
*                                                             *
* File Name        : CTSTRES                                  *
*                                                             *
* Author           : Alexander Shvartsman                     *
*                                                             *
* Creation Date    : 24/04/97                                 *
*                                                             *
* Description      : H file for getres, getres acl functions  *
*                                                             *
* Assumptions and                                             *
*   Considerations :                                          *
*                                                             *
**************************************************************/

/**************************************************************
* Mod.Id   Who      When     Description                      *
* -------- -------- -------- -------------------------------- *
* BS2318   GS+AS    27/11/97 Added skip to rec 2011, 2921     *
* WS2321   AS       23/02/98 Support APPLDATA, SCRIPTNAME,    *
*                            SCRIPTPARM for SYSMVIEW          *
* PS0388   AlexS    28/09/99 TSS 5.1 Support                  *
* BS2557   Yonatan  13/01/03 support records 2027,2028,2029   *
* SAS2IBMA AvnerL   18/07/16 SAS/C to IBM/C                   *
* BS10099  SeligT   23/01/19 Ignore Records 0000 and 2022     *
*                            During TSS Target Aggregation    *
**************************************************************/

#ifndef TSS_RES_H_included
#define TSS_RES_H_included

#ifdef EXT
#undef EXT
#endif
#ifndef TSS_owner
#define EXT extern
#else
#define EXT
#endif

#include ESA_API
#include MVS_OS_CLI
#include API_ADDINFO

#define TSS_init_res_handle         tssr01
#define TSS_free_res_handle         tssr02
#define TSS_alloc_res_trap_buffer   tssr03
#define TSS_realloc_res_trap_buffer tssr04
#define TSS_res_buf_dump            tssr05
#define TSS_get_res_list            tssr06
#define TSS_save_res_info           tssr07
#define TSS_get_whoowns_res         tssr08
#define TSS_get_whohas_res          tssr09
#define TSS_select_res              tssr10
#define TSS_extract_2014            tssr11
#define TSS_extract_2017            tssr12
#define TSS_extract_2021            tssr13
#define TSS_extract_4011r           tssr14
#define TSS_alloc_res_info_table    tssr15
#define TSS_fix_res_name            tssr16
#define TSS_set_rsimple_key         tssr17
#define TSS_set_rsimple_lst         tssr18
#define TSS_set_rdate               tssr19
#define TSS_determine_acid          tssr20
#define TSS_extract_2007            tssr22
#define TSS_extract_2008            tssr23
#define TSS_acid_restype_handling   tssr24

#define TSS_RES_OWNER               "RES_OWNER"
#define TSS_RES_HAS_OWNER           "RES_HAS_OWNER"
#define TSS_RES_FORCE               "FORCE"

#define MAX_TSS_RES_NAME_LEN          TSS_RESOURCE_NAME_LEN
#define MAX_TSS_RES_TYPE_LEN          TSS_RESTYPE_NAME_LEN
#define MAX_TSS_CMD_ACL_ENTRIES      50

typedef enum {
   TSS_ADD_RES_OK                     = 1,
   TSS_ADD_RES_ERR_EMPTY_BUFFER       = 2,
   TSS_ADD_RES_ERR_FOUND_LONGER_NAME  = 3
 } TSS_ADD_RES_ERR_MSG_typ;

typedef enum {
 TSS_WHOHAS_LIST_ONLY        = 1,
 TSS_WHOOWNS_LIST_ONLY       = 2,
 TSS_WHOHAS_AND_WHOOWNS_LIST = 3
 } TSS_RES_LIST_MODE_typ;

typedef enum {
   TSS_ACL_ITEM_SOURCE_UNKNOWN  = 1,
   TSS_ACL_ITEM_FROM_XAUTH      = 2,
   TSS_ACL_ITEM_FROM_ADMIN      = 3
 } TSS_ACL_ITEM_SOURCE_typ;

typedef enum {
   TSS_SAVE_WHOLE_ACL           = 1,
   TSS_SAVE_UNIQ_RES_NAME_ONLY  = 2
 } TSS_SAVE_ACL_MODE_typ;

/*
 *  Area prototypes
 */

#define  TSS_RES_INFO_ITEMS     1000

typedef struct _RES_ITEM {
   int                     ref_to_name; /* Offset in res names area */
   char                    owner[TSS_USER_NAME_LEN + 1];
   char                    ace_acid[TSS_USER_NAME_LEN + 1];
   char                    has_owner[2];
   TSS_ACL_ITEM_SOURCE_typ acl_source;
}  TSS_RES_ITEM_typ,  * TSS_RES_ITEM_ptr;

typedef struct _RES_INFO {
    int                   alloc_items;
    int                   used_items;
    TSS_RES_ITEM_typ    * res_items;
}  TSS_RES_INFO_typ,  * TSS_RES_INFO_ptr;

/*
 *  Resource names area
 */

#define  TSS_RES_NAMES_AREA_LEN     2048

typedef struct _RES_NAMES_AREA {
     int      max_len;
     int      used_len;
     char    *res_names;
}  TSS_RES_NAMES_AREA_typ,  * TSS_RES_NAMES_AREA_ptr;

typedef struct _RES_TRAP_BUFF {
     TSS_RES_NAMES_AREA_typ       res_names;
     char                         res_type[MAX_TSS_PARAM_LEN + 1];
     TSS_RES_INFO_typ             res_info;
     TSS_RES_INFO_typ             tmp_res_info;
}  TSS_TRAP_RES_BUF_typ,  * TSS_TRAP_RES_BUF_ptr;

/*
 *  Get Res , Get Res ACL handle
 */

typedef struct _GET_RES_HANDLE {
      int                          list_ind;
      TSS_TRAP_RES_BUF_typ        *trap_buffer;
      TSS_TRAP_BUF_rec_typ        *acid_buffer;
      TSS_GET_HANDLE_typ          *aux_handle;  /*for ACL           */
      fpos_t                       file_pos;    /*file position(ACL)*/
}  TSS_GET_RES_HANDLE_typ,  * TSS_GET_RES_HANDLE_ptr;


/*
 *  Function prototypes
 */

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_init_res_handle                        *
 *                                                             *
 * DESCRIPTION    : Check and create get handle                *
 *                                                             *
 * INPUT          : comp      - diag component                 *
 *                  handle    - entered handle                 *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : get_handle- get handle                     *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_init_res_handle (ESA_DIAG_COMP_typ        comp,
                             TSS_GET_RES_HANDLE_typ    ** get_handle,
                             void                      ** handle,
                             ADMIN_PARAMS_rec_typ       * admin_params,
                             ERR_STRUCT_rec_typ         * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_free_res_handle                        *
 *                                                             *
 * DESCRIPTION    : Free get handle                            *
 *                                                             *
 * INPUT          : comp      - diag component                 *
 *                  handle    - entered handle                 *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_free_res_handle (ESA_DIAG_COMP_typ        comp,
                             void                      ** handle,
                             CTSAMSG_DEST_TABLE_rec_typ * dest,
                             CTSAMSG_HANDLE_rec_typ     * msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_alloc_res_trap_buffer                  *
 *                                                             *
 * DESCRIPTION    : Allocate resource buffer                   *
 *                                                             *
 * INPUT          : comp          - diag component             *
 *                  max_entries   - max entries                *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : trap_handle   - command trap handle        *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK, ESA_FATAL - err               *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_alloc_res_trap_buffer(ESA_DIAG_COMP_typ  comp,
                        int                              max_entries,
                        TSS_TRAP_RES_BUF_typ           **trap_handle,
                        CTSAMSG_DEST_TABLE_rec_ptr       dest,
                        CTSAMSG_HANDLE_rec_ptr           msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_alloc_res_info_table                   *
 *                                                             *
 * DESCRIPTION    : Allocate resource info table               *
 *                                                             *
 * INPUT          : comp          - diag component             *
 *                  max_entries   - max entries                *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : trap_handle   - command trap handle        *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK, ESA_FATAL - err               *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_alloc_res_info_table (ESA_DIAG_COMP_typ  comp,
                            int                          max_entries,
                            TSS_RES_INFO_typ            *info_table,
                            CTSAMSG_DEST_TABLE_rec_ptr   dest,
                            CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_realloc_res_trap_buffer                *
 *                                                             *
 * DESCRIPTION    : RE Allocate trap buffer                    *
 *                                                             *
 * INPUT          : cmd_handle    -  trap_handle               *
 *                  incr          -  increment value           *
 *                  comp          -  diag component            *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK, ESA_FATAL - err               *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_realloc_res_trap_buffer (ESA_DIAG_COMP_typ  comp,
                               TSS_RES_INFO_typ            *items,
                               int                          incr,
                               CTSAMSG_DEST_TABLE_rec_ptr   dest,
                               CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_res_buf_dump                           *
 *                                                             *
 * DESCRIPTION    : Dump trap buffer  (resources)              *
 *                                                             *
 * INPUT          : trap_buff    - trap buffer                 *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT void TSS_res_buf_dump(ESA_DIAG_COMP_typ      comp,
                           TSS_TRAP_RES_BUF_typ * trap_buff);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_res_list                           *
 *                                                             *
 * DESCRIPTION    : Obtain resource list                       *
 *                                                             *
 * INPUT          : get_handle     -    get_handle             *
 *                  res_in         -    resource input         *
 *                  comp           -    diag component         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_get_res_list (ESA_DIAG_COMP_typ          comp,
                          TSS_CMD_MODE_typ               cmd_mode,
                          TSS_RES_LIST_MODE_typ          mode,
                          RES_PARAMS_rec_typ           * res_in,
                          TSS_GET_RES_HANDLE_typ       * get_handle,
                          TSS_SAVE_ACL_MODE_typ          save_acl_mode,
                          ADMIN_PARAMS_rec_typ         * admin_params,
                          ERR_STRUCT_rec_typ           * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_save_res_info                          *
 *                                                             *
 * DESCRIPTION    : Save res info                              *
 *                                                             *
 * INPUT          : trap_buffer    -    res trap buffer        *
 *                  owner_acid     -    res_owner              *
 *                  ace_acid       -    ace acid               *
 *                  owns           -    cons "OWNS"            *
 *                  res_type       -    res type               *
 *                  res_name       -    res name               *
 *                  comp           -    diag component         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_save_res_info(ESA_DIAG_COMP_typ       comp,
                          TSS_TRAP_RES_BUF_typ      * trap_buff,
                          char                      * owner_acid,
                          char                      * ace_acid,
                          char                      * owns,
                          char                      * res_type,
                          char                      * res_name,
                          TSS_SAVE_ACL_MODE_typ       save_mode,
                          TSS_ACL_ITEM_SOURCE_typ     acl_source,
                          CTSAMSG_DEST_TABLE_rec_ptr  dest,
                          CTSAMSG_HANDLE_rec_ptr      msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_whoowns_res                        *
 *                                                             *
 * DESCRIPTION    : Issue TSS commands and save output         *
 *                                                             *
 * INPUT          : comp        - diag component               *
 *                  ug_acid     - ug acid                      *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : trap_buffer - connection info              *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_get_whoowns_res(ESA_DIAG_COMP_typ        comp,
                          TSS_CMD_MODE_typ               mode,
                          RES_PARAMS_rec_typ           * res_in,
                          TSS_GET_RES_HANDLE_typ       * get_handle,
                          TSS_SAVE_ACL_MODE_typ          save_acl_mode,
                          ADMIN_PARAMS_rec_typ         * admin_params,
                          ERR_STRUCT_rec_typ           * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_whohas_res                         *
 *                                                             *
 * INPUT          : comp        - diag component               *
 *                  res_in      - resource description         *
 *                  get_handle  - get res handle               *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_get_whohas_res(ESA_DIAG_COMP_typ         comp,
                          TSS_CMD_MODE_typ               mode,
                          RES_PARAMS_rec_typ           * res_in,
                          TSS_GET_RES_HANDLE_typ       * get_handle,
                          TSS_SAVE_ACL_MODE_typ          save_acl_mode,
                          ADMIN_PARAMS_rec_typ         * admin_params,
                          ERR_STRUCT_rec_typ           * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_select_res                             *
 *                                                             *
 * DESCRIPTION    : Select resource                            *
 *                                                             *
 * INPUT          : get_handle   - get res handle              *
 *                  res_params   - resource params structure   *
 *                  comp         - diag component              *
 *                                                             *
 * OUTPUT         : res_item     - ptr to res internal table   *
 *                  res_name     - ptr to res_name             *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_select_res(ESA_DIAG_COMP_typ      comp,
                       TSS_GET_RES_HANDLE_typ   * get_handle,
                       RES_PARAMS_rec_typ       * res_params,
                       TSS_RES_ITEM_typ        ** res,
                       char                    ** res_name);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_determine_acid                         *
 *                                                             *
 * DESCRIPTION    : Determine object for ACL commands          *
 *                                                             *
 * INPUT          : ace - ptr to ace structure                 *
 *                                                             *
 * OUTPUT         : acid                                       *
 *                  acid_type                                  *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT void TSS_determine_acid(ACE_rec_typ      * ace,
                             char             * acid,
                             OBJECT_TYPE_typ  * acid_type);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_acid_restype_handling                  *
 *                                                             *
 * DESCRIPTION    : Handle resource type ACID                  *
 *                                                             *
 * INPUT          : res_params, addinfo                        *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK      - valid ACID function          *
 *                  ESA_FATAL   - invalid                      *
 **************************************************************/

 EXT ESA_RC TSS_acid_restype_handling(ESA_DIAG_COMP_typ        comp,
                           RES_PARAMS_rec_typ            * res_params,
                           ADDINFO_rec_typ               * addinfo_data,
                           ADMIN_PARAMS_rec_typ          * admin_params,
                           ERR_STRUCT_rec_typ            * err);

 /********************************************************
  *                                                      *
  *        Extractor functions                           *
  *                                                      *
  ********************************************************/

 EXT ESA_RC TSS_extract_2021 (ESA_DIAG_COMP_typ        comp,
                          char                       * record,
                          TSSCFILE_HANDLE_typ        * h_desc,
                          TSSCFILE_REC_typ           * r_desc,
                          TSSCFILE_DESCR_typ         * d_desc,
                          char                       * key_val,
                          ADDINFO_rec_ptr              addinfo,
                          ADDINFO_rec_ptr              laddinfo,
                          CTSAMSG_DEST_TABLE_rec_ptr   dest,
                          CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_extract_2014(ESA_DIAG_COMP_typ            comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_extract_2017(ESA_DIAG_COMP_typ            comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);


 EXT ESA_RC TSS_extract_4011r(ESA_DIAG_COMP_typ        comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_fix_res_name(ESA_DIAG_COMP_typ      comp,
                       char                       * rname,
                       TSSCFILE_HANDLE_typ        * h_desc,
                       TSSCFILE_REC_typ           * r_desc,
                       TSSCFILE_DESCR_typ         * d_desc,
                       char                       * key_val,
                       ADDINFO_rec_ptr              addinfo,
                       ADDINFO_rec_ptr              laddinfo,
                       CTSAMSG_DEST_TABLE_rec_ptr   dest,
                       CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_extract_2007(ESA_DIAG_COMP_typ        comp,
                         char                       * record,
                         TSSCFILE_HANDLE_typ        * h_desc,
                         TSSCFILE_REC_typ           * r_desc,
                         TSSCFILE_DESCR_typ         * d_desc,
                         char                       * key_val,
                         ADDINFO_rec_ptr              addinfo,
                         ADDINFO_rec_ptr              laddinfo,
                         CTSAMSG_DEST_TABLE_rec_ptr   dest,
                         CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_extract_2008(ESA_DIAG_COMP_typ        comp,
                         char                       * record,
                         TSSCFILE_HANDLE_typ        * h_desc,
                         TSSCFILE_REC_typ           * r_desc,
                         TSSCFILE_DESCR_typ         * d_desc,
                         char                       * key_val,
                         ADDINFO_rec_ptr              addinfo,
                         ADDINFO_rec_ptr              laddinfo,
                         CTSAMSG_DEST_TABLE_rec_ptr   dest,
                         CTSAMSG_HANDLE_rec_ptr       msgs);

/****************************************************
 *                                                  *
 *       Set functions   ACL                        *
 *                                                  *
 ****************************************************/

 EXT ESA_RC TSS_set_rsimple_key(ESA_DIAG_COMP_typ     comp,
                           TSS_CMD_HANDLE_typ        *cmd_handle,
                           void                      *rtt_table,
                           void                      *rttv,
                           ONE_FIELD_rec_ptr          ess_pair,
                           ADDINFO_rec_ptr            get_addinfo,
                           ADDINFO_rec_ptr            ess_addinfo,
                           CTSAMSG_DEST_TABLE_rec_ptr dest,
                           CTSAMSG_HANDLE_rec_ptr     msgs);

 EXT ESA_RC TSS_set_rsimple_lst(ESA_DIAG_COMP_typ     comp,
                           TSS_CMD_HANDLE_typ        *cmd_handle,
                           void                      *rtt_table,
                           void                      *rttv,
                           ONE_FIELD_rec_ptr          ess_pair,
                           ADDINFO_rec_ptr            get_addinfo,
                           ADDINFO_rec_ptr            ess_addinfo,
                           CTSAMSG_DEST_TABLE_rec_ptr dest,
                           CTSAMSG_HANDLE_rec_ptr     msgs);

 EXT ESA_RC TSS_set_rdate(ESA_DIAG_COMP_typ          comp,
                          TSS_CMD_HANDLE_typ        *cmd_handle,
                          void                      *rtt_table,
                          void                      *rttv,
                          ONE_FIELD_rec_ptr          ess_pair,
                          ADDINFO_rec_ptr            get_addinfo,
                          ADDINFO_rec_ptr            ess_addinfo,
                          CTSAMSG_DEST_TABLE_rec_ptr dest,
                          CTSAMSG_HANDLE_rec_ptr     msgs);

#if defined(INCLUDE_ACL_LINES_DESCRIPTION)

/*******************************************************
 *    TSS LIST COMMAND   4.4, 5.0                      *
 *******************************************************/

 CFILE_REC_START(0001)
 CFILE_REC_FIELD(33, 256, CFILE_REC_0001, ADI_LOCAL, NULL )
 CFILE_REC_END  (0001, "0001", CFILE_BREAK, "", NULL)

 CFILE_REC_START(1900)             /* WHOOWNS     */
 CFILE_REC_END  (1900, "1900", CFILE_SKIP, "", NULL)
 CFILE_REC_START(1950)             /* WHOHAS      */
 CFILE_REC_END  (1950, "1950", CFILE_SKIP, "", NULL)

 CFILE_REC_START(2007)             /* WHOHAS XAUTH*/
 CFILE_REC_FIELD(33,8,   "RES_TYPE", ADI_LOCAL, NULL)
 CFILE_REC_FIELD(41,8,   "ACID",     ADI_LOCAL, NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_FIELD(49,8,"EXPIRES",ADI_REGLR,(void *)TSS_convert_date)
 CFILE_REC_FIELD(57,8,   "OWNER"   , ADI_LOCAL, NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_FIELD(65,46,"RES_NAME",ADI_LOCAL,(void *)TSS_fix_res_name)
                                          /*SAS2IBMA*/
 CFILE_REC_END(2007,"2007",CFILE_BREAK,"",(void *)TSS_extract_2007)

 CFILE_REC_START(2008)             /* WHOHAS ADMIN*/
 CFILE_REC_FIELD(33,8,   "RES_TYPE", ADI_LOCAL, NULL)
 CFILE_REC_FIELD(41,8,   "ACID",     ADI_LOCAL, NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_FIELD(49,8,"EXPIRES",ADI_REGLR,(void *)TSS_convert_date)
 CFILE_REC_FIELD(57,8,   "OWNER"   , ADI_LOCAL, NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_FIELD(65,46,"RES_NAME",ADI_LOCAL,(void *)TSS_fix_res_name)
                                          /*SAS2IBMA*/
 CFILE_REC_END(2008,"2008",CFILE_BREAK,"",(void *)TSS_extract_2008)

/*******************************************************
 *    ACCESS                                           *
 *******************************************************/

 CFILE_REC_START(2011)
 CFILE_REC_FIELD(33, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(41, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(49, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(57, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(65, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(73, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(81, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(89, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(97, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(105,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(113,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(121,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(129,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(137,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(145,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(153,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(161,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(169,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(177,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(185,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(193,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(201,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(209,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(217,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(225,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(233,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(241,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(249,8,  "ACCESS"  , ADI_REGLR, NULL )
                                          /*SAS2IBMA*/
 CFILE_REC_END(2011,"2011",CFILE_SKIP,"",(void *) NULL )

 CFILE_REC_START(2021)             /* ACCESS      */
                                          /*SAS2IBMA*/
 CFILE_REC_END(2021,"2021",CFILE_ACCEPT,"",(void *) TSS_extract_2021)

/*******************************************************
 *    DAYS,TIME                                        *
 *******************************************************/

 CFILE_REC_START(2012)
 CFILE_REC_FIELD(33,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(36,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(39,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(42,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(45,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(48,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(51,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(54,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(57,5,"TIMES",ADI_REGLR, NULL )
 CFILE_REC_END  (2012,"2012",CFILE_ACCEPT,"", NULL)

/*******************************************************
 *    LIBRARY                                          *
 *******************************************************/

 CFILE_REC_START(2013)
 CFILE_REC_FIELD(33, 46,"LIBRARY", ADI_REGLR,  NULL)
 CFILE_REC_END  (2013,"2013", CFILE_ACCEPT,"", NULL)

/*******************************************************
 *    PRIVPGM                                          *
 *******************************************************/

 CFILE_REC_START(2014)
 CFILE_REC_FIELD(33,8,"PRIVPGM.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(41,1,"PRIVPGM.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(42,8,"PRIVPGM.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(50,1,"PRIVPGM.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(51,8,"PRIVPGM.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(59,1,"PRIVPGM.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(60,8,"PRIVPGM.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(68,1,"PRIVPGM.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(69,8,"PRIVPGM.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(77,1,"PRIVPGM.FLAG", ADI_MEM,  NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_END(2014,"2014",CFILE_ACCEPT,"",(void *)TSS_extract_2014)

/*******************************************************
 *    FACILITY                                         *
 *******************************************************/

 CFILE_REC_START(2015)
 CFILE_REC_FIELD(33, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(41, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(49, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(57, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(65, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(73, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(81, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(89, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(97, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(105,8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_END  (2015,"2015", CFILE_ACCEPT,"", NULL)

/*******************************************************
 *    ACTION                                           *
 *******************************************************/

 CFILE_REC_START(2016)
 CFILE_REC_FIELD(33,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(41,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(49,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(57,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(65,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(73,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(81,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(89,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(97,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_END  (2016,"2016",CFILE_ACCEPT,"", NULL)

/*******************************************************
 *    VMUSER                                           *
 *******************************************************/

 CFILE_REC_START(2017)
 CFILE_REC_FIELD(33,8,"VMUSER.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(41,1,"VMUSER.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(42,8,"VMUSER.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(50,1,"VMUSER.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(51,8,"VMUSER.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(59,1,"VMUSER.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(60,8,"VMUSER.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(68,1,"VMUSER.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(69,8,"VMUSER.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(77,1,"VMUSER.FLAG", ADI_MEM,  NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_END(2017,"2017",CFILE_ACCEPT,"",(void *) TSS_extract_2017)

 /*******************************************************
  *    ACIDS                                            *
  *******************************************************/

 CFILE_REC_START(2800)                                /*bs2454*/
 CFILE_REC_END  (2800,"2800", CFILE_SKIP,  "", NULL ) /*bs2454*/
                                                      /*bs2454*/
 CFILE_REC_START(2801)                                /*bs2454*/
 CFILE_REC_END  (2801,"2801", CFILE_SKIP,  "", NULL ) /*bs2454*/

/*******************************************************
 *    ACCESS                                           *
 *******************************************************/
 CFILE_REC_START(2921)
 CFILE_REC_FIELD(2 , 8,  "ACCESS"  , ADI_MEM,   NULL )
 CFILE_REC_END  (2921,"2921", CFILE_SKIP,
                      "2901,2902,2903,2904,2905,2906,2907,3400",
                      NULL)

/*******************************************************
 *    Err messages                                     *
 *******************************************************/
 CFILE_REC_START(4011)
                                          /*SAS2IBMA*/
 CFILE_REC_END(4011,"4011",CFILE_ACCEPT,"",(void *) TSS_extract_4011r)

 static TSSCFILE_REC_typ  *tsscf_acl[] = {
        &rec_0001,
        &rec_1900,
        &rec_1950,
        &rec_2007,
        &rec_2008,
        &rec_2011,
        &rec_2012,
        &rec_2013,
        &rec_2014,
        &rec_2015,
        &rec_2016,
        &rec_2017,
        &rec_2021,
        &rec_2801,            /*bs2454*/
        &rec_2921,
        &rec_4011,
        NULL };

/*******************************************************
 *    TSS LIST COMMAND   5.1      PS0388               *
 *******************************************************/

 CFILE_REC_START(0000_51)                                 /* BS10099 */
 CFILE_REC_END  (0000_51,"0000", CFILE_SKIP,  "", NULL )  /* BS10099 */

 CFILE_REC_START(0001_51)
 CFILE_REC_FIELD(33, 256, CFILE_REC_0001, ADI_LOCAL, NULL )
 CFILE_REC_END  (0001_51, "0001", CFILE_BREAK, "", NULL)

 CFILE_REC_START(1900_51)             /* WHOOWNS     */
 CFILE_REC_END  (1900_51, "1900", CFILE_SKIP, "", NULL)
 CFILE_REC_START(1950_51)             /* WHOHAS      */
 CFILE_REC_END  (1950_51, "1950", CFILE_SKIP, "", NULL)
 CFILE_REC_START(1975_51)             /* WHOHAS FACILITY */
 CFILE_REC_END  (1975_51, "1975", CFILE_SKIP, "", NULL)

 CFILE_REC_START(2007_51)             /* WHOHAS XAUTH*/
 CFILE_REC_FIELD(33,8,   "RES_TYPE", ADI_LOCAL, NULL)
 CFILE_REC_FIELD(41,8,   "ACID",     ADI_LOCAL, NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_FIELD(49,8,"EXPIRES",ADI_REGLR,(void *) TSS_convert_date)
 CFILE_REC_FIELD(57,8,   "OWNER"   , ADI_LOCAL, NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_FIELD(65,46,"RES_NAME",ADI_LOCAL,(void *) TSS_fix_res_name)
                                          /*SAS2IBMA*/
 CFILE_REC_END(2007_51,"2007",CFILE_BREAK,"",(void *) TSS_extract_2007)

 CFILE_REC_START(2008_51)             /* WHOHAS ADMIN*/
 CFILE_REC_FIELD(33,8,   "RES_TYPE", ADI_LOCAL, NULL)
 CFILE_REC_FIELD(41,8,   "ACID",     ADI_LOCAL, NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_FIELD(49,8,"EXPIRES",ADI_REGLR,(void *) TSS_convert_date)
 CFILE_REC_FIELD(57,8,   "OWNER"   , ADI_LOCAL, NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_FIELD(65,46,"RES_NAME",ADI_LOCAL,(void *) TSS_fix_res_name)
                                          /*SAS2IBMA*/
 CFILE_REC_END(2008_51,"2008",CFILE_BREAK,"",(void *) TSS_extract_2008)

/*******************************************************
 *    ACCESS                                           *
 *******************************************************/

 CFILE_REC_START(2011_51)
 CFILE_REC_FIELD(33, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(41, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(49, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(57, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(65, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(73, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(81, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(89, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(97, 8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(105,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(113,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(121,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(129,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(137,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(145,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(153,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(161,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(169,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(177,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(185,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(193,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(201,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(209,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(217,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(225,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(233,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(241,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_FIELD(249,8,  "ACCESS"  , ADI_REGLR, NULL )
 CFILE_REC_END  (2011_51,"2011",  CFILE_SKIP, "", NULL )

 CFILE_REC_START(2021_51)             /* ACCESS      */
                                          /*SAS2IBMA*/
 CFILE_REC_END(2021_51,"2021",CFILE_ACCEPT,"",(void *) TSS_extract_2021)

/*******************************************************
 *    DAYS,TIME                                        *
 *******************************************************/

 CFILE_REC_START(2012_51)
 CFILE_REC_FIELD(33,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(36,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(39,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(42,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(45,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(48,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(51,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(54,3,"DAYS", ADI_REGLR, NULL )
 CFILE_REC_FIELD(57,5,"TIMES",ADI_REGLR, NULL )
 CFILE_REC_END  (2012_51,"2012",CFILE_ACCEPT,"", NULL)

/*******************************************************
 *    LIBRARY                                          *
 *******************************************************/

 CFILE_REC_START(2013_51)
 CFILE_REC_FIELD(33, 46,"LIBRARY", ADI_REGLR,  NULL)
 CFILE_REC_END  (2013_51,"2013", CFILE_ACCEPT,"", NULL)

/*******************************************************
 *    PRIVPGM                                          *
 *******************************************************/

 CFILE_REC_START(2014_51)
 CFILE_REC_FIELD(33,8,"PRIVPGM.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(41,1,"PRIVPGM.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(42,8,"PRIVPGM.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(50,1,"PRIVPGM.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(51,8,"PRIVPGM.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(59,1,"PRIVPGM.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(60,8,"PRIVPGM.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(68,1,"PRIVPGM.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(69,8,"PRIVPGM.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(77,1,"PRIVPGM.FLAG", ADI_MEM,  NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_END(2014_51,"2014",CFILE_ACCEPT,"",(void *) TSS_extract_2014)

/*******************************************************
 *    FACILITY                                         *
 *******************************************************/

 CFILE_REC_START(2015_51)
 CFILE_REC_FIELD(33, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(41, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(49, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(57, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(65, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(73, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(81, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(89, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(97, 8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_FIELD(105,8, "FACILITY" ,ADI_REGLR, NULL)
 CFILE_REC_END  (2015_51,"2015", CFILE_ACCEPT,"", NULL)

/*******************************************************
 *    ACTION                                           *
 *******************************************************/

 CFILE_REC_START(2016_51)
 CFILE_REC_FIELD(33,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(41,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(49,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(57,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(65,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(73,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(81,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(89,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_FIELD(97,8,"ACTION"     ,ADI_REGLR, NULL )
 CFILE_REC_END  (2016_51,"2016",CFILE_ACCEPT,"", NULL)

/*******************************************************
 *    VMUSER                                           *
 *******************************************************/

 CFILE_REC_START(2017_51)
 CFILE_REC_FIELD(33,8,"VMUSER.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(41,1,"VMUSER.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(42,8,"VMUSER.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(50,1,"VMUSER.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(51,8,"VMUSER.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(59,1,"VMUSER.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(60,8,"VMUSER.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(68,1,"VMUSER.FLAG", ADI_MEM,  NULL)
 CFILE_REC_FIELD(69,8,"VMUSER.NAME", ADI_MEM,  NULL)
 CFILE_REC_FIELD(77,1,"VMUSER.FLAG", ADI_MEM,  NULL)
                                          /*SAS2IBMA*/
 CFILE_REC_END(2017_51,"2017",CFILE_ACCEPT,"",(void *) TSS_extract_2017)

 CFILE_REC_START(2022_51)                                 /* BS10099 */
 CFILE_REC_END  (2022_51,"2022", CFILE_SKIP,  "", NULL )  /* BS10099 */

/*BS2557-start*/
/*******************************************************
 *    APPLDATA    (SYSTEMVIEW)                         *
 *******************************************************/
 CFILE_REC_START(2027_51)
 CFILE_REC_FIELD(33,  8,"APPLDATA", ADI_REGLR, NULL)
 CFILE_REC_END  (2027_51,"2027", CFILE_ACCEPT,"", NULL)

/*******************************************************
 *    SCRIPTIN    (SYSTEMVIEW)                         *
 *******************************************************/
 CFILE_REC_START(2028_51)
 CFILE_REC_FIELD(33,  8,"SCRIPTNAME", ADI_REGLR, NULL)
 CFILE_REC_END  (2028_51,"2028", CFILE_ACCEPT,"", NULL)

/*******************************************************
 *    SCRIPTIP    (SYSTEMVIEW)                         *
 *******************************************************/
 CFILE_REC_START(2029_51)
 CFILE_REC_FIELD(33,  8,"SCRIPTPARM", ADI_REGLR, NULL)
 CFILE_REC_END  (2029_51,"2029", CFILE_ACCEPT,"", NULL)
 /*BS2557-end*/
 /*******************************************************
  *    ACIDS                                            *
  *******************************************************/

 CFILE_REC_START(2800_51)                                /*bs2454*/
 CFILE_REC_END  (2800_51,"2800", CFILE_SKIP,  "", NULL ) /*bs2454*/
                                                         /*bs2454*/
 CFILE_REC_START(2801_51)                                /*bs2454*/
 CFILE_REC_END  (2801_51,"2801", CFILE_SKIP,  "", NULL ) /*bs2454*/

/*******************************************************
 *    ACCESS                                           *
 *******************************************************/
 CFILE_REC_START(2921_51)
 CFILE_REC_FIELD(2 , 8,  "ACCESS"  , ADI_MEM,   NULL )
 CFILE_REC_END  (2921_51,"2921", CFILE_SKIP,
                      "2901,2902,2903,2904,2905,2906,2907,3400",
                      NULL)

/*******************************************************
 *    Err messages                                     *
 *******************************************************/
 CFILE_REC_START(4011_51)
                                          /*SAS2IBMA*/
 CFILE_REC_END(4011_51,"4011",CFILE_ACCEPT,"",(void *)TSS_extract_4011r)

 static TSSCFILE_REC_typ  *tsscf_acl_51[] = {
        &rec_0000_51,                                     /* BS10099 */
        &rec_0001_51,
        &rec_1900_51,
        &rec_1950_51,
        &rec_1975_51,
        &rec_2007_51,
        &rec_2008_51,
        &rec_2011_51,
        &rec_2012_51,
        &rec_2013_51,
        &rec_2014_51,
        &rec_2015_51,
        &rec_2016_51,
        &rec_2017_51,
        &rec_2021_51,
        &rec_2022_51,                                     /* BS10099 */
        &rec_2027_51, /*bs2557*/
        &rec_2028_51, /*bs2557*/
        &rec_2029_51, /*bs2557*/
        &rec_2801_51,                    /*bs2454*/
        &rec_2921_51,
        &rec_4011_51,
        NULL };
#endif  /*  INCLUDE_ACL_LINES_DESCRIPTION  */

#if defined(INCLUDE_ACL_RTT_TABLE)

static TSS_RTT_rec_typ acl_rtt[] = {
 {"EXPIRES",       "UNTIL",          TYPE_1A, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rdate },
 {"ACCESS",        "ACCESS",         TYPE_1B, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rsimple_lst },
 {"DAYS",          "DAYS",           TYPE_1B, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rsimple_lst },
 {"TIMES",         "TIMES",          TYPE_1A, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rsimple_key },
 {"LIBRARY",       "LIBRARY",        TYPE_1A, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rsimple_key },
 {"PRIVPGM",       "PRIVPGM",        TYPE_1B, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rsimple_lst },
 {"FACILITY",      "FACILITY",       TYPE_1B, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rsimple_lst },
 {"ACTION",        "ACTION",         TYPE_1B, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rsimple_lst },
 {"VMUSER",        "VMUSER",         TYPE_1B, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rsimple_lst },
 /* WS2321 */
 {"APPLDATA",      "APPLDATA",       TYPE_1A, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rsimple_key },
 {"SCRIPTNAME",    "SCRIPTNAME",     TYPE_1A, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rsimple_key },
 {"SCRIPTPARM",    "SCRIPTPARM",     TYPE_1A, RTT_KEY, RTT_REPLACE,
                                     NULL,    TSS_set_rsimple_key },

 {NULL, NULL ,0 , 0 , 0, NULL }
 };

static short acl_rtt_num_items =
              (sizeof(acl_rtt)/sizeof(TSS_RTT_rec_typ)) + 1;

#endif  /*  INCLUDE_ACL_RTT_TABLE          */
#endif  /* TSS_RES_H_included */
