/**************************************************************
*                                                             *
*  <!><!> ATTENTION <!><!>                                    *
*  =-=-=-=-=-=-=-=-=-=-=-=                                    *
*                                                             *
*  When updating this member, do not forget to update         *
*  CTSOMVS in ALL.CMAC as well.                               *
*                                                             *
*                                                             *
**************************************************************/
 /**************************************************************
 *                                                             *
 * Title            : OS functions for MVS                     *
 *                                                             *
 * File Name        : ctscmvs.h                                *
 *                                                             *
 * Author           : Alexander Shvartsman                     *
 *                                                             *
 * Creation Date    : 20/07/94                                 *
 *                                                             *
 * Description      :                                          *
 *                                                             *
 * Assumptions and                                             *
 *   Considerations :                                          *
 *                                                             *
 **************************************************************/

 /**************************************************************
 * Mod.Id   Who      When     Description                      *
 * -------- -------- -------  -------------------------------- *
 * PS0107   AS       25/06/97 Added set_intercept func ptr     *
 * PS0311   Alex     16/09/98 List fields handling             *
 *                            (See BS2363 for V210)            *
 * WS0363   Alex     11/26/00 "SEND RSSPARM TO SCRIPT" SUPPORT *
 * IS0216   AvnerL   16/01/04 Add OS_LocalTime empty function. *
 * WS10054  SeligT   04/08/16 Add ENQ/DEQ SYSTEMS RNL Parameter*
 * sasc     NuritY   24/08/16 Adapt to CC changes.             *
 * BS10076  SeligT   11/12/17 Organize Connector Locking       *
 *                            Functions and Structures         *
 * IS10174  NuritY   31/12/17  Dynamic EXECOUT support.        *
 **************************************************************/

 #ifndef OS_MVS_included
 #define OS_MVS_included

 /* sasc - not needed anymore because it is defined in GLOBS
 #ifdef EXT
 #undef EXT
 #endif
 #ifndef OS_MVS_owner
 #define EXT extern
 #else
 #define EXT
 #endif
 */

 #define OS_MVS_checksum               cmvs010
 #define OS_MVS_ddinfo                 cmvs011
 #define OS_MVS_whoami                 cmvs012
 #define OS_MVS_check_apf              cmvs013
 #define OS_MVS_init                   cmvs014
 #define OS_MVS_chkid                  cmvs015
 #define OS_MVS_btrace                 cmvs016
 #define OS_MVS_ddinfo_do              cmvs017             /* IS10174 */
 #define OS_LocalTime                  CSEF915 /* like in CC ! IS0216*/

 #include ESA_API
 #include ESA_CTSAMSG
 #include ESA_CS_OS

 /*
  *     Structure for passing parameters from 'c' programm to
  *     user REXX program
  */

 #define SCR_EYECATCHER                    "SCR "
 #define MAX_SCRIPT_NOTIFY_DEFAULT         100    /* PS0107 */
 #define MAX_SCRIPT_NOTIFY_KEYWORD         "MAX_SCRIPT_NOTIFY"

 typedef struct s_os_header {
      char                       eyecatcher[4];/* eyecatcher 'SCR'*/
      char                      *rss_name ;    /* ptr to rss_name */
      char                      *rss_type ;    /* ptr to rss_type */
      int                        func_id  ;    /* API func_id     */
      SCRIPT_ACTION_typ          action   ;    /* script action   */
      ADDINFO_rec_typ           *entity_info;
      ADDINFO_rec_typ           *addinfo;
      ADDINFO_rec_typ           *cur_addinfo;
      ADDINFO_rec_typ           *RssPrmInfo;              /* WS0363 */
      RSSKWD_TYP_FUNC_PTR        get_rsskwd_typ;
      INTERCEPT_SET_FUNC_PTR     intercept_set_func;      /* PS0107 */
      int                        num_intercept_rec_alloc; /* PS0107 */
      int                        num_intercept_rec;       /* PS0107 */
      INTERCEPT_rec_typ        * intercept_rec;           /* PS0107 */
      CTSAMSG_HANDLE_rec_ptr     msgs;
      CTSAMSG_DEST_TABLE_rec_ptr dest;
      ESA_RC                     rc_script;
      int                        debug_level ;
      RSSPRM_GET_OPT_FUNC_PTR    rssprm_get_opt;          /* PS0311 */
      ADMIN_PARAMS_rec_typ     * admin_params;            /* PS0311 */
 } OS_HEADER_typ, *OS_HEADER_ptr ;

 /*
  *     Lock/Unlock service structure
  */

 #define LOCK_EYECATCHER         "LOCK"
 typedef struct s_lock_header {
      char             eyecatcher[4];       /*  eyecatcher 'LOCK'     */
      RESOURCE_typ     res_name ;           /*  res_name (dd or dsn)  */
      char             q_name[10];          /*  q_name for ENQ/DEQ srv*/
      char             rnl[2];              /*  rnl for enq/deq service
                                                              WS10054 */
      int              total_wait_lock;     /*  copy of ACF2_LOCK     */
                                            /*  or WAIT_LOCK  BS10076 */
                                            /*  or WAIT_QUEUE BS10076 */
      int              interval_wait_lock;  /*  copy of               */
                                            /*  ACF2_LOCK_INTERVAL or */
                                            /*  WAIT_LOCK_INTERVAL or */
                                            /*  WAIT_QUEUE_INTERVAL   */
                                            /*                BS10076 */
      int              resource_scope;      /*  kind of lock service  */
      int              enq_done;            /*  0 - not, 1 - done     */
      char             res_ddname[10];      /*  original  ddname      */
      int              reserve_flag;        /*  reserve required dd   */
 } OS_LOCK_HEADER_typ, *OS_LOCK_HEADER_ptr ;

/****************************************************
* Procedure Name: check_sum
* Description   : Calculate sum symbol according current
*                 header ptr in char form
* Input         : 1.ptr to header ptr
* Output        : 1.sum symbol
* Return Value  : ESA_OK, ESA_ERR
* Side Effects  :
* Scope         :
***************************************************/

EXT ESA_RC OS_MVS_checksum(char *header_ptr, int *c_symb);

/**************************************************************
*                                                             *
* Subroutine name : OS_MVS_ddinfo                             *
*                                                             *
* DESCRIPTION     : Obtain data set name corresp ddname       *
*                                                             *
* INPUT           : ddn           - ddname                    *
*                   issue_err_msg - 1 - YES, 0 - NO           *
*                   parm_num      - Number of requested       *IS10174
*                                   attributes.               *IS10174
*                   ...             Attributes list. For each *IS10174
*                                   Attribute 3 prameters     *IS10174
*                                   are needed:               *IS10174
*                          (I)      - parm name, padded with  *IS10174
*                                     blanks (char[8])        *
*                          (O)      - area for value (char *) *IS10174
*                          (O)      - parm rc (int *)         *IS10174
*                                                             *
* OUTPUT          : file_name     - dsname[(member)]          *
*                   ...           - parm value and rc for     *IS10174
*                                   each requested parm.      *IS10174
*                                                             *
* RETURN VALUE    : ESA_OK,  ESA_FATAL                        *
*                                                             *
**************************************************************/
EXT ESA_RC OS_MVS_ddinfo (char                        * ddn,
                          char                        * file_name,
                          int                           issue_err_msg,
                          CTSAMSG_DEST_TABLE_rec_typ  * dest,
                          CTSAMSG_HANDLE_rec_typ      * msgs,
        /* IS10174 */     int                           parm_num,
        /* IS10174 */     ... );

/* IS10174 - start */
/**************************************************************
*                                                             *
* Subroutine name : OS_MVS_ddinfo_do                          *
*                                                             *
* DESCRIPTION     : Obtain data set name corresp ddname       *
*                                                             *
* INPUT           : ddn           - ddname                    *
*                   issue_err_msg - 1 - YES, 0 - NO           *
*                   parm_num      - Number of requested       *IS10174
*                                   attributes.               *IS10174
*                   arg_list        Attributes list. For each *IS10174
*                                   Attribute 3 prameters     *IS10174
*                                   are needed:               *IS10174
*                          (I)      - parm name, padded with  *IS10174
*                                     blanks (char[8])        *
*                          (O)      - area for value (char *) *IS10174
*                          (O)      - parm rc (int *)         *IS10174
*                                                             *
* OUTPUT          : file_name     - dsname[(member)]          *
*                   arg_list      - parm value and rc for     *IS10174
*                                   each requested parm.      *IS10174
*                                                             *
* RETURN VALUE    : ESA_OK,  ESA_FATAL                        *
*                                                             *
**************************************************************/
EXT ESA_RC OS_MVS_ddinfo_do (char                       * ddn,
                             char                       * file_name,
                             int                          issue_err_msg,
                             CTSAMSG_DEST_TABLE_rec_typ * dest,
                             CTSAMSG_HANDLE_rec_typ     * msgs,
                             int                          parm_num,
                             va_list                      arg_list);

/* IS10174 - end */

/**************************************************************
*                                                             *
* Subroutine name : OS_MVS_whoami                             *
*                                                             *
* DESCRIPTION     : Obtain address space information          *
*                                                             *
* INPUT           : none                                      *
*                                                             *
* OUTPUT          : jobname                                   *
*                   jobid                                     *
*                   userid                                    *
*                   sysid                                     *
*                                                             *
* RETURN VALUE    : None                                      *
*                                                             *
**************************************************************/
EXT void OS_MVS_whoami (char * jobname, char * jobid,
                        char * userid, char * sysid, void ** acee);

/**************************************************************
*                                                             *
* Subroutine name : OS_MVS_check_apf                          *
*                                                             *
* DESCRIPTION     : Check if address space is apf authorized  *
*                                                             *
* INPUT           : none                                      *
*                                                             *
* OUTPUT          : None                                      *
*                                                             *
* RETURN VALUE    : ESA_OK - authorized                       *
*                   ESA_ERR- not authorized                   *
*                                                             *
**************************************************************/

EXT ESA_RC OS_MVS_check_apf ( CTSAMSG_HANDLE_rec_typ      * msgs,
                              CTSAMSG_DEST_TABLE_rec_typ  * dest );

/****************************************************
 * Procedure Name: OS_MVS_init
 * Description   : Perform OS-related initialization steps
 *                 upon process initialization.
 * Input         : Main_type - the main process type.
 * Output        :
 * Input/Output  : handle.
 * Return Value  : ESA_FATAL if failed.
 * Side Effects  :
 * Comments      :
 ***************************************************/

EXT ESA_RC OS_MVS_init (void              ** handle);

/****************************************************
 * Procedure Name: OS_MVS_chkid
 * Description   : Perform OS-related check steps
 *                 due to running process
 * Input         : handle
 * Output        :
 * Input/Output  : none
 * Return Value  : ESA_OK    - started task process
 *                 ESA_ERR   - other process
 *                 ESA_FATAL - any other cases
 * Side Effects  :
 * Comments      :
 ***************************************************/

EXT ESA_RC OS_MVS_chkid(void     * os_proc_handle);

/****************************************************
 * Procedure Name: OS_MVS_btrace
 * Description   : Perform OS-related back trace printing
 *                 due to running process
 * Input         : handle
 * Output        :
 * Input/Output  : none
 * Return Value  : ESA_OK    - started task process
 *                 ESA_ERR   - other process
 *                 ESA_FATAL - any other cases
 * Side Effects  :
 * Comments      :
 ***************************************************/

 EXT void  OS_MVS_btrace(void );

/********************************************* IS0216 ********
 * Procedure Name: OS_LocalTime
 * Description   : Provide local time including milliseconds
 *                 Currently not implemented.
 * Input         :
 * Output        :
 *
 * Return Value  : ESA_NOT_SUPP
 * Notes         : DIAGs not allowed !!
 *************************************************************/
ESA_RC OS_LocalTime  (unsigned short * Year,
                      unsigned short * Month,
                      unsigned short * Day,
                      unsigned short * Hour,
                      unsigned short * Minute,
                      unsigned short * Second,
                      unsigned short * Milliseconds);

#endif
