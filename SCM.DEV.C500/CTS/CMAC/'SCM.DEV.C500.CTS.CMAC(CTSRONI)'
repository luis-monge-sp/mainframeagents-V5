/**************************************************************
*                                                             *
* Title            : Dynamic exits online interceptor support *
*                                                             *
* File Name        : ctsroni.h                                *
*                                                             *
* Author           : Doron Cohen                              *
*                                                             *
* Creation Date    : 19/10/94                                 *
*                                                             *
* Description      :                                          *
*                                                             *
* Assumptions and                                             *
*   Considerations :                                          *
*                                                             *
**************************************************************/

/**************************************************************
* Mod.Id   Who      When     Description                      *
* -------- -------- -------- -------------------------------- *
* sasc     NuritY   24/08/16 Adapt to CC changes.             *
**************************************************************/

#ifndef DYNMONLI_H_included
#define DYNMONLI_H_included

 /* sasc - not needed anymore because it is defined in GLOBS
#ifdef EXT
#undef EXT
#endif
#ifndef RACFONI_owner
#define EXT extern
#else
#define EXT
#endif
*/

#define ONLI_exits_on                  roni010
#define ONLI_exits_off                 roni011
#define ONLI_exits_snap                roni012

/****************************************************
* Procedure Name: ONLI_exits_on
*
* Description   : handle RACF dynamic exit installation
*
* Input         : rss_name
*                 rss_type
*                 subsystem name
*                 jobname
*                 CTSAMSG parameters
*
* Output        : None
*
* Return Value  : ESA_OK     upon success
*                 ESA_FATAL  on any fail situation
* Comments      :
* Scope         :
****************************************************/

EXT ESA_RC ONLI_exits_on (RSS_typ                  rss_name,
                          RSS_typ                  rss_type,
                          char                   * ssname,
                          char                   * jobname,
                          CTSAMSG_PARAMS_rec_typ * msg_params);

/****************************************************
* Procedure Name: ONLI_exits_off
*
* Description   : handle RACF dynamic exit removal
*
* Input         : rss_name
*                 rss_type
*                 subsystem name
*                 jobname
*                 CTSAMSG parameters
*
* Output        : None
*
* Return Value  : ESA_OK     upon success
*                 ESA_FATAL  on any fail situation
* Comments      :
* Scope         :
****************************************************/

EXT ESA_RC ONLI_exits_off (RSS_typ                  rss_name,
                           RSS_typ                  rss_type,
                           char                   * ssname,
                           char                   * jobname,
                           CTSAMSG_PARAMS_rec_typ * msg_params);

/****************************************************
* Procedure Name: ONLI_exits_snap
*
* Description   : Snap all dynamic interceptions tables
*
* Input         : rssname
*                 rsstype
*                 ssname
*                 jobname
*                 CTSAMSG parameters
*
* Output        : None
*
* Return Value  : None
*
* Comments      :
* Scope         :
****************************************************/

EXT void ONLI_exits_snap (RSS_typ                  rss_name,
                          RSS_typ                  rss_type,
                          char                   * ssname,
                          char                   * jobname,
                          CTSAMSG_PARAMS_rec_typ * msg_params );

#endif  /* DYNMONLI_H_included */
