/**************************************************************
*                                                             *
*  <!><!> ATTENTION <!><!>                                    *
*  =-=-=-=-=-=-=-=-=-=-=-=                                    *
*                                                             *
*  When updating this member, do not forget to update         *
*  CTSORSS in ALL.CMAC as well.                               *
*                                                             *
*                                                             *
**************************************************************/
 /**************************************************************
 *                                                             *
 * Title            : CTSCRSS functions for MVS API            *
 *                                                             *
 * File Name        : ctscrss.h                                *
 *                                                             *
 * Author           : Alexander Shvartsman                     *
 *                                                             *
 * Creation Date    : 17/06/97                                 *
 *                                                             *
 * Description      :                                          *
 *                                                             *
 * Assumptions and                                             *
 *   Considerations :                                          *
 *                                                             *
 **************************************************************/

 /**************************************************************
 * Mod.Id   Who      When     Description                      *
 * -------- -------- -------  -------------------------------- *
 * sasc     NuritY   24/08/16 Adapt to CC changes.             *
 * IS10174  NuritY   25/12/17 Admins list support (for dynamic *
 *                            EXECOUT)                         *
 * WS10074  NuritY   07/10/18 Login to userid for change pwd   *
 * BS10100  NuritY  10/04/2019   Handle security violation.    *
 * IS10184  NuritY  02/09/2021 Improve scripts performance.    *
 *                                                             *
 **************************************************************/

 #ifndef CTSCRSS_MVS_included
 #define CTSCRSS_MVS_included

 /* sasc - not needed anymore because it is defined in GLOBS
 #ifdef EXT
 #undef EXT
 #endif
 #ifndef CTSCRSS_MVS_owner
 #define EXT extern
 #else
 #define EXT
 #endif
 */

 #define CTSCRSS_set_authority      crss001
/* IS10174 - start */
 #define CTSCRSS_AdminsList_Handle  crss002
 #define CTSCRSS_Admin_GetEXECOUTDD crss003
 #define Common_params_Handle       crss004
/* IS10174 - end   */

/* AUTHORITY MODE */

typedef enum {
   SET_TO_STARTED_TASK_AUTH      = 1,
   RETURN_FROM_STARTED_TASK_AUTH = 2
}  AUTHORITY_MODE_typ;

/* IS10174 - start */
/********************************************/
/*  Admins List structures                  */
/*****2**************************************/

#define    RSS_ADMINS_ENT_NUM        10
#define    RSS_ADMINS_INACT_ENT      0xFFFFFFFF  /* in acee */

/* WS10074 - start */
/*
 *   Admin type values
 */
#define    ADMIN_TYPE_NONE    ' '    /* empty/inact entry.         */
#define    ADMIN_TYPE_ADMIN   'A'    /* Userid is Administrator    */
#define    ADMIN_TYPE_USER    'U'    /* Userid is end-user         */
#define    ADMIN_TYPE_STC     'S'    /* Userid is the started task */
/* WS10074 - end   */


/* BS10100 - start */
/*
 *   Allowed Admin values.
 */
#define    ALLOWED_ADMIN_NONE ' '    /* Unknown                    */
#define    ALLOWED_ADMIN_NO   'N'    /* Not Allowed.               */
#define    ALLOWED_ADMIN_YES  'Y'    /* Allowed                    */
/* BS10100 - end   */

typedef  struct  S_RSS_ADMINS_LIST_ENTRY {
    short             seq_num;                             /* WS10074 */
    USER_typ          uid;
    UG_typ            group;
    void            * acee;
/* WS10074   char              is_stc;                   * Y / N *    */
    char              type; /* See "Admin type values" above  WS10074 */
    char              allowed; /* See types above.            BS10100 */
    char              EXECOUT_ddname[9];
    char              EXECOUT_dynamic;         /* Y / N */
} RSS_ADMINS_LIST_ENTRY_rec_typ, * RSS_ADMINS_LIST_ENTRY_rec_ptr;

#define  ADMINS_LIST_EYEC    "ADMNLST"

typedef  struct  S_RSS_ADMINS_LIST {
   char                           eyec[8];    /* eye-catcher */
   short                          max_entries;
   short                          used_entries;
   char                           static_EXECOUT[9];
   char                           prefix_EXECOUT[6];
   int                            Next_EXECOUT_num; /*int req'd for itoa*/
   char                           execout_vio;           /* Y / N */
   short                          execout_lrecl;
   short                          execout_blksize;
   char                           execout_recfm[5];  /* F/V/U B S A/M */
   int                            execout_pspace;
   int                            execout_sspace;
   char                           execout_tspace;   /* C / T / B */
   int                            execout_avgblk;
   RSS_ADMINS_LIST_ENTRY_rec_typ  admin_entry[1];
} RSS_ADMINS_LIST_rec_typ, * RSS_ADMINS_LIST_rec_ptr;

/****************************************************
 * Procedure Name: Common_params_Handle
 *
 * Description   : Init / term the common_params area.
 *
 * parameters    : operation - INIT/TERM
 * parameters    : p_common_params -
 *                 - INIT - area in which commonm params
 *                          address will be returned.
 *                 - TERM - pointer to common params
 *                          address to be terminated.
 *                          Will be changed to 0.
 *
 * Return Value  : ESA_OK
 *               : ESA_FATAL
 *
 * Side Effects  :
 *
 ****************************************************/
ESA_RC  Common_params_Handle (char                   *  operation,
        /* IS10184 */         char                      owner_id,
                              COMMON_PARAMS_rec_typ **  p_common_params,
                              ADMIN_PARAMS_rec_typ   *  admin_params);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : CTSCRSS_AdminsList_Handle                  *
 *                                                             *
 * DESCRIPTION    : Handle the administrators list.            *
 *                                                             *
 * INPUT          : function     - INIT / TERM                 *
 *                                                             *
 *                : p_adminsList -                             *
 *                   INIT - pointer to area for Admins list    *
 *                          address.                           *
 *                   TERM - pointer to Admins list address.    *
 *                                                             *
 *                : Admin params                               *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC CTSCRSS_AdminsList_Handle ( char          * function,
                             RSS_ADMINS_LIST_rec_typ ** p_admins_list,
                             ESA_DIAG_COMP_typ          comp,
                             ADMIN_PARAMS_rec_typ     * admin_params);


 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : CTSCRSS_Admin_GetEXECOUTDD                 *
 *                                                             *
 * DESCRIPTION    : Get the ddname for the EXECOUT file for    *
 *                  the requested administrator.               *
 *                                                             *
 * INPUT          : Admin                                      *
 *                : component name for diags.                  *
 *                : Admin params                               *
 *                                                             *
 * OUTPUT         : ddname - for rc ESA_OK and ESA_SKIP        *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                  ESA_OK - EXECOUT for admin is returned,    *
 *                  ESA_SKIP - no admins list - sttaic         *
 *                             EXECOUT ddname is returned.     *
 *                  ESA_FATAL - Message is issued.             *
 *                                                             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC CTSCRSS_Admin_GetEXECOUTDD (USER_typ               admin,
                                   char                 * ddname,
                                   ESA_DIAG_COMP_typ      comp,
                                   ADMIN_PARAMS_rec_typ * admin_params);


/* IS10174 - end   */

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : CTSCRSS_set_authority                      *
 *                                                             *
 * DESCRIPTION    : Set started authority, and return back to  *
 *                  administrator aurhority                    *
 *                                                             *
 * INPUT          : logout_done - ptr to control var           *
 *                : mode        - authority set mode           *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC CTSCRSS_set_authority(int             * logout_done,
                          AUTHORITY_MODE_typ        mode,
                          ADMIN_PARAMS_rec_typ    * admin_params,
                          ERR_STRUCT_rec_typ      * err);

#endif  /* CTSCRSS_MVS_included  */
