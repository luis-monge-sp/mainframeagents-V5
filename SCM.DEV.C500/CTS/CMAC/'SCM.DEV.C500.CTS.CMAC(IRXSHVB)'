#pragma pack(packed)

struct shvblock {
  void          *shvnext; /* Chain pointer to next SHVBLOCK */
  int            shvuser; /* Used during "FETCH NEXT"       */
  struct {
    unsigned char  _shvcode;  /* Function code - indicates type */
    unsigned char  _shvret;   /* Return codes                   */
    short int      _filler1;  /* Reserved (should be 0)         */
    } shvcodes;
  int            shvbufl; /* Length of fetch value buffer   */
  void          *shvnama; /* Address of variable name       */
  int            shvnaml; /* Length of variable name        */
  void          *shvvala; /* Address of value buffer        */
  int            shvvall; /* Length of value buffer         */
  };

#define shvcode  shvcodes._shvcode
#define shvret   shvcodes._shvret

/* Values for field "shvvall" */
#define shvblen  0x20 /* Length of SHVBLOCK              */
#define shvfetch 'F'  /* Copy value of shared variable   */
#define shvstore 'S'  /* Set variable from given value   */
#define shvdropv 'D'  /* Drop variable                   */
#define shvsyfet 'f'  /* Symbolic name retrieve          */
#define shvsyset 's'  /* Symbolic name set               */
#define shvsydro 'd'  /* Symbolic name drop              */
#define shvnextv 'N'  /* Fetch "next" variable           */
#define shvpriv  'P'  /* Fetch private information       */
#define shvclean 0x00 /* Execution was OK                */
#define shvnewv  0x01 /* Variable did not exist          */
#define shvlvar  0x02 /* Last variable transferred ("N") */
#define shvtrunc 0x04 /* Truncation occurred for "Fetch" */
#define shvbadn  0x08 /* Invalid variable name           */
#define shvbadv  0x10 /* Invalid value specified         */
#define shvbadf  0x80 /* Invalid function code (SHVCODE) */
#define shvrcok  0    /* Entire Plist chain processed    */
#define shvrcinv -1   /* Invalid entry conditions        */
#define shvrcist -2   /* Insufficient storage available  */

#pragma pack(reset)
