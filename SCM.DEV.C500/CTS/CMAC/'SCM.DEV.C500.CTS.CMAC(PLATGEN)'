/****************************************************
 * Title          : Platform specific definitions
 * File Name      : plat3270.h
 * Author         : Guy Shavitt
 * Creation Date  : 24/11/1997
 * Description    : Platform Definitions
 *****************************************************/

/****************************************************
 * Mod.ID       Who     When    Description
 * ---------------------------------------------------
 * WS10082      AvnerL  06DEC22 Drop AIT support
 *
 ****************************************************/

/* WS10082 - This member is obsolete

#ifndef PLATFORM_AIT_H_INCLUDED
#define PLATFORM_AIT_H_INCLUDED

#include <stdio.h>
#include "esaapi.h"

/@*****************************************
 * constants
 *****************************************@/

/@ DEBUG levels @/
#define DEBUG_IMPORTANT              2
#define DEBUG_NORMAL                 10

/@ RSSPARM parameters @/
#define SCRIPT_SHELL                 "SCRIPT_SHELL"
#define SCRIPT_DIR_PARM              "SCRIPT_DIR_API"
#define SCRIPT_DELIMITERS_PARM       "SCRIPT_DELIMITERS"
#define SCRIPT_PARMS_PARM            "SCRIPT_PARMS"
#define SCRIPT_EXT_PARM              "SCRIPT_EXT"

/@ ::::::::: Ayelet - define script names here :::::::::::: @/

#define SN_ADDACE                   "addace"
#define SN_ADDGROUP                 "addgroup"
#define SN_ADDOE                    "addoe"
#define SN_ADDRES                   "addres"
#define SN_ADDU2UG                  "addu2ug"
#define SN_ADDUSER                  "adduser"
#define SN_APIINIT                  "apiinit"
#define SN_APILOAD                  "apiload"
#define SN_APITERM                  "apiterm"
#define SN_CHECKRSS                 "checkrss"
#define SN_DELACE                   "delace"
#define SN_DELGROUP                 "delgroup"
#define SN_DELOE                    "deloe"
#define SN_DELRES                   "delres"
#define SN_DELU2UG                  "delu2ug"
#define SN_DELUSER                  "deluser"
#define SN_GETACE                   "getace"
#define SN_GETGROUP                 "getgroup"
#define SN_GETRES                   "getres"
#define SN_GETRSS                   "getrss"
#define SN_GETU2UG                  "getu2ug"
#define SN_GETUSER                  "getuser"
#define SN_ISMATCH                  "ismatch"
#define SN_LOGIN                    "login"
#define SN_LOGOUT                   "logout"
#define SN_RESLIST                  "reslist"
#define SN_REVUSER                  "revuser"
#define SN_GETOE                    "getoe"
#define SN_OELIST                   "oelist"
#define SN_SETRSS                   "setrss"
#define SN_U2UGLIST                 "u2uglist"
#define SN_UGLIST                   "uglist"
#define SN_UPDACE                   "updace"
#define SN_UPDGROUP                 "updgroup"
#define SN_UPDOE                    "updoe"
#define SN_UPDPASS                  "updpass"
#define SN_UPDRES                   "updres"
#define SN_UPDU2UG                  "updu2ug"
#define SN_UPDUSER                  "upduser"
#define SN_USERLIST                 "userlist"

/@ ADDINFO limits @/
#define P3270_MAX_ADDINFO_KWD_LEN   40
#define P3270_MAX_ADDINFO_VAL_LEN 2048
#define P3270_ADDINFO              512


/@ Tailor these values to your specific needs @/
#define P3270_WAIT_UNIT        500    /@ script completion sync = 1/2 sec.@/
#define P3270_MAX_WAIT_TIME    240    /@ max script wait time   = 2   min.@/
#define P3270_WAIT_LOCK_SLEEP  250    /@ wait-script-lock sync  = 1/4 sec.@/

/@ Some general limit values @/
#define P3270_MAX_FILENAME_LEN      80
#define P3270_MAX_PATH_LEN          100
#define P3270_MAX_PARM_LEN          100

/@ Script files extension @/
#define P3270_SCRIPTS_FILETYPE      ".txt"
#ifdef WINNT
   #define quote_char "\""
#else
   #ifdef UNIX
      #define quote_char  "/"
   #endif
#endif

#define GET_OP_OK                   0
#define GET_OP_NOT_FOUND            2
#define GET_OP_EOF                  4
#define GET_OP_ERROR                8

/@ Valid TCL script completion codes @/
#define SCRIPT_RC_OK                0
#define SCRIPT_RC_WARN              4
#define SCRIPT_RC_FATAL             8
#define SCRIPT_RC_NOT_SUPPORTED     12

/@*****************************************
 * Unique file names
 *  ::: Added by Ayelet to keep a record
 *****************************************@/
/@  characters used for the first character of file name @/
#define file_name_1_add      'A'
#define file_name_1_update   'U'
#define file_name_1_get      'G'
#define file_name_1_delete   'D'
#define file_name_1_set      'S'
#define file_name_1_revoke   'V'
#define file_name_1_list     'L'
#define file_name_1_login    'I'
#define file_name_1_logoff   'O'
#define file_name_1_check    'C'
#define file_name_1_api      'P'          /@ API functions - init/load/term @/

/@  characters used for the second character of file name @/
#define file_name_2_input    'I'
#define file_name_2_output   'O'
#define file_name_2_done     'D'
#define file_name_2_msg      'M'

/@*****************************************
 * messages constants
 *****************************************@/

#define P3270_INVALID_RSSPARM               "CTS7301E"
#define P3270_SCRIPT_MSG     "CTS7302I"
#define P3270_SCRIPT_TIMEOUT                "CTS7303E"
#define P3270_MISSING_RSSPARM               "CTS7304E"
#define P3270_ERROR_OPEN_FILE               "CTS7305E"
#define P3270_ACTIVE_SCRIPT                 "CTS7306I"
#define P3270_ERROR_LOCK_SCRIPT             "CTS7307E"
#define P3270_EXECUTING_SCRIPT              "CTS7308I"
#define P3270_INVALID_PARM                  "CTS7309E"
#define P3270_KEYWORD_EXPECTED              "CTS7310E"
#define P3270_DELETE_FAILED                 "CTS7311W"
#define P3270_INVALID_DATA                  "CTS7312E"
#define P3270_RESOURCE_EXISTS               "CTS7313E"
#define P3270_RESOURCE_NOT_FOUND            "CTS7314E"
#define P3270_ACE_EXISTS                    "CTS7315E"
#define P3270_ACE_NOT_FOUND                 "CTS7316E"
#define P3270_MISSING_RSSTPARM              "CTS7317E"

/@*****************************************
*  Lockout values
*****************************************@/

#define P3270_LOCK_UNKNOWN                   0
#define P3270_LOCK_REQUIRED                  1
#define P3270_NOLOCK_REQUIRED                2

/@*****************************************
*   Names of semaphores for 3270 TCL locks
*****************************************@/

#define P3270_LOCK_ALL           "ALL_AIT"
#define P3270_LOCK_NAME          "%s_SCRIPT_LOCK"

/@********************************************************@/
/@ Lock all TCL run scripts = 3270_TCL_LOCK               @/
/@ Lock all specific 3270 rss type TCL run scripts =      @/
/@      xxx_TCL_LOCK where xxx = RSS type                 @/
/@ Lock all specific 3270 rss TCL run scripts =           @/
/@      yyy_TCL_LOCK where yyy = RSS name                 @/
/@********************************************************@/

/@*****************************************
 * typedefs
 *****************************************@/

typedef char Filename_typ[P3270_MAX_FILENAME_LEN+1];

typedef char Path_typ[P3270_MAX_PATH_LEN+1];

typedef char Parm_typ[P3270_MAX_PARM_LEN+1];
typedef enum {
 WRITE_ALL_INFO,
 WRITE_PARTIAL_INFO
} Write_User_Params_Mode;

typedef enum {
 WRITE_ALL_PARAMS,
 WRITE_ONLY_PARENTOE
} Write_Res_Params_Mode;

typedef enum {
 INIT_NOT_DONE,
 INIT_DONE_BY_OUR_PROCESS,
 INIT_DONE_BY_ANOTHER_PROCESS
} Init_Done_Type;

typedef enum {
 REGULAR_KEYWORD,
 SUBFIELD_KEYWORD
} Keyword_Record_Type;

typedef enum {
 ALL_CONNS,
 GROUPS_CONNS,
 USERS_CONNS
} Conns_List_Mode;

typedef enum {
 ALL_OES,
 SUBTREE_OES
} OEs_List_Mode;

typedef enum {
 ALL_UGS,
 SUBTREE_UGS
} UGs_List_Mode;

typedef enum {
 ALL_USERS,
 MASKED_USERS,
 SUBTREE_USERS
} Users_List_Mode;

typedef enum {
 GET_LIST_FIRST,
 GET_LIST_NEXT
} Get_List_Mode;

/@ Handle for GET_*** opeation @/
typedef struct {
  int             got_list;               /@ have we already got the list   @/
  Filename_typ    filename;               /@ entity list filename           @/
  fpos_t          file_pos;               /@ curr. file pos. in list        @/
  int             reached_end;            /@ have we reached end of list    @/
  OE_typ          oe;                     /@ OE of operation                @/
  Parm_typ        user_key;               /@ User defined key (GetResACL)   @/
} Get_Op_Handle_typ;
#ifdef UNIX
  typedef void   *HANDLE;
#endif

/@*****************************************
 * functions prototypes
 *****************************************@/


/@ ESA_RC P3270_Set_Global_Data (ADMIN_PARAMS_rec_typ *,
         ERR_STRUCT_rec_typ *);

void Set_RSS_Actual_Logout  (RSS_typ       rss_name,
        USER_typ      admin);

void P3270_Close_All_Sessions(ADMIN_PARAMS_rec_typ *);

void P3270_Close_RSS_Session (RSS_typ                rss_name,
         ADMIN_PARAMS_rec_typ * admin_params);

ESA_RC Check_Admin (RSS_typ,
        USER_typ,
        PASSWD_typ,
        ADMIN_PARAMS_rec_typ *);

ESA_RC Check_Rev_Status (char *,
       USER_STATUS_typ *,
       ADMIN_PARAMS_rec_typ *);

ESA_RC Check_User_Admin (char *,
       USER_ADMIN_typ *,
       ADMIN_PARAMS_rec_typ *);

ESA_RC Check_OE_Attr (char *,
       OE_ATTR_typ *,
       ADMIN_PARAMS_rec_typ *);

ESA_RC Check_U2UG_Attr (char *,
         U2UG_ATTR_typ *,
         ADMIN_PARAMS_rec_typ *);

ESA_RC Check_U2UG_Admin (char *,
          U2UG_ADMIN_typ *,
          ADMIN_PARAMS_rec_typ *);

int Get_User (USER_typ                curr_user,
     Get_Op_Handle_typ     * my_handle,
     USER_PARAMS_rec_ptr     user_params,
     ADDINFO_rec_ptr         addinfo,
     ADMIN_PARAMS_rec_typ  * admin_params);

int Get_UG (UG_typ                  curr_ug,
   Get_Op_Handle_typ     * my_handle,
   UG_PARAMS_rec_ptr       ug_params,
   ADDINFO_rec_ptr         addinfo,
   ADMIN_PARAMS_rec_typ  * admin_params);

int Get_OE (OE_typ                  curr_oe,
   Get_Op_Handle_typ     * my_handle,
   OE_PARAMS_rec_ptr       oe_params,
   ADDINFO_rec_ptr         addinfo,
   ADMIN_PARAMS_rec_typ  * admin_params);

int Get_Conn (USER_typ                curr_user,
     UG_typ                  curr_ug,
     Get_Op_Handle_typ     * my_handle,
     U2UG_PARAMS_rec_typ   * u2ug_params,
     ADDINFO_rec_ptr         addinfo,
     ADMIN_PARAMS_rec_typ  * admin_params);


ESA_RC AIT_Object_Sync (Filename_typ            obj_file,
      ADMIN_PARAMS_rec_typ   * admin_params);
@/
/@ ------------- scripts functions ------------------ @/
/@
ESA_RC Get_Scripts_Dir (Path_typ                scripts_dir,
      ADMIN_PARAMS_rec_typ  * admin_params);

ESA_RC P3270_Check_ScriptDir (char *,
         Path_typ,
         ADMIN_PARAMS_rec_typ *);

ESA_RC Build_Script_Name (Filename_typ          script_name,
           Path_typ              script_full_name,
           ADMIN_PARAMS_rec_typ  * admin_params);

ESA_RC P3270_Call_Script (Filename_typ,
        Filename_typ,
        Filename_typ,
        Filename_typ,
        Filename_typ,
        int *,
        ADMIN_PARAMS_rec_typ  *);
 @/
static ESA_RC P3270_Execute_Script (char                    unique_id,
        int                     num_in_parms,
        int         num_out_parms,
        Parm_typ                input_parms[],
        Parm_typ                output_parms[],
        Filename_typ            script,
        Filename_typ            filename,
              int                     write_login,
              int       * script_rc,
        ADMIN_PARAMS_rec_typ  * admin_params);

/@ ------------ param files functions -------------- @/
/@
void P3270_Generate_Filename (Filename_typ *,
         char[2]);

ESA_RC Get_Params_Dir (Path_typ                params_dir,
        ADMIN_PARAMS_rec_typ  * admin_params);
@/
static ESA_RC P3270_Write_File (Filename_typ           filename,
       int                    num_parms,
       Parm_typ               parms[],
          int                    write_login,
          ADMIN_PARAMS_rec_typ * admin_params);

static ESA_RC P3270_Read_File (Filename_typ,
      int,
      Parm_typ[],
      ADMIN_PARAMS_rec_typ *);
/@
ESA_RC P3270_Delete_File (Filename_typ,
        ADMIN_PARAMS_rec_typ *);

int P3270_File_Exists (Filename_typ,
        ADMIN_PARAMS_rec_typ *);
 @/
static FILE * P3270_Open_Read_File (Filename_typ,
        ADMIN_PARAMS_rec_typ *);
/@
FILE * P3270_Open_Write_File (Filename_typ,
         ADMIN_PARAMS_rec_typ *);

char * Trim (char *);

int All_Blanks (char *);
 @/
static void Build_Parm (char                  * keyword,
     char                  * value,
     char                  * string,
    ADMIN_PARAMS_rec_typ   * admin_params);
 /@
ESA_RC Strip_Value (char **,
     char *,
     ADMIN_PARAMS_rec_typ *);
@/
static ESA_RC Get_Keyword_Value (char                  * string,
           char                  * keyword,
        char                  * value,
           ADMIN_PARAMS_rec_typ  * admin_params);

/@ESA_RC P3270_Read_Keyword_Value (FILE               * curr_file,
                                char                   * keyword,
                                char                   * value,
                                ADMIN_PARAMS_rec_typ   * admin_params);

@/
static ESA_RC P3270_Get_Addinfo (FILE                   * curr_file,
        ADDINFO_rec_ptr          addinfo,
        ADMIN_PARAMS_rec_typ   * admin_params);
/@
ESA_RC P3270_Write_Addinfo (FILE *,
       ADDINFO_rec_ptr,
       ADMIN_PARAMS_rec_typ *);

void P3270_Search_Addinfo (char                   * ,
                           ONE_FIELD_rec_ptr      * ,
         ADDINFO_rec_typ        * ,
         ADMIN_PARAMS_rec_typ   * );
  @/
static ESA_RC Write_Header (FILE                 * file_handle,
      int                    write_login,
      int                    write_user,
      USER_PARAMS_rec_typ  * user_params,
      ADMIN_PARAMS_rec_typ * admin_params);
 /@

int Parm_Valid (char * parm,
    ADMIN_PARAMS_rec_typ   * admin_params);
   @/
static ESA_RC Get_Delimiters (RSS_typ,
         char [2],
         ADMIN_PARAMS_rec_typ *);

#endif /@ PLATFORM_3270_H_INCLUDED @/
*/
