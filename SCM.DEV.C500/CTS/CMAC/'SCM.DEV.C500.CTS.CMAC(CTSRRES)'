 /**************************************************************
 *                                                             *
 * Title            : get resource information                 *
 *                                                             *
 * File Name        : ctsrres.h                                *
 *                                                             *
 * Author           : Alexander Shvartsman                     *
 *                                                             *
 * Creation Date    : 28/12/97                                 *
 *                                                             *
 * Description      :                                          *
 *                                                             *
 * Assumptions and                                             *
 *   Considerations :                                          *
 *                                                             *
 **************************************************************/

 /**************************************************************
 * Mod.Id   Who      When     Description                      *
 * -------- -------- -------  -------------------------------- *
 * WS2508   AmirH    14/09/04 Add list entry overflow handling *
 * WS10082  AvnerL   02/10/23 Allow 16K length                 *
 **************************************************************/

 #ifndef RCFRES_H_INCLUDED
 #define RCFRES_H_INCLUDED

 #include  ESA_CTSAMSG
 #include  ESA_API
 #include  API_ADDINFO

 #define   RCFRES_build_list_value           rres001
 #define   RCFRES_put_to_addinfo             rres002
 #define   RACF_res_output_to_addinfo        rres003
 #define   RCFRES_strip_val                  rres004
 #define   RCFRES_get_resource_details       rres005
 #define   RCFRES_build_res_addinfo          rres006
 #define   RCFRES_set_resource_details       rres007

 #define   RESR_EYECATCHER         "RES "
 #define   ACLR_EYECATCHER         "ACL "


 #define   MAX_LIST_SUBFIELD       20

 /*WS10082 typedef char  SUBF_typ [RCF_ADDINFO_VAL_LEN + 1];      */
 typedef char  SUBF_typ [ADDINFO_16K_VAL_LEN+1];         /*WS10082*/

 typedef struct S_LIST     {
   char         * keyword;
   int            max_subfields;
   int            init_list;
   SUBF_typ       subfield[MAX_LIST_SUBFIELD];
 } SLIST_typ , *SLIST_ptr ;

 typedef char * CNV_VAR_FUNC_typ(char       * var);
 typedef CNV_VAR_FUNC_typ  * CNV_VAR_FUNC_ptr;

 typedef struct S_KWDS     {
   char            * spc_kwd;         /* keyword                */
   ADDINFO_typ       kwd_typ;         /* addinfo keyword typ    */
   SLIST_typ       * list_desc;       /* List description       */
   CNV_VAR_FUNC_ptr  fn;              /* Field convert function */
 } SKWDS_typ , *SKWDS_ptr ;

/**************************************************************
*                                                             *
* PROCEDURE NAME : RCFRES_build_list_value                    *
*                                                             *
* DESCRIPTION    : create list value with subfields separators*
*                                                             *
* INPUT          : list_desc - list description table         *
*                                                             *
* OUTPUT         : list_value- list value                     *
*                                                             *
* RETURN VALUE   : ESA_OK                                     *
*                                                             *
**************************************************************/
void RCFRES_build_list_value(SLIST_typ  * list_desc,
                             char       * list_value);

/**************************************************************
*                                                             *
* PROCEDURE NAME : RCFRES_put_to_addinfo                      *
*                                                             *
* DESCRIPTION    : put data to addinfo                        *
*                                                             *
* INPUT          : kwd       - kwd                            *
*                  value     - value                          *
*                  addinfo   - addinfo                        *
*                  allow_ins - allowed insert to addinfo      *
*                  dest      - Vector of error msg dests      *
*                  msgs      - Error messages buffer          *
*                                                             *
* OUTPUT         : addinfo   - addinfo ptr                    *
*                                                             *
* RETURN VALUE   : ESA_OK                                     *
*                                                             *
**************************************************************/
ESA_RC RCFRES_put_to_addinfo(char                   * kwd,
                             char                   * value,
                             ADDINFO_typ              kwd_typ,
                             ADDINFO_rec_ptr          addinfo,
                             int                      allow_ins,
                             int   /* WS2508 */       can_overflow,
                             CTSAMSG_DEST_TABLE_rec_ptr     dest,
                             CTSAMSG_HANDLE_rec_ptr         msgs);

/**************************************************************
*                                                             *
* PROCEDURE NAME : RACF_res_output_to_addinfo                 *
*                                                             *
* DESCRIPTION    : Separate information reutrned from RACF    *
*                  in output buffer and insert it to addinfo  *
*                  buffer                                     *
*                                                             *
* INPUT          : output    - output area                    *
*                  laddinfo  - special addinfo for            *
*                              special keywords               *
*                  keywords  - Special keywords names         *
*                  dest      - Vector of error msg dests      *
*                  msgs      - Error messages buffer          *
*                                                             *
* OUTPUT         : addinfo   - addinfo ptr                    *
*                                                             *
* RETURN VALUE   : ESA_OK                                     *
*                                                             *
**************************************************************/
ESA_RC RACF_res_output_to_addinfo(
                              RACF_OUTPUT_LINE_rec_ptr      output,
                              ADDINFO_rec_ptr               addinfo,
                              ADDINFO_rec_ptr               laddinfo,
                              SKWDS_typ                     kwds[1],
                              CTSAMSG_DEST_TABLE_rec_ptr    dest,
                              CTSAMSG_HANDLE_rec_ptr        msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : RCFRES_strip_val                           *
 *                                                             *
 * DESCRIPTION    : Remove symbols                             *
 *                                                             *
 * INPUT          : data      - data                           *
 *                  c         - strip symbol                   *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 void RCFRES_strip_val(char  *data, char   c, char  mode);

/**************************************************************
*                                                             *
* PROCEDURE NAME : RCFRES_get_resource_details                *
*                                                             *
* DESCRIPTION    : Separate resource name and obtain additional
*                  information about resource                 *
*                                                             *
* INPUT          : resource name                              *
*                                                             *
* OUTPUT         : generic = Y/N                              *
*                  volume                                     *
*                  resource_out                               *
* RETURN VALUE   : none                                       *
*                                                             *
**************************************************************/

EXT void RCFRES_get_resource_details(RESOURCE_typ      resource_in,
                                 RESOURCE_typ          resource_out,
                                 char                * generic,
                                 char                * volume);

/**************************************************************
*                                                             *
* PROCEDURE NAME : RCFRES_build_res_addinfo                   *
*                                                             *
* DESCRIPTION    : Separate resource name and obtain additional
*                  information about resource. Insert it to   *
*                  addinfo.                                   *
* INPUT          : resource params struct                     *
*                                                             *
* OUTPUT         : addinfo                                    *
*                  resource params struct                     *
* RETURN VALUE   : ESA_RC                                     *
*                                                             *
**************************************************************/

EXT ESA_RC RCFRES_build_res_addinfo(
                           RES_PARAMS_rec_typ         * res_params_in,
                           RES_PARAMS_rec_typ         * res_params_out,
                           ADDINFO_rec_typ           ** addinfo_res,
                           CTSAMSG_DEST_TABLE_rec_typ * dest,
                           CTSAMSG_HANDLE_rec_typ     * msgs);

/**************************************************************
*                                                             *
* PROCEDURE NAME : RCFRES_set_resource_details                *
*                                                             *
* DESCRIPTION    : Build resource name with additional        *
*                  information about resource                 *
*                                                             *
* INPUT          : resource name                              *
*                  addinfo                                    *
* OUTPUT         : resoutrce name                             *
*                                                             *
* RETURN VALUE   : none                                       *
*                                                             *
**************************************************************/

EXT void RCFRES_set_resource_details(RESOURCE_typ            resource,
                                ADDINFO_rec_typ            * addinfo,
                                CTSAMSG_DEST_TABLE_rec_typ * dest,
                                CTSAMSG_HANDLE_rec_typ     * msgs);

#endif  /* ifndef RCFRES_H_INCLUDED */
