 /**************************************************************
 *                                                             *
 * Title            : IRRUT100 utility handling                *
 *                                                             *
 * File Name        : ctsr100.h                                *
 *                                                             *
 * Author           : Doron Cohen                              *
 *                                                             *
 * Creation Date    : 13-June-94                               *
 *                                                             *
 * Description      : IRRUT100 driver functions                *
 *                                                             *
 * Assumptions and                                             *
 *   Considerations : 1) Caller is APF authorized              *
 *                    2) The following ddcards are set to      *
 *                       temporary datasets :                  *
 *                                                             *
 *                       * SYSUT1                              *
 *                       * SYSPRINT                            *
 *                       * SYSIN                               *
 *                                                             *
 **************************************************************/

 /**************************************************************
 * Mod.Id   Who      When     Description                      *
 * -------- -------- -------- -------------------------------- *
 * sasc     NuritY   24/08/16 Adapt to CC changes.             *
 * SAS2IBMT SeligT   06/11/16 SAS/C to IBM C Conversion Project*
 * IS10174  NuritY   17/01/18 Move VERIFY_BY_LOGIN to common   *
 *                                                             *
 **************************************************************/
 #ifndef UT100_H_included
 #define UT100_H_included

 /* sasc - not needed anymore because it is defined in GLOBS
 #ifdef EXT
 #undef EXT
 #endif
 #ifndef UT100_owner
 #define EXT extern
 #else
 #define EXT
 #endif
 */

 #include TIME
 #include ESA_API
 #include MVS_OS_CLI
 #include API_ADDINFO

 #define RACF_UT100_ID_LEN        8
 #define MAX_LINE_ID_LEN          133
 #define MAX_FORMAT_ST_LEN        133
 #define MAX_ARG_LEN              512
 #define UT100_INPUT_DDCARD       "dd:sysin"   /* was ddn:   SAS2IBMT */
 #define UT100_OUTPUT_DDCARD      "ddn:sysprint"
 #define UT100_WORK_DDCARD        "dd:sysut1"  /* was ddn:   SAS2IBMT */
 #define UT100_CLEANUP_DDCARD     "ADMFILE"
 #define FILE_RQ                  "DELREQ"     /* Delrequest file */

 #define UT100_activate           r100010
 #define UT100_analyze            r100011
 #define UT100_execute_file       r100012
 #define UT100_allocate           r100013
 #define UT100_write_request      r100014

 /*
  *      RACF id (user/group) used by IRRUT100 utility
  */

  typedef char RACF_UT100_ID_typ[RACF_UT100_ID_LEN+1];

  /*
   *      Delete function options block
   */

  typedef struct {
    RACF_UT100_ID_typ    id;           /* id to be deleted          */
    RACF_UT100_ID_typ    dfltgrp;      /* default group of uid      */
    RACF_FLAG_typ        dsnforce;     /* force delete of dsn profs */
    char                 cmdfile[MAX_FILENAME_LEN+20];
    char                 wrkfile[MAX_FILENAME_LEN+20];
    time_t               crttime;      /* created date, time        */
    RACF_UT100_ID_typ    ds_owner;     /* new owner for datasets    */
    RACF_UT100_ID_typ    grp_owner;    /* new owner for groups      */
    RACF_UT100_ID_typ    usr_owner;    /* new owner for users       */
    RACF_UT100_ID_typ    gen_owner;    /* new owner for general res */
    RACF_UT100_ID_typ    cnct_owner;   /* new owner for connections */
    RACF_UT100_ID_typ    notify_id;    /* new user for notifies     */
    RACF_UT100_ID_typ    resown_id;    /* new user for res-owner    */
    RACF_UT100_ID_typ    sup_grp;      /* new user for res-owner    */
    RACF_UT100_ID_typ    new_dfltgrp;  /* new user for res-owner    */
  } RACF_DELETE_OPTIONS_rec_typ;

 /*
  *      IRRUT100 work file record
  */

  typedef struct {
    char  next_rba[3];
    char  type[1];
    char  length[2];
    char  data[255];
  } RACF_UT100_WORK_rec_typ;

 /*
  *  User format record
  *  Order of variables :
  * ----------------------
  *  done flag
  *  adm. userid
  *  adm. group
  *  USER=userid
  *  mode
  *  CMDFILE=...       - file results  or '?'
  *  REPLACE=...       - new id        or '?'
  *  DFLTGRP=...       - new def.group or '?'
  */

  #define      USR_ITEMS_COUNT  8
  static char  usr_format[]="%s %s %s USER=%s %s CMDFILE=%s \
REPLACE=%s DFLTGRP=%s";

 /*
  *  Group format record
  *  Order of variables :
  * ----------------------
  *  done flag
  *  adm. userid
  *  adm. group
  *  GROUP=grpname
  *  mode
  *  CMDFILE=...       - file results  or '?'
  *  REPLACE=...       - new id        or '?'
  *  SUPGRP=...        - new sup.group or '?'
  */

  #define      GRP_ITEMS_COUNT  8
  static char  grp_format[]="%s %s %s GROUP=%s %s CMDFILE=%s \
REPLACE=%s SUPGRP=%s";



#define DELREQ_LOCK_INTERVAL        3              /* Seconds */

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : UT100_activate                             *
 *                                                             *
 * DESCRIPTION    : Activate IRRUT100 to scan the RACF database*
 *                  for occurances of required id              *
 *                                                             *
 * INPUT          : id   - user/group id  to be located        *
 *                  dest - destination table for meesages      *
 *                  msgs - messages buffer                     *
 *                                                             *
 * OUTPUT         : None                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/
EXT ESA_RC UT100_activate (RACF_UT100_ID_typ            id[1],
                           int                           id_cnt,
                           CTSAMSG_DEST_TABLE_rec_typ  * dest,
                           CTSAMSG_HANDLE_rec_typ      * msgs );

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : UT100_analyze                              *
 *                                                             *
 * DESCRIPTION    : Analyze irrut100 results and produce       *
 *                  cleanup commands buffer                    *
 *                                                             *
 * INPUT          : None                                       *
 *                                                             *
 * OUTPUT         : None                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC UT100_analyze(RACF_DELETE_OPTIONS_rec_typ * opts,
                          CTSAMSG_DEST_TABLE_rec_typ  * dest,
                          CTSAMSG_HANDLE_rec_typ      * msgs );

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : UT100_execute_file                         *
 *                                                             *
 * DESCRIPTION    : Execute cleanup commands generated in by   *
 *                  gtut100 .                                  *
 *                                                             *
 * INPUT          : None                                       *
 *                                                             *
 * OUTPUT         : None                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC UT100_execute_file(RACF_DELETE_OPTIONS_rec_typ  * opts,
           /* IS10174 */       ADMIN_PARAMS_rec_typ   * admin_params);
           /* IS10174          CTSAMSG_DEST_TABLE_rec_typ   * dest,   */
           /* IS10174          CTSAMSG_HANDLE_rec_typ       * msgs  );*/

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : UT100_allocate                             *
 *                                                             *
 * DESCRIPTION    : create csan racf database file             *
 *                                                             *
 * INPUT          : request   "DELUSER", "DELGROUP"            *
 *                  objid     userid/ group-name               *
 *                  crttime   creation date,time               *
 *                                                             *
 * OUTPUT         : file_name  dsname                          *
 *                                                             *
 * RETURN VALUE   : ESA_OK, ESA_FATAL                          *
 *                                                             *
 **************************************************************/

 EXT ESA_RC UT100_allocate(char                 * request,
                           char                 * objid,
                           ADMIN_PARAMS_rec_typ * admin_params,
                           char                 * file_name,
                           time_t                 crttime) ;

/**************************************************************
*                                                             *
* PROCEDURE NAME : UT100_write_request                        *
*                                                             *
* DESCRIPTION    : Write request to requests file.            *
*                  For delay processing                       *
*                                                             *
* INPUT          : request   "DELUSER", "DELGROUP"            *
*                  mode      delete request mode              *
*                  opts      options                          *
*                                                             *
* OUTPUT         : none                                       *
*                                                             *
* RETURN VALUE   : ESA_OK, ESA_FATAL                          *
*                                                             *
**************************************************************/

EXT ESA_RC UT100_write_request(char                        *request,
                               char                        *mode,
                               RACF_UT100_ID_typ            replace,
                               RACF_DELETE_OPTIONS_rec_typ *opts,
                               ADMIN_PARAMS_rec_typ        *adm_params);

 #endif  /* UT100_H_included */
