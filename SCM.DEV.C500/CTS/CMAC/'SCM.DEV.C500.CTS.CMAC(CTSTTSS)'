/**************************************************************
*                                                             *
* Title            : TSS                                      *
*                                                             *
* File Name        : CTSTTSS                                  *
*                                                             *
* Author           : Alexander Shvartsman                     *
*                                                             *
* Creation Date    : 16/06/96                                 *
*                                                             *
* Description      :                                          *
*                                                             *
* Assumptions and                                             *
*   Considerations :                                          *
*                                                             *
**************************************************************/

/**************************************************************
* Mod.Id   Who      When     Description                      *
* -------- -------- -------- -------------------------------- *
* BS2359   Alex     02/07/98 Added TSS_convert_time prog      *
* PS0312   Alex     16/09/98 GetAll By Containers support     *
* PS0388   Alex     28/09/99 TSS 5.1 Support                  *
* WS2359   AlexS    16/11/99 New ADMIN.MISC3 filed            *
* WS2360   AlexS    16/11/99 New FACILITY subfileds           *
* WS2362   AlexS    13/12/99 Field LAST_MOD support           *
* BS2431   As       06/09/00 Get Many returns wrong actual_num*
* BS2518   RamiK    08/04/02 fix use of cache in download     *
* BS2583   Yonatan  03/03/03 OMVSPGM fails internal error     *
* BS2602   Bellap   18/05/03 Function to support extracting   *
*                            list of OPERPARM segment(MCSMON, *
*                            MCSAUTH, MCSLEVL, MCSMFRM)       *
* IS0272   Michael 10/06/04  Update C31B libs with old fixes  *
* IS0357   YoniMa   15/08/06 Support TSS 8                    *
* IS0361   YoniMa   20/08/06 TSS upgrade for v3.2.03,include: *
*                            IS0347 - Support external CFILE  *
*                            BS2713 - Support long FDT fields *
* WS10009  MeirS    18/10/07 Support RU_LOCKED & RU_SUSPENDED.*
* BS10014  ShmuelK  25/11/08 Correctly interpret NEWPW record *
*                            9675 across CA-TSS versions      *
* IS10026  AvnerL   18/01/09 Drop support in earlier than 5.1.*
* WS10020  AvnerL   05/02/09 VERIFY_PASSWORD_BY_LOGIN to TSS  *
* IS10091  NuritY   06/06/13 ParentContainer in Accounts & ...*
*                            ...Groups (WS10036) + dynamic    *
*                            ...tsscfile record table (WS10034*
* IS10092  NuritY   10/06/13 IS10077 enhancements:            *
*                            1. Support specific and generic  *
*                               resource names.               *
*                            2. Support tss commands return   *
*                               codes handling.               *
*                            3. Support connection between    *
*                               TSS commands.                 *
* IS10093  NuritY   11/06/13 Add SWITCH_TO_ENDUSER parm...    *
*                            ...(WS10037)                     *
* IS10120  AvnerL   01/06/14 Do not use NOPW in TSS AddUser.  *
* WS10054  SeligT   26/07/16 Add ENQ/DEQ SYSTEMS RNL Parameter*
* IS10139  SeligT   28/08/16 Update OS Functions for Agents   *
* sasc     NuritY   25/08/16 Complete WS10054 and adapt to    *
*                            common code changes.             *
* SAS2IBMN NuritY   07/09/16 SAS/C to IBM C conversion.       *
* IS10091A NuritY   15/09/16 ParentContainer in not parameter *
*                            dependent.                       *
* SAS2IBMT SeligT   01/11/16 SAS/C to IBM C conversion:       *
*                            ddn: -> dd:                      *
* TARGET1  AvnerL   04/04/17 Support TARGET in CREATE cmd.    *
* WS10061  KailasP  25/05/17 No error if RUUG is connected    *
* IS10147B AvnerL   18/06/17 Set common_prm_ptr first&protect *
* IS10147A SeligT   10/07/17 Add support for password phrase  *
* BS10080  AvnerL   08/02/18 UpperCase R0600-TSSCACHE         *
* IS10174  NuritY   17/01/18 Move VERIFY_BY_LOGIN to common   *
* BS10107  AvnerL   20/08/20 Increase MAX_RDT_ENTRIES to 1024 *
* IS10184  NuritY   31/08/21 Improve scripts performance      *
* WS10083  MauriC   26/06/22 Support user defined fields      *
* WS10082  AvnerL   19/09/23 Update fields length             *
**************************************************************/

#ifndef TSS_H_included
#define TSS_H_included

 /* sasc - not needed anymore because it is defined in GLOBS
#ifdef EXT
#undef EXT
#endif
#ifndef TSS_owner
#define EXT extern
#else
#define EXT
#endif
*/

#include ESA_API
#include MVS_OS_CLI
#include API_ADDINFO
#include MVS_SRV                                          /* IS10139 */

/******************************************
 *                                        *
 *   Short names for external functions   *
 *                                        *
 ******************************************/

#define TSS_do_addinfo               tss001
#define TSS_alloc_cmd_handle         tss002
#define TSS_free_cmd_handle          tss003
#define TSS_rtt_2_addinfo            tss004
#define TSS_get_admin_details        tss005
#define TSS_do_cmd                   tss006
#define TSS_do_create                tss007
#define TSS_issue_cmd                tss008
#define TSS_do_revoke_status         tss010
#define TSS_do_password              tss011
#define TSS_check_moving             tss012
#define TSS_trap_cmd                 tss013
#define TSS_alloc_trap_handle        tss014
#define TSS_realloc_trap_buffer      tss015
#define TSS_save_output              tss016
#define TSS_trap_buf_dump            tss017
#define TSS_do_trap_buf              tss018
#define TSS_free_trap_handle         tss019
#define TSS_validate_acid_type       tss021
#define TSS_trap_vars                tss022
#define TSS_lst_buf_dump             tss023
#define TSS_realloc_lst_buffer       tss024
#define TSS_alloc_lst_handle         tss025
#define TSS_trap_buf_sort            tss026
#define TSS_type_tss2ess             tss027
#define TSS_strip_val                tss028
#define TSS_free_lst_handle          tss029
#define TSS_get_acid_header          tss030
#define TSS_make_modify_vars         tss031
#define TSS_get_modify_info          tss032
#define TSS_set_empty_flags          tss033
#define TSS_ConvertDateESS2TSS       tss034
#define TSS_ConvertDateTSS2ESS       tss035
#define TSS_use_root_object          tss036
#define TSS_cmd_buf_dump             tss037
#define TSS_put_cmd                  tss038
#define TSS_convert_cmd              tss039
#define TSS_convert_restype          tss040
#define TSS_check_param_overflow     tss041
#define TSS_get_rdt_table            tss042
#define TSS_check_restype            tss043
#define TSS_Free_tsscf_general       tss047  /*  IS10091 */
#define TSS_set_password             tss048  /*  IS10020 */

#define TSS_set_simple_key           tss101
#define TSS_set_simple_flag          tss102
#define TSS_set_simple_lst           tss103
#define TSS_set_command              tss104
/* IS10091  #define TSS_set_facility             tss105    dropped   */
#define TSS_set_ltime                tss106
#define TSS_set_sitran               tss107
#define TSS_set_admin_res            tss109
#define TSS_set_admin_simple         tss111
#define TSS_set_admin_resclass       tss112
#define TSS_set_simple_segm          tss113
#define TSS_set_user_lst             tss114
#define TSS_set_expires              tss115
#define TSS_set_replaced_lst         tss116
#define TSS_set_optime               tss117
#define TSS_set_fac51                tss118   /* WS2360 */

#define TSS_chk_acid                 tss201

#define TSS_get_simple_var           tss301
#define TSS_extrcat_acid             tss303
#define TSS_convert_type             tss304
#define TSS_convert_date             tss305
#define TSS_convert_flag             tss306
#define TSS_extract_1100             tss307
#define TSS_extract_2101             tss308
#define TSS_extract_2102             tss309
#define TSS_extract_2301             tss310
#define TSS_extract_var_val          tss311
#define TSS_extract_2700             tss312
#define TSS_admin_lst                tss313
#define TSS_extract_2921             tss314
#define TSS_extract_3000             tss315
#define TSS_extract_3001             tss316               /* IS10147A */
/* IS10026 #define TSS_facility_lst             tss316         */
#define TSS_convert_segm             tss317
#define TSS_extract_4011             tss318
#define TSS_extract_acid             tss319
#define TSS_list_proc                tss320
#define TSS_put_to_addinfo           tss321
#define TSS_strip_zero               tss322
#define TSS_check_rec_dep            tss323
#define TSS_select_rec_desc          tss324
#define TSS_get_rec_id               tss325
#define TSS_extract_proc             tss326
#define TSS_strip_fzero              tss327
#define TSS_xadmin_lst               tss328
#define TSS_admin_simple_lst         tss329
#define TSS_extract_2011             tss330
#define TSS_convert_time             tss331     /* BS2359 */
#define TSS_fac51_lst                tss332     /* WS2359 */
#define TSS_put_0600                 tss333     /* ps0395 */
#define TSS_last_mod                 tss334     /* ws2362 */
#define TSS_put_4404                 tss335     /* bs2583 */

#define TSS_get_acids_list           tss401
#define TSS_init_get_handle          tss402
#define TSS_select_acids_list_from   tss403
#define TSS_output_to_addinfo        tss404
#define TSS_cfile_activate           tss405
#define TSS_reset_list_buf           tss406
#define TSS_put_list_info            tss407
#define TSS_get_parent_oe            tss408
#define TSS_free_get_handle          tss409

#define TSS_global_init              tss501
#define TSS_get_global_segments      tss502
#define TSS_get_global_rtt           tss503
#define TSS_get_global_rtt_num_items tss504
#define TSS_get_global_parameter     tss505
/* IS10091 #define TSS_get_global_tssc_desc     tss506   */
#define TSS_get_global_parameter_cond tss506               /* IS10184 */
#define TSS_global_term              tss507                /* WS10083 */

#define TSS_sysout_lst               tss601
#define TSS_jobacid_lst              tss602
#define TSS_subacid_lst              tss603
#define TSS_extract_9505             tss604
#define TSS_strip_bracket            tss605
#define TSS_vthresh_lst              tss606
#define TSS_adabas_svc               tss607
#define TSS_db2fac_lst               tss608
#define TSS_extract_9549             tss609
#define TSS_extract_9519_51          tss610       /* PS0388 */
#define TSS_extract_4011_51          tss611       /* PS0388 */
#define TSS_extract_4012_51          tss614       /* BS2713 */
#define TSS_convert_list_sep         tss613       /* bs2602 */
#define TSS_extract_9640_51          tss612       /* PS0388 */
#define TSS_open_output_file         tss620       /* IS0347 */

#define TSS_send_cmd                 tss701
#define TSS_get_output               tss702
#define TSS_identify_rec             tss703
#define TSS_free_output              tss704
#define TSS_cnvflag_onequal          tss705       /* WS10009 */

/*IS10026 #define TSS_USER_RTT_TABLE           "ctstrtt.h"         */
#define TSS_USER_RTT_TABLE           "ctstr51.h"         /* IS10026*/
/*IS10026 #define TSS_GROUP_RTT_TABLE          "ctstrtt.h"         */
#define TSS_SGM_TABLE                "ctstsgm.h"
#define TSS_51_RTT_TABLE             "ctstr51.h"         /* PS0388 */
/* IS0026 #define TSS_TSSCFILE_TABLE           "ctsttsf.h"         */
#define TSS_TSSCFILE_TABLE_51        "ctstf51.h"
/* IS10091A #define TSS_TSSCFILE_PC_PROC   "ctstfpp.h"      * IS10091 */
/* IS10091A #define TSS_TSSCFILE_PC_IGN    "ctstfpi.h"      * IS10091 */
#define TSS_XCNN                     "ctstxcn.h"
#define TSS_XRES                     "ctstres.h"


/* BS10080 #define R0600_DD        "dd:tsscache"  *was ddn: SAS2IBMT* */
/* BS10080 #define R0600_DD_NAME   "tsscache"                         */
#define R0600_DD                     "DD:TSSCACHE"        /*BS10080*/
#define R0600_DD_NAME                "TSSCACHE"           /*BS10080*/

#define TSS_GET_ALL_VERBOSE          "GET_ALL_VERBOSE"   /* PS0312 */
#define TSS_STANDARD_MODE            "STD"               /* PS0312 */
#define TSS_STANDARD_MODE2           "STD2"              /* PS0395 */

#define TSS_GET_ALL_USER_MODE        "GET_ALL_USER_MODE" /* PS0312 */
#define TSS_GET_ALL_CONN_MODE        "GET_ALL_CONN_MODE" /* PS0312 */

#define TSS_GET_ALL_CONN_RULE        "GET_ALL_CONN_RULE" /* PS0312 */
#define TSS_GET_ALL_CONN_RULE_U      "USER"              /* PS0312 */
#define TSS_GET_ALL_CONN_RULE_G      "GROUP"             /* PS0312 */

#define TSS_STRIP_BOTH               'B'
#define TSS_STRIP_LEFT               'L'
#define TSS_STRIP_RIGHT              'R'

#define TSS_GET_MANY_SKIP_ITEM       'S'
#define TSS_GET_MANY_ACC_UNCOND      'U'    /* BS2431 */

#define TSS_GLOBAL_ADMIN_ACID        "TSS_ADMIN_ACID"
#define TSS_GLOBAL_ADMIN_ACID_TYPE   "TSS_ADMIN_ACID_TYPE"
#define TSS_GLOBAL_ADMIN_DEP_ACID    "TSS_ADMIN_DEP_ACID"
#define TSS_GLOBAL_ADMIN_DIV_ACID    "TSS_ADMIN_DIV_ACID"
#define TSS_GLOBAL_ADMIN_ZONE_ACID   "TSS_ADMIN_ZONE_ACID"
#define TSS_GLOBAL_ADMIN_PARENT_ACID "TSS_ADMIN_PARENT_ACID"
#define TSS_GLOBAL_ADMIN_PARENT_TYPE "TSS_ADMIN_PARENT_TYPE"
#define TSS_GLOBAL_ROOT_NAME         "TSS_GLOBAL_ROOT_NAME"
#define TSS_ROOT_NAME_PARM           "TSS_ROOT_NAME"

#define TSS_VERSION_44               "TSS44"
#define TSS_VERSION_50               "TSS50"
#define TSS_VERSION_51               "TSS51"
#define TSS_VERSION_8                "TSS_8"          /* IS0357 */
#define TSS_VERSION_9                "TSS_9"          /* IS10026*/
#define TSS_VERSION_12               "TSS_12"         /* IS10026*/

#define TSS_GLOBAL_VERSION           "TSS_VERSION"
#define TSS_GLOBAL_DATE_FORMAT       "TSS_DFORMAT"
#define TSS_GLOBAL_RELEASE           "TSS_RELEASE"    /* PS0388 */

#define TSS_OE_TYPE                  "OE_TYPE"
#define TSS_USER_TYPE                "USER_TYPE"
#define TSS_UG_TYPE                  "UG_TYPE"

#define TSS_SA_AGENT_EYECATCHER      "TSS-SA-AGENT   "
#define TSS_ROOT                     ".ROOT."
#define TSS_ROOT_PARENT              ""
#define TSS_ROOT_TYPE                "Root"
#define TSS_ACID                     "ACID"
#define TSS_ACID_TYPE                "ACID TYPE"
#define TSS_ACID_PARENT_CONTAINER    "CONTAINER"
#define TSS_DUMMY_NAME_FOR_CREATE    "UNKNOWN"
#define TSS_INITIAL_PASSWORD_PRM     "PASSWORD(NOPW) "
#define TSS_ADI_SKIP                 '*'
#define TSS_DATE_FORMAT_DEFAULT      "MM/DD/YY"
#define TSS_DATE_EXPIRED             "EXPIRED "          /* BS2675 */
#define TSS_PSWD_PERMANENT_INTERVAL  "255"
#define TSS_ACID_TYPE_LEN              20
#define TSS_CMD_MODE_LEN               20
#define TSS_CMD_HANDLE_LEN             16
#define TSS_MAX_FILENAME_LEN           44

#define TSS_LENGTH_UNDEFINED           -1
#define MAX_TSS_API_ST_TRAP           133
                                    /* Used for create ACID's lists*/
                                    /* Extract modify parameters : */
                                    /*    DATE_FORMAT, TSS_VERSION */
#define MAX_TSS_API_ST               4096
/*#define MAX_TSS_PARAM_LEN             320*/
#define MAX_TSS_PARAM_LEN            2048
#define MAX_TSS_REC_LEN               320              /*WS10082*/
#define MAX_TSS_CMD_OE_ENTRIES         10
#define MAX_TSS_CMD_USER_ENTRIES      100
#define MAX_TSS_CMD_GROUP_ENTRIES     100
#define TSS_MAX_LOCAL_ADI_ENTRIES      50
#define TSSCMD_CMD_MODE              "CMD      "
#define TSSCMD_GET_MESSAGE           "GETMSG   "
#define TSSCMD_FREE_BUFFER           "FREE     "
#define TSSCFILE_IN_DD               "IN"
#define TSSCFILE_OUT_DD              "OUT"
#define MAX_TSSCFILE_REC_LEN          320

#define TSS_MSCA                     "MSCA"
#define TSS_SCA                      "SCA"
#define TSS_LSCA                     "LSCA"
#define TSS_ZONE                     "ZONE"
#define TSS_ZCA                      "ZCA"
#define TSS_DIVISION                 "DIVISION"
#define TSS_VCA                      "VCA"
#define TSS_DCA                      "DCA"
#define TSS_DEPARTMENT               "DEPARTMENT"
#define TSS_PROFILE                  "PROFILE"
#define TSS_GROUP                    "GROUP"
#define TSS_USER                     "USER"
#define TSS_CONTAINER                "CONTAINER"

/* ps0495 */
#define TSS_CACHE_RESTART_MARKER     "RESTARTED"
#define TSS_CACHE_RESTART_MARKER_LEN 9

#define MAX_RDT_RESTYPE_LEN          8
/* BS10107 #define MAX_RDT_ENTRIES              256 */
#define MAX_RDT_ENTRIES             1024            /*BS10107*/
/* IS0347 */
#define CFILE_DEBUG                  "CFILE_DEBUG"  /* IS0347 */
#define CFILE_DEBUG_ON               'Y'            /* IS0347 */
#define CFILE_DEBUG_OFF              'N'            /* IS0347 */
#define TSSCFILE_DEBUG_DD            "EXTCFILE"     /* IS0347 */
#define TSS_VERSION                  "TSS_VERSION"  /* IS0347 */

#define LOCKED_TYPES                "LOCKED_TYPES"     /* WS10009 */
#define SUSPENDED_TYPES             "SUSPENDED_TYPES"  /* WS10009 */

#define TARGET                      "TARGET"         /* TARGET1 */
#define MSG_CONNGRP_ERR           "MSG_CONNGRP_ERR" /* WS10061 */
#define MSG_CONNGRP_ERR_ON        'Y'               /* WS10061 */
#define MSG_CONNGRP_ERR_OFF       'N'               /* WS10061 */

typedef char RDT_RESTYPE_typ [MAX_RDT_RESTYPE_LEN + 1];

typedef  struct _TSS_GET_TYPES{
   char       *get_type;
   char        sort_symb;
} TSS_GET_TYPES_rec_typ, *TSS_GET_TYPES_rec_ptr;

typedef  struct _TSS_ADMIN{
  char   acid[TSS_USER_NAME_LEN + 1];
  char   type[TSS_ACID_TYPE_LEN + 1];
  char   parent_type[TSS_ACID_TYPE_LEN + 1];
  char   parent[TSS_USER_NAME_LEN + 1];
} TSS_ADMIN_rec_typ, *TSS_ADMIN_rec_ptr;

typedef  struct _TSS_ACID_HEADER {
  char   acid[TSS_USER_NAME_LEN + 1];
  char   type[TSS_ACID_TYPE_LEN + 1];
  char   dept_acid[TSS_USER_NAME_LEN + 1];
  char   div_acid[TSS_USER_NAME_LEN  + 1];
  char   zone_acid[TSS_USER_NAME_LEN + 1];
} TSS_ACID_HEADER_rec_typ, *TSS_ACID_HEADER_rec_ptr;

typedef  struct _TSS_MODIFY_VAR {
  char   *param;
  char   *tleft;
  char   *tright;
  char   *result;
  void   *cfunc;
} TSS_MODIFY_VAR_typ, *TSS_MODIFY_VAR_ptr;

typedef  struct _TSS_MODIFY_REC {
  char                *rec_id;
  TSS_MODIFY_VAR_typ  *vars;
} TSS_MODIFY_REC_typ, *TSS_MODIFY_REC_ptr;

typedef  struct _TSS_MODIFY_RET {
  char      version[MAX_TSS_PARAM_LEN + 1];
  char      date_format[MAX_TSS_PARAM_LEN + 1];
} TSS_MODIFY_RET_typ, *TSS_MODIFY_RET_ptr;

typedef ESA_RC CNV_VAR_FUNC_typ(ESA_DIAG_COMP_typ            comp,
                                char                       * var,
                                CTSAMSG_DEST_TABLE_rec_ptr   dest,
                                CTSAMSG_HANDLE_rec_ptr       msgs) ;
typedef  struct _TSS_CMD_BUF{
  int      max_len;
  int      use_len;
  char     buffer[MAX_TSS_API_ST];
} TSS_CMD_BUF_rec_typ, *TSS_CMD_BUF_rec_ptr;

/* TSS CMD types */

typedef enum {
   TSS_CMD_IGNORE      =0,
   TSS_CMD_DEADMIN     =1,
   TSS_CMD_REMOVE      =2,
   TSS_CMD_REVOKE      =3,
   TSS_CMD_ADMIN       =4,
   TSS_CMD_ADD         =5,
   TSS_CMD_PERMIT      =6,
   TSS_CMD_REPLACE     =7
 } TSS_CMD_typ;


/* TSS CMD mode */

typedef enum {
   TSS_CMD_IGNORE_MODE      =0,
   TSS_CMD_QUIET_MODE       =1,
   TSS_CMD_DEFAULT_MODE     =2,
   TSS_CMD_WEAK_QUIET_MODE  =3
 } TSS_CMD_MODE_typ;

/* IS10092 - start */
/* 'command used' values to indicate whether the command entry  */
/* was used, and if it was, whetherit was executed successfully */
typedef enum {
   TSS_CMD_NOT_USED         =0,
   TSS_CMD_USED             =1,
   TSS_CMD_USED_OK          =2,
   TSS_CMD_USED_FAILED      =3
 } TSS_CMD_USED_typ;
/* IS10092 - end  */

typedef  struct _TSS_CMD_SET{
  TSS_CMD_typ  type;
  char         param[MAX_TSS_PARAM_LEN + 1];
/*IS10092 int       used;       */
  TSS_CMD_USED_typ  used;                              /* IS10092 */
  int               org_cmd;  /* original cmd number (1,2...) IS10092 */
                              /* when the curernt command is  IS10092 */
                              /* connected to another cmd.    IS10092 */
} TSS_CMD_SET_rec_typ, *TSS_CMD_SET_rec_ptr;

typedef  struct _TSS_CMD_HANDLE{
  char                   eyecatcher[15];
  int                    max_expected_entries;
  int                    allocated_entries;
  int                    used_entries;
  TSS_CMD_SET_rec_typ  * tss_cmds;
} TSS_CMD_HANDLE_typ,  * TSS_CMD_HANDLE_ptr;

/* Keyword types for RTT */

typedef enum {
   RTT_IGN               = 0,
   RTT_KEY               = 1,
   RTT_FLG               = 2,
   RTT_FLDN              = 3,
   RTT_FLDV              = 4,
   RTT_KEYT              = 5,
   RTT_SUB_KEY           = 6,
   RTT_SUB_KEY_FRST      = 7,
   RTT_SUB_KEY_LAST      = 8,
   RTT_SUB_KEY_LASTB     = 9,
   RTT_SUB_KEY_OPT       = 10,
   RTT_GET_SUB_KEY       = 11,
   RTT_GET_SUB_KEY_L     = 12,
   RTT_GET_SUB_KEY_S     = 13,
   RTT_KEYT_FACILITY     = 14     /* FACILITY.EXPIRES (DATE->STRING) */
 } RTT_KWD_typ;

/* Additional keywords properties for RTT */

typedef enum {
   RTT_REPLACE=1,
   RTT_NO_REPLACE=2
 } RTT_KWD_PROP_typ;

/*
 *    Typedef for Prototype of set var function
 */

typedef ESA_RC SET_VAR_FUNC_typ(ESA_DIAG_COMP_typ          comp,
                                TSS_CMD_HANDLE_typ        *cmd_handle,
                                void                      *rtt_tbl,
                                void                      *rtt_rec,
                                ONE_FIELD_rec_ptr          ess_pair,
                                ADDINFO_rec_ptr            get_addinfo,
                                ADDINFO_rec_ptr            addinfo,
                                CTSAMSG_DEST_TABLE_rec_ptr dest,
                                CTSAMSG_HANDLE_rec_ptr     msgs);

typedef SET_VAR_FUNC_typ  *SET_VAR_FUNC_ptr;

/*
 * Typedef for RTT ( routing TSS description table )
 */

typedef  struct _TSS_RTT{
  char               * addinfo_keyword;
  char               * tss_keyword;
  ADDINFO_KWD_typ      addinfo_typ;
  RTT_KWD_typ          rtt_typ;
  RTT_KWD_PROP_typ     rtt_prop;
  char               * deflt;
  SET_VAR_FUNC_typ   * set_var_func_ptr;
} TSS_RTT_rec_typ, *TSS_RTT_rec_ptr;

/*
 * Typedef for SGM ( TSS segment table )
 */

typedef  struct _TSS_SGM{
  char       * tss_field;
  char       * artificial_field;
  char      ** segment_fields;
} TSS_SGM_rec_typ, *TSS_SGM_rec_ptr;

/**************************************************************
 *                                                            *
 *      LIST'S FIELDS PROCESSING STRUCTURE                    *
 *                                                            *
 **************************************************************/

#define  MAX_TSS_LST_ENTRIES         100
#define  MAX_TSS_SUBFIELD             10

/* Item processing mode */

typedef enum {
 TSS_ITEM_ADD=1,
 TSS_ITEM_DEL=2
 } TSS_ITEM_MODE_typ;

typedef enum {
   TSS_VAL_EXISTS     = 1,
   TSS_VAL_NOT_EXISTS = 2
 } TSS_VAL_MODE_typ;

typedef  struct _TSS_LST_DATA{
   int               fill_done;                /* for get */
   char              field[MAX_TSS_SUBFIELD][MAX_TSS_PARAM_LEN+1];
   TSS_VAL_MODE_typ  exists[MAX_TSS_SUBFIELD]; /* for get */
   RTT_KWD_typ       type[MAX_TSS_SUBFIELD];   /* for get */
} TSS_LST_DATA_typ, * TSS_LST_DATA_ptr;

typedef  struct _TSS_LST_FIELD{
  int                    max_expected_entries;
  int                    allocated_entries;
  int                    used_entries;
  int                    subf_cnt;
  TSS_LST_DATA_typ     * lst_data;
} TSS_LST_FIELD_typ, * TSS_LST_FIELD_ptr;

typedef  struct _TSS_SUBF_NAMES{
  char               *subf_name;
  RTT_KWD_typ         rtt_typ;
  TSS_CMD_typ         add_cmd;
  TSS_CMD_typ         del_cmd;
} TSS_SUBF_typ, *TSS_SUBF_ptr;

/**************************************************************
 *                                                            *
 *      TRAP DATA STRUCTURES                                  *
 *                                                            *
 **************************************************************/

#define  MAX_TSS_TRAP_ENTRIES    100

typedef  struct _TSS_TRAP_DATA {
   char  data[MAX_TSS_API_ST_TRAP + 1];
   int   used;
} TSS_TRAP_DATA_typ, * TSS_TRAP_DATA_ptr;

typedef  struct _TSS_TRAP_BUF {
  int                    max_expected_entries;
  int                    allocated_entries;
  int                    used_entries;
  TSS_TRAP_DATA_typ    * trap_data;
} TSS_TRAP_BUF_rec_typ, * TSS_TRAP_BUF_rec_ptr;

/**************************************************************
 *                                                            *
 *      BUILD TSS OUTPUT DEFINITIONS                          *
 *                                                            *
 **************************************************************/

 #define TSS_LIST_LINE(identif, code, where_data)           \
  static TSS_LIST_LINE_rec_typ identif={ code, where_data , \
                         identif##_k, &identif##_d[0] }     /* SAS2IBMN */

 enum { NEXT_LINE, CURRENT_LINE };

 enum {
        LIST_ACCESSORID,
        LIST_TYPE      ,
        LIST_MODIFY    ,
        LIST_RDT
       };

 /**************************************************
  *                                                *
  *     TSS LIST LINES DEFINITIONS                 *
  *                                                *
  **************************************************/

 typedef  struct _TSS_OUTP_DATA{
     size_t         data_len;
     char          *data;
 }  TSS_OUTP_typ , * TSS_OUTP_ptr ;

 typedef struct _TSSLINES {
      short             linecode;
      short             dataflag;
      char           ** keywords;
      TSS_OUTP_typ    * datas;
  }  TSS_LIST_LINE_rec_typ , * TSS_LIST_LINE_rec_ptr;

/*
 *    Typedef for TSS OUTPUT structure
 */

 typedef struct _TSS_OUTPUT {
      TSS_LIST_LINE_rec_typ   * line;
      void                    * func;
 }  TSS_OUTPUT_typ, * TSS_OUTPUT_ptr;

 typedef struct _TSS_LIST_HANDLE {
    char    * start_line_ptr;
    char    * current_line_ptr;
 }  TSS_LIST_HANDLE_rec_typ,  * TSS_LIST_HANDLE_rec_ptr;

/*
 *    Typedef for Prototype of get var function
 */

 typedef ESA_RC GET_VAR_FUNC_typ(ESA_DIAG_COMP_typ            comp,
                                 TSS_LIST_HANDLE_rec_typ    * handle,
                                 TSS_OUTP_typ               * vars,
                                 CTSAMSG_DEST_TABLE_rec_ptr   dest,
                                 CTSAMSG_HANDLE_rec_ptr       msgs) ;

 typedef GET_VAR_FUNC_typ  *GET_VAR_FUNC_ptr;

/*
 *    Typedef for Prototype of set item of lists fields
 */

 typedef ESA_RC TSS_SET_ITEM_typ(ESA_DIAG_COMP_typ       comp,
                            TSS_ITEM_MODE_typ            item_mode,
                            char                       * kwd,
                            TSS_CMD_typ                  item_cmd,
                            TSS_CMD_HANDLE_typ         * cmd_handle,
                            int                          subf_cnt,
                            TSS_LST_DATA_typ           * lst,
                            TSS_SUBF_typ                 subf_names[1],
                            CTSAMSG_DEST_TABLE_rec_ptr   dest,
                            CTSAMSG_HANDLE_rec_ptr       msgs);

 typedef TSS_SET_ITEM_typ *TSS_SET_ITEM_ptr;

/**************************************************************
 *                                                            *
 *      Get function support                                  *
 *                                                            *
 **************************************************************/

 #define TSSCFILE_RESERVED_LEN       4

 #define TSSCFILE_REC_ID1_POS        5  - 1
 #define TSSCFILE_REC_ID1_LEN        4
 #define TSSCFILE_REC_ID2_POS        9  - 1
 #define TSSCFILE_REC_ID2_LEN        2
 #define TSSCFILE_ACID_POS           15 - 1
 #define TSSCFILE_ACID_LEN           8
 #define TSSCFILE_INFO_POS           33 - 1

 #define CFILE_DATA_VALLEN           "DATA.VALLEN"
 #define CFILE_REC_2100              "REC_2100.KEY"
 #define CFILE_REC_0001              "REC_0001.TXT"

 /**************************************************
  *                                                *
  *     TSSCFILE UTILITY LINE DEFINITIONS          *
  *                                                *
  **************************************************/

 #define CFILE_REC_START( code )                \
     static TSSCFILE_DESCR_typ  v_##code[] = {

 #define CFILE_REC_FIELD( pos, len, kwd, place, func)   \
     { pos, len, kwd, place, func } ,

 #define CFILE_REC_END( code , code_str, action, code_dep, func )   \
     {  0,  0, NULL  , ADI_LOCAL, NULL }                            \
                                         };                         \
     static TSSCFILE_REC_typ  rec_##code = { code_str, "", action,  \
                             v_##code, code_dep, func };

 typedef enum {
   ADI_LOCAL = 1,
   ADI_REGLR = 2,
   ADI_MEM   = 3,
   ADI_LOCAL_AND_REGLR = 4            /*  IS10091 */
 } TSSCFILE_DEST_typ;

 typedef enum {
   CFILE_SKIP        = 1,
   CFILE_ACCEPT      = 2,
   CFILE_BREAK       = 3,
   CFILE_MSG_OK      = 4,
   CFILE_MSG_WRN     = 5,
   CFILE_MSG_ERR     = 6,
   CFILE_MSG_FATAL   = 7,
   CFILE_ACCEPT_0600 = 8,    /* ps0395 */
   CFILE_ACCEPT_4404 = 9     /* BS2583 */
 } TSSCFILE_ACTION_typ;

 typedef enum {
   TSS_BREAK_BY_ERR = 1,
   TSS_IGNORE_ERR   = 2
 } TSSCFILE_ERR_BEH_typ;

 typedef struct _TSSCFILE_DESCR {
    int      pos;            /* Start position of field         */
    int      len;            /* Field length                    */
    char    *addinfo_k;      /* addinfo keyword related to data */
    TSSCFILE_DEST_typ  dest; /* put to local or regl addinfo    */
    void    *cfunc;          /* Convert function                */
  }  TSSCFILE_DESCR_typ,  * TSSCFILE_DESCR_ptr;

 typedef struct _TSSCFILE_REC {
     char                   id1[TSSCFILE_REC_ID1_LEN + 1];
     char                   id2[TSSCFILE_REC_ID2_LEN + 1];
     TSSCFILE_ACTION_typ    action;  /* skip, accept  */
     TSSCFILE_DESCR_typ   * vars;    /* ptr to vars   */
     char                 * id1_dep; /* rec dep ids   */
     void                 * pfunc;   /* Proc function */
  }  TSSCFILE_REC_typ,  * TSSCFILE_REC_ptr;

 typedef struct _TSSCFILE_GET_LIST {
     char                 kwd[TSS_ADDINFO_KWD_LEN];
     TSS_LST_FIELD_typ  * vall;
  }  TSSCFILE_GET_LIST_typ,  * TSSCFILE_GET_LIST_ptr;

 #define MAX_TSS_LIST_FIELDS   25

 #define MAX_R4404_SIZE        1024                   /* BS2583 */

 typedef struct _TSSCFILE_HANDLE {
     TSSCFILE_GET_LIST_typ   lst_f[MAX_TSS_LIST_FIELDS];
 }  TSSCFILE_HANDLE_typ, * TSSCFILE_HANDLE_ptr;

#include TSS_XCNN                                        /* ps0395 */
 typedef struct _GET_HANDLE {
      int                          list_ind;
      ADDINFO_rec_ptr              laddinfo;
      ADDINFO_rec_ptr              waddinfo;
      TSS_TRAP_BUF_rec_typ       * acids_list;
      void                       * cnn_data;    /* For connection */
      TSSCFILE_HANDLE_typ          list_buffer;
      TSSCFILE_ERR_BEH_typ         err_action;
      int                          found_err;

      int                          oe_list_ind;   /* PS0312 */
      TSS_TRAP_BUF_rec_typ       * oe_acids_list; /* PS0312 */

      FILE                       * r0600;         /* ps0395 */
      TSS_TRAP_CNN_DATA_typ        r0600_cnn_data;/* ps0395 */
      int                          this_is_a_restart;     /* bs2518 */
      int                  this_is_a_first_restart_entry; /* bs2518 */
      TSS_OUTP_typ                 r4404;                 /* BS2583 */
  }  TSS_GET_HANDLE_typ,  * TSS_GET_HANDLE_ptr;

/* ----------------- start of WS10009 -------------------------- */
#define  PARAMS_TYPE_TSS    'T'   /* set in PARAMS_type in /* IS10184 */
                                  /* common_params            IS10184 */
typedef  struct _TSS_PARAMS{
  /* move "* common_params" to start of "TSS  PARAMS".       IS10147B*/
  COMMON_PARAMS_rec_typ * common_params; /* ptr to common    WS10054 */
                          /* usaapi parameters area (look at WS10054 */
                          /* CTS.CMAC(CTSCSRV) for details)  WS10054 */
  /* IS10174 - VERIFY_PASS_LOGIN is moved to common params
  char rssparm_ffu1[4];               * should be like RACF struct ! *
  char rssparm_VERIFY_PASS_LOGIN[2]; *VERIFY_PASSWORD_BY_LOGIN ws10020*
  /*ws10020   char rssparm_ffu2[2];  * adjust to RACF and ACF2      *
  /* IS10091  char rssparm_ffu3[2];                                 *
  /* IS10091A char rssparm_PARENT_CONTAINER[2];  *       IS10091     *
  char rssparm_ffu2[2];                                   * IS10091A *
  */
  char rssparm_ffu1[8];                                  /* IS10174 */
  /* IS10093 char rssparm_ffu4[2];                                 */
  char rssparm_SWITCH_TO_ENDUSER[2]; /*               IS10093       */
  char rssparm_REVOKE_TYPES[256];    /* SUSPENDED & LOCKED vector...
                                        ..types                      */
  /* IS10091 - start */
  TSSCFILE_REC_typ **tsscf_rec_general; /* tsscfile 'general' list */
  TSSCFILE_REC_typ **tsscf_rec_modify;  /* tsscfile 'modify' list  */
  /*  char ffu[734];  * for future use, please update in change */
  /* IS10091 - end   */
  char rssparm_NOPW[2];                                   /* IS10020 */
  char rssparm_MSG_CONNGRP_ERR[2];                        /* WS10061 */
  char ffu[718];          /* for future use, please update in change */
} TSS_PARAMS_rec_typ, *TSS_PARAMS_rec_ptr;
/* ------------------- end of WS10009 -------------------------- */

/*
 *    Typedef for Prototype of extract, convert functions
 */

 typedef ESA_RC TSSCFILE_DATA_EXT_typ (ESA_DIAG_COMP_typ      comp,
                                 char                       * record,
                                 TSSCFILE_HANDLE_typ        * h_desc,
                                 TSSCFILE_REC_typ           * r_desc,
                                 TSSCFILE_DESCR_typ         * d_desc,
                                 char                       * key_val,
                                 ADDINFO_rec_ptr              addinfo,
                                 ADDINFO_rec_ptr              laddinfo,
                                 CTSAMSG_DEST_TABLE_rec_ptr   dest,
                                 CTSAMSG_HANDLE_rec_ptr       msgs);

 typedef TSSCFILE_DATA_EXT_typ  *TSSCFILE_DATA_EXT_ptr;

/*    WS2359
 *    Typedef for Prototype of extract and put function
 */

 typedef ESA_RC TSSCFILE_DATA_PUT_typ (ESA_DIAG_COMP_typ      comp,
                                 TSS_GET_HANDLE_typ         * get_hndl,
                                 char                       * record,
                                 TSSCFILE_HANDLE_typ        * h_desc,
                                 TSSCFILE_REC_typ           * r_desc,
                                 TSSCFILE_DESCR_typ         * d_desc,
                                 char                       * key_val,
                                 ADDINFO_rec_ptr              addinfo,
                                 ADDINFO_rec_ptr              laddinfo,
                                 CTSAMSG_DEST_TABLE_rec_ptr   dest,
                                 CTSAMSG_HANDLE_rec_ptr       msgs);

 typedef TSSCFILE_DATA_PUT_typ  *TSSCFILE_DATA_PUT_ptr;

/***********************************************************/

/*
 *    Function prototypes
 */

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_do_addinfo                             *
 *                                                             *
 * DESCRIPTION    : General addinfo processing program         *
 *                                                             *
 * INPUT          : ess_addinfo   -  addinfo from ess          *
 *                  get_addinfo   -  addinfo after get         *
 *                  cmd_handle    -  cmd gathering struct      *
 *                  rtt_table     -  rtt table                 *
 *                  comp          -  diag component            *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - need, ESA_ERR - not need          *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_do_addinfo (ESA_DIAG_COMP_typ          comp,
                            TSS_CMD_HANDLE_typ        *cmd_handle,
                            TSS_RTT_rec_typ            rtt_table[1],
                            ADDINFO_rec_ptr            ess_addinfo,
                            ADDINFO_rec_ptr            get_addinfo,
                            CTSAMSG_DEST_TABLE_rec_ptr dest,
                            CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_validate_acid_type                     *
 *                                                             *
 * DESCRIPTION    : Validate acid type                         *
 *                                                             *
 * INPUT          : comp        - diag component               *
 *                  acid_type   - acid type                    *
 *                  parent_acid - parent acid                  *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : parent_oe_typ - oe typ                     *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_validate_acid_type(ESA_DIAG_COMP_typ     comp,
                             char                      * acid_type,
                             char                      * parent_oe_typ,
                             char                      * parent_acid,
                             ADMIN_PARAMS_rec_typ      * admin_params,
                             ERR_STRUCT_rec_typ        * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_alloc_cmd_handle                       *
 *                                                             *
 * DESCRIPTION    : Allocate command handle                    *
 *                                                             *
 * INPUT          : comp          - diag component             *
 *                  max_entries   - max cmd entries            *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : cmd_handle    - command handle             *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK, ESA_FATAL - err               *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_alloc_cmd_handle (ESA_DIAG_COMP_typ  comp,
                        int                          max_entries,
                        TSS_CMD_HANDLE_typ        ** cmd_handle,
                        CTSAMSG_DEST_TABLE_rec_ptr   dest,
                        CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_free_cmd_handle                        *
 *                                                             *
 * DESCRIPTION    : Free command handle                        *
 *                                                             *
 * INPUT          : cmd_handle    -  command handle            *
 *                  comp          -  diag component            *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT void TSS_free_cmd_handle (ESA_DIAG_COMP_typ            comp,
                               TSS_CMD_HANDLE_typ        ** cmd_handle,
                               CTSAMSG_DEST_TABLE_rec_ptr   dest,
                               CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_simple_key                         *
 *                                                             *
 * DESCRIPTION    : Set TSS key                                *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_simple_key(ESA_DIAG_COMP_typ          comp,
                               TSS_CMD_HANDLE_typ        *cmd_handle,
                               void                      *rtt_tbl,
                               void                      *rtt,
                               ONE_FIELD_rec_ptr          ess_pair,
                               ADDINFO_rec_ptr            get_addinfo,
                               ADDINFO_rec_ptr            addinfo,
                               CTSAMSG_DEST_TABLE_rec_ptr dest,
                               CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_optime                             *
 *                                                             *
 * DESCRIPTION    : Set OPTIME field                           *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_optime(ESA_DIAG_COMP_typ          comp,
                           TSS_CMD_HANDLE_typ        *cmd_handle,
                           void                      *rtt_tbl,
                           void                      *rtt,
                           ONE_FIELD_rec_ptr          ess_pair,
                           ADDINFO_rec_ptr            get_addinfo,
                           ADDINFO_rec_ptr            addinfo,
                           CTSAMSG_DEST_TABLE_rec_ptr dest,
                           CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_simple_lst                         *
 *                                                             *
 * DESCRIPTION    : Set TSS list (simple - without subfields)  *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_simple_lst(ESA_DIAG_COMP_typ          comp,
                               TSS_CMD_HANDLE_typ        *cmd_handle,
                               void                      *rtt_tbl,
                               void                      *rtt,
                               ONE_FIELD_rec_ptr          ess_pair,
                               ADDINFO_rec_ptr            get_addinfo,
                               ADDINFO_rec_ptr            addinfo,
                               CTSAMSG_DEST_TABLE_rec_ptr dest,
                               CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_replaced_lst                       *
 *                                                             *
 * DESCRIPTION    : Set TSS list (simple - without subfields)  *
 *                  with "REPLACE" option                      *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_replaced_lst(ESA_DIAG_COMP_typ        comp,
                               TSS_CMD_HANDLE_typ        *cmd_handle,
                               void                      *rtt_tbl,
                               void                      *rtt,
                               ONE_FIELD_rec_ptr          ess_pair,
                               ADDINFO_rec_ptr            get_addinfo,
                               ADDINFO_rec_ptr            addinfo,
                               CTSAMSG_DEST_TABLE_rec_ptr dest,
                               CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_simple_flag                        *
 *                                                             *
 * DESCRIPTION    : Set TSS flag                               *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_simple_flag(ESA_DIAG_COMP_typ          comp,
                                TSS_CMD_HANDLE_typ        *cmd_handle,
                                void                      *rtt_tbl,
                                void                      *rtt,
                                ONE_FIELD_rec_ptr          ess_pair,
                                ADDINFO_rec_ptr            get_addinfo,
                                ADDINFO_rec_ptr            addinfo,
                                CTSAMSG_DEST_TABLE_rec_ptr dest,
                                CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_admin_res                          *
 *                                                             *
 * DESCRIPTION    : Set TSS admin resource                     *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_admin_res (ESA_DIAG_COMP_typ          comp,
                               TSS_CMD_HANDLE_typ        *cmd_handle,
                               void                      *rtt_tbl,
                               void                      *rtt,
                               ONE_FIELD_rec_ptr          ess_pair,
                               ADDINFO_rec_ptr            get_addinfo,
                               ADDINFO_rec_ptr            addinfo,
                               CTSAMSG_DEST_TABLE_rec_ptr dest,
                               CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_command                            *
 *                                                             *
 * DESCRIPTION    : Set TSS command, xcommand                  *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_command(ESA_DIAG_COMP_typ          comp,
                            TSS_CMD_HANDLE_typ        *cmd_handle,
                            void                      *rtt_tbl,
                            void                      *rtt,
                            ONE_FIELD_rec_ptr          ess_pair,
                            ADDINFO_rec_ptr            get_addinfo,
                            ADDINFO_rec_ptr            addinfo,
                            CTSAMSG_DEST_TABLE_rec_ptr dest,
                            CTSAMSG_HANDLE_rec_ptr     msgs);

 /*  IS10091 - TSS_set_facility is dropped becase support for
  *            tss ealier than 5.1 was dropped.                    */

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_fac51                              *
 *                                                             *
 * DESCRIPTION    : Set TSS facility  ( TSS 5.1 )              *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_fac51(ESA_DIAG_COMP_typ          comp,
                          TSS_CMD_HANDLE_typ        *cmd_handle,
                          void                      *rtt_tbl,
                          void                      *rtt,
                          ONE_FIELD_rec_ptr          ess_pair,
                          ADDINFO_rec_ptr            get_addinfo,
                          ADDINFO_rec_ptr            addinfo,
                          CTSAMSG_DEST_TABLE_rec_ptr dest,
                          CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_ltime                              *
 *                                                             *
 * DESCRIPTION    : Set TSS ltime                              *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_ltime(ESA_DIAG_COMP_typ          comp,
                          TSS_CMD_HANDLE_typ        *cmd_handle,
                          void                      *rtt_tbl,
                          void                      *rtt,
                          ONE_FIELD_rec_ptr          ess_pair,
                          ADDINFO_rec_ptr            get_addinfo,
                          ADDINFO_rec_ptr            addinfo,
                          CTSAMSG_DEST_TABLE_rec_ptr dest,
                          CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_sitran                             *
 *                                                             *
 * DESCRIPTION    : Set TSS sitran                             *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_sitran(ESA_DIAG_COMP_typ          comp,
                           TSS_CMD_HANDLE_typ        *cmd_handle,
                           void                      *rtt_tbl,
                           void                      *rtt,
                           ONE_FIELD_rec_ptr          ess_pair,
                           ADDINFO_rec_ptr            get_addinfo,
                           ADDINFO_rec_ptr            addinfo,
                           CTSAMSG_DEST_TABLE_rec_ptr dest,
                           CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_expires                            *
 *                                                             *
 * DESCRIPTION    : Set TSS expires keyword                    *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_expires(ESA_DIAG_COMP_typ        comp,
                          TSS_CMD_HANDLE_typ        *cmd_handle,
                          void                      *rtt_tbl,
                          void                      *rtt,
                          ONE_FIELD_rec_ptr          ess_pair,
                          ADDINFO_rec_ptr            get_addinfo,
                          ADDINFO_rec_ptr            addinfo,
                          CTSAMSG_DEST_TABLE_rec_ptr dest,
                          CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_admin_simple                       *
 *                                                             *
 * DESCRIPTION    : Set TSS admin.scope    keyword             *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_admin_simple(ESA_DIAG_COMP_typ    comp,
                        TSS_CMD_HANDLE_typ           *cmd_handle,
                        void                         *rtt_tbl,
                        void                         *rtt,
                        ONE_FIELD_rec_ptr             ess_pair,
                        ADDINFO_rec_ptr               get_addinfo,
                        ADDINFO_rec_ptr               addinfo,
                        CTSAMSG_DEST_TABLE_rec_ptr    dest,
                        CTSAMSG_HANDLE_rec_ptr        msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_do_cmd                                 *
 *                                                             *
 * DESCRIPTION    : Set TSS issue TSS commands                 *
 *                                                             *
 * INPUT          : acid             - object                  *
 *                  onli_acid_type   - acid type               *
 *                  onli_evnt_action - event action            *
 *                  cmd_handle       - command handle          *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_do_cmd(ESA_DIAG_COMP_typ           comp,
                       char                      * acid,
                       OBJECT_TYPE_typ             onli_acid_type,
                       char                        onli_evnt_action,
                       TSS_CMD_HANDLE_typ        * cmd_handle,
                       ADMIN_PARAMS_rec_typ      * admin_params);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_rtt_2_addinfo                          *
 *                                                             *
 * DESCRIPTION    : Convert cmd enum to string                 *
 *                                                             *
 * INPUT          : cmd_type    - command type                 *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_rtt_2_addinfo(ESA_DIAG_COMP_typ          comp,
                              TSS_RTT_rec_typ            rtt_table[1],
                              ADDINFO_rec_ptr            addinfo,
                              CTSAMSG_DEST_TABLE_rec_ptr dest,
                              CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_do_create                              *
 *                                                             *
 * DESCRIPTION    : Build and issue "CREATE" command           *
 *                                                             *
 * INPUT          : comp        - diag component               *
 *                  cmd_handle  - command handle               *
 *                  acid        - object ID                    *
 *                  parent      - parent                       *
 *                  acid_type   - type of acid                 *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_do_create(ESA_DIAG_COMP_typ            comp,
                          TSS_CMD_HANDLE_typ         * cmd_handle,
       /*IS10020*/        USER_PARAMS_rec_typ        * essu_params,
                          char                       * acid,
                          char                       * parent_acid,
                          char                       * acid_type,
                          OBJECT_TYPE_typ              onli_acid_type,
                          ADMIN_PARAMS_rec_typ       * admin_params,
                          ERR_STRUCT_rec_typ         * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_admin_details                      *
 *                                                             *
 * DESCRIPTION    : Get SA-Agent administrator details         *
 *                                                             *
 * INPUT          : dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : admin       - admin structure              *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_get_admin_details(ESA_DIAG_COMP_typ            comp,
                                  TSS_ADMIN_rec_typ          * admin,
                                  CTSAMSG_DEST_TABLE_rec_ptr   dest,
                                  CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_issue_cmd                              *
 *                                                             *
 * DESCRIPTION    : Issue TSS commande                         *
 *                                                             *
 * INPUT          : comp        - diag component               *
 *                  cmd         - command                      *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_issue_cmd(ESA_DIAG_COMP_typ          comp,
                       TSS_CMD_BUF_rec_typ         * cmd,
                       char                        * onli_acid,
                       OBJECT_TYPE_typ               onli_acid_type,
                       char                          onli_evnt_action,
                       ADMIN_PARAMS_rec_typ        * admin_params);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_admin_resclass                     *
 *                                                             *
 * DESCRIPTION    : Set TSS admin.resclass keyword             *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_admin_resclass(ESA_DIAG_COMP_typ comp,
                          TSS_CMD_HANDLE_typ        *cmd_handle,
                          void                      *rtt_tbl,
                          void                      *rttv,
                          ONE_FIELD_rec_ptr          ess_pair,
                          ADDINFO_rec_ptr            get_addinfo,
                          ADDINFO_rec_ptr            addinfo,
                          CTSAMSG_DEST_TABLE_rec_ptr dest,
                          CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_simple_segm                        *
 *                                                             *
 * DESCRIPTION    : Set TSS segment fields                     *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_simple_segm(ESA_DIAG_COMP_typ    comp,
                          TSS_CMD_HANDLE_typ        *cmd_handle,
                          void                      *rtt_tbl,
                          void                      *rttv,
                          ONE_FIELD_rec_ptr          ess_pair,
                          ADDINFO_rec_ptr            get_addinfo,
                          ADDINFO_rec_ptr            addinfo,
                          CTSAMSG_DEST_TABLE_rec_ptr dest,
                          CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_do_revoke_status                       *
 *                                                             *
 * DESCRIPTION    : User params (revoke status) processing     *
 *                                                             *
 * INPUT          : user_params                                *
 *                  addinfo                                    *
 *                  get_user_params                            *
 *                  get_addinfo                                *
 *                  cmd_handle                                 *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_do_revoke_status(ESA_DIAG_COMP_typ       comp,
                             TSS_CMD_HANDLE_typ        * cmd_handle,
                             USER_PARAMS_rec_typ       * essu_params,
                             ADDINFO_rec_typ           * ess_addinfo,
                             USER_PARAMS_rec_typ       * getu_params,
                             ADDINFO_rec_typ           * get_addinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr  dest,
               /* WS10009    CTSAMSG_HANDLE_rec_ptr      msgs); */
               /* WS10009 */ CTSAMSG_HANDLE_rec_ptr      msgs,
               /* WS10009 */ ADMIN_PARAMS_rec_typ      * admin_params);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_do_password                            *
 *                                                             *
 * DESCRIPTION    : User params password fields processing     *
 *                                                             *
 * INPUT          : user_params                                *
 *                  addinfo                                    *
 *                  cmd_handle                                 *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_do_password(ESA_DIAG_COMP_typ       comp,
                        TSS_CMD_HANDLE_typ        * cmd_handle,
                        USER_PARAMS_rec_typ       * essu_params,
                        ADDINFO_rec_typ           * ess_addinfo,
                        CTSAMSG_DEST_TABLE_rec_ptr  dest,
                        CTSAMSG_HANDLE_rec_ptr      msgs);

 /************************ IS10020 *****************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_password                           *
 *                                                             *
 * DESCRIPTION    : User params password fields processing     *
 *                                                             *
 * INPUT          : user_params                                *
 *                  addinfo                                    *
 *                  cmd.buffer                                 *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_password(ESA_DIAG_COMP_typ      comp,
                        char                      * cmd_buffer,
                        USER_PARAMS_rec_typ       * essu_params,
      /*IS10020         ADDINFO_rec_typ           * ess_addinfo,*/
                        CTSAMSG_DEST_TABLE_rec_ptr  dest,
                        CTSAMSG_HANDLE_rec_ptr      msgs);

 /******************* IS10020 end *****************************/

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_check_moving                           *
 *                                                             *
 * DESCRIPTION    : Check whether need MOVE operation          *
 *                                                             *
 * INPUT          : ess_acid          -   user/group           *
 *                  ess_parent_acid   -   parent_oe    ess     *
 *                  ess_addinfo       -   addinfo from ess     *
 *                  get_parent_acid   -   parent_oe    get     *
 *                  get_addinfo       -   addinfo from get     *
 *                  admin_params                               *
 *                  err                                        *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_check_moving(ESA_DIAG_COMP_typ         comp,
                         char                        * obj_type,
                         TSS_RTT_rec_typ               rtt_table[1],
                         char                        * ess_acid,
                         char                        * ess_parent_acid,
                         ADDINFO_rec_typ             * ess_addinfo,
                         char                        * get_acid,
                         char                        * get_parent_acid,
                         ADDINFO_rec_typ             * get_addinfo,
                         OBJECT_TYPE_typ               onli_acid_type,
                         ADMIN_PARAMS_rec_typ        * admin_params,
                         ERR_STRUCT_rec_typ          * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_trap_cmd                               *
 *                                                             *
 * DESCRIPTION    : Issue TSS commands, return output          *
 *                                                             *
 * INPUT          : comp        - diag component               *
 *                  cmd         - command                      *
 *                  line_desc   - line description (optional)  *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : trap_buffer                                *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_trap_cmd(ESA_DIAG_COMP_typ          comp,
                     TSS_CMD_BUF_rec_typ         *  cmd,
                     TSS_TRAP_BUF_rec_typ        ** trap_buffer,
                     TSS_OUTPUT_typ               * line_desc,
                     CTSAMSG_DEST_TABLE_rec_ptr     dest,
                     CTSAMSG_HANDLE_rec_ptr         msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_trap_vars                              *
 *                                                             *
 * DESCRIPTION    : Issue TSS commands and return requested var*
 *                                                             *
 * INPUT          : comp        - diag component               *
 *                  cmd         - command                      *
 *                  line_desc   - line description table       *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_trap_vars(ESA_DIAG_COMP_typ              comp,
                          TSS_CMD_MODE_typ               mode,
                          TSS_CMD_BUF_rec_typ          * cmd,
                          TSS_OUTPUT_typ                 line_desc[1],
                          CTSAMSG_DEST_TABLE_rec_ptr     dest,
                          CTSAMSG_HANDLE_rec_ptr         msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_alloc_trap_handle                      *
 *                                                             *
 * DESCRIPTION    : Allocate command trap handle               *
 *                                                             *
 * INPUT          : comp          - diag component             *
 *                  max_entries   - max cmd entries            *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : trap_handle   - command trap handle        *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK, ESA_FATAL - err               *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_alloc_trap_handle (ESA_DIAG_COMP_typ comp,
                        int                          max_entries,
                        TSS_TRAP_BUF_rec_typ       **trap_handle,
                        CTSAMSG_DEST_TABLE_rec_ptr   dest,
                        CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_realloc_trap_buffer                    *
 *                                                             *
 * DESCRIPTION    : RE Allocate trap buffer                    *
 *                                                             *
 * INPUT          : cmd_handle    -  trap_handle               *
 *                  incr          -  increment value           *
 *                  comp          -  diag component            *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK, ESA_FATAL - err               *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_realloc_trap_buffer(ESA_DIAG_COMP_typ       comp,
                               TSS_TRAP_BUF_rec_typ        *trap_handle,
                               int                          incr,
                               CTSAMSG_DEST_TABLE_rec_ptr   dest,
                               CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_free_trap_handle                       *
 *                                                             *
 * DESCRIPTION    : Free trap handle                           *
 *                                                             *
 * INPUT          : trap_handle   -  trap handle               *
 *                  comp          -  diag component            *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT void TSS_free_trap_handle(ESA_DIAG_COMP_typ        comp,
                           TSS_TRAP_BUF_rec_typ       **trap_handle,
                           CTSAMSG_DEST_TABLE_rec_ptr   dest,
                           CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_save_output                            *
 *                                                             *
 * DESCRIPTION    : Put TSS command output into the buffer     *
 *                                                             *
 * INPUT          : trap_handle    -    trap handle            *
 *                  cmd            -    command                *
 *                  comp           -    diag component         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_save_output (ESA_DIAG_COMP_typ      comp,
                         TSS_TRAP_BUF_rec_typ      *trap_handle,
                         char                      *line,
                         CTSAMSG_DEST_TABLE_rec_ptr dest,
                         CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_trap_buf_dump                          *
 *                                                             *
 * DESCRIPTION    : Dump trap buffer                           *
 *                                                             *
 * INPUT          : trap_handle  - trap handle                 *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT void TSS_trap_buf_dump(ESA_DIAG_COMP_typ     comp,
                            TSS_TRAP_BUF_rec_typ *trap_handle);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_do_trap_buf                            *
 *                                                             *
 * DESCRIPTION    : List output processing                     *
 *                                                             *
 * INPUT          : get_info - trap buffer                     *
 *                  acid_type- acid type                       *
 *                  list_info- list descriptions               *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 ESA_RC TSS_do_trap_buf(ESA_DIAG_COMP_typ            comp,
                        TSS_TRAP_BUF_rec_typ       * get_info,
                        TSS_OUTPUT_typ               list_info[1],
                        CTSAMSG_DEST_TABLE_rec_typ * dest,
                        CTSAMSG_HANDLE_rec_typ     * msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_chk_acid                               *
 *                                                             *
 * DESCRIPTION    : Check TSS acid existance                   *
 *                                                             *
 * INPUT          : acid     - acid                            *
 *                  acid_type- acid type                       *
 *                  test     - Check type - EXIST, NOEXIST     *
 *                  msg_flag - Issue existance error message   *
 *                  admin_params                               *
 *                  err                                        *
 *                                                             *
 * OUTPUT         : real_acid_type                             *
 *                  real_obj_type                              *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 *                  ESA_OK   - Test OK                         *
 *                  ESA_ERR  - Test FAILED                     *
 *                  ESA_FATAL- Intrenal Error                  *
 *                                                             *
 **************************************************************/
 EXT ESA_RC TSS_chk_acid (ESA_DIAG_COMP_typ            comp,
                          char                       * acid,
                          char                       * acid_type,
                          OBJECT_TYPE_typ              object_type,
                          OBJ_EXISTS_typ               test,
                          int                          msg_flag,
                          char                       * real_acid_type,
                          OBJECT_TYPE_typ            * real_object_type,
                          ADMIN_PARAMS_rec_typ       * admin_params,
                          ERR_STRUCT_rec_typ         * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_simple_var                         *
 *                                                             *
 * DESCRIPTION    : Get simple var from output line            *
 *                                                             *
 * INPUT          : info     - list processing handle          *
 *                  list_info- line description record         *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC  TSS_get_simple_var(ESA_DIAG_COMP_typ            comp,
                                TSS_LIST_HANDLE_rec_typ    * handle,
                                TSS_OUTP_typ               * vars,
                                CTSAMSG_DEST_TABLE_rec_ptr   dest,
                                CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_extract_acid                           *
 *                                                             *
 * DESCRIPTION    : Extract acid from line                     *
 *                  Very similar to get_simple_var, but        *
 *                  this program free from vars loop, and      *
 *                  sets acid with offset 1 ( for sort symbol) *
 *                                                             *
 * INPUT          : info     - list processing handle          *
 *                  line_desc- line description record         *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC  TSS_extract_acid(ESA_DIAG_COMP_typ            comp,
                              TSS_LIST_HANDLE_rec_typ    * handle,
                              TSS_OUTP_typ               * vars,
                              CTSAMSG_DEST_TABLE_rec_ptr   dest,
                              CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_acids_list                         *
 *                                                             *
 * DESCRIPTION    : Get list of acids of requested type        *
 *                                                             *
 * INPUT          : comp      - diag component                 *
 *                  acid_type - acids type                     *
 *                  parent_oe - container                      *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : list      - list of acids                  *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_get_acids_list(ESA_DIAG_COMP_typ       comp,
                               char                 *  acid_type,
                               TSS_TRAP_BUF_rec_typ ** list,
                               TSS_GET_TYPES_rec_typ   get_types[1],
                               OE_typ                  oe,
                               ADMIN_PARAMS_rec_typ  * admin_params,
                               ERR_STRUCT_rec_typ    * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_init_get_handle                        *
 *                                                             *
 * DESCRIPTION    : Check and create get handle                *
 *                                                             *
 * INPUT          : comp      - diag component                 *
 *                  handle    - entered handle                 *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : get_handle- get handle                     *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_init_get_handle(ESA_DIAG_COMP_typ         comp,
                             TSSCFILE_ERR_BEH_typ         err_action,
                             TSS_GET_HANDLE_typ        ** get_handle,
                             void                      ** handle,
                             ADDINFO_rec_ptr              addinfo,
                             ADMIN_PARAMS_rec_typ       * admin_params,
                             ERR_STRUCT_rec_typ         * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_free_get_handle                        *
 *                                                             *
 * DESCRIPTION    : Free get handle                            *
 *                                                             *
 * INPUT          : comp      - diag component                 *
 *                  handle    - entered handle                 *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                 e                     *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_free_get_handle (ESA_DIAG_COMP_typ            comp,
                                 void                      ** handle,
                                 CTSAMSG_DEST_TABLE_rec_typ * dest,
                                 CTSAMSG_HANDLE_rec_typ     * msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_select_acids_list_from                 *
 *                                                             *
 * DESCRIPTION    : acids list processing (selected nessecc )  *
 *                                                             *
 * INPUT          : comp      - diag component                 *
 *                  acids_list- acids list                     *
 *                  acid_type - acid type                      *
 *                  acid_from - acids from                     *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_select_acids_list_from(ESA_DIAG_COMP_typ    comp,
                               TSS_TRAP_BUF_rec_typ       * acids_list,
                               char                       * acid_type,
                               char                       * acid_from,
                               CTSAMSG_DEST_TABLE_rec_typ * dest,
                               CTSAMSG_HANDLE_rec_typ     * msgs);

/**************************************************************
*                                                             *
* PROCEDURE NAME : TSS_output_to_addinfo                      *
*                                                             *
* DESCRIPTION    : Separate information reutrned from TSSCFILE*
*                  and insert it to addinfo                   *
*                                                             *
* INPUT          : acid_type       - acid type                *
*                  addinfo         - addinfo area             *
*                  laddinfo        - local addinfo            *
*                  dest                                       *
*                  msgs                                       *
*                                                             *
* OUTPUT         : none                                       *
*                                                             *
* RETURN VALUE   : ESA_RC                                     *
*                                                             *
/**************************************************************/

ESA_RC TSS_output_to_addinfo(ESA_DIAG_COMP_typ          comp,
 /*IS10026 use 5.1's recs    TSSCFILE_REC_typ         *tsscf_recs[1],*/
                 /*IS10026*/ TSSCFILE_REC_typ         *tsscf_recs_51[1],
                             TSS_GET_HANDLE_typ       * get_handle,
                             FILE                     * file_out,
                             int                      * rec_cnt,
                             char                     * acid_type,
                             ADDINFO_rec_ptr            addinfo,
                             ADDINFO_rec_ptr            laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr dest,
                             CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_lst_buf_dump                           *
 *                                                             *
 * DESCRIPTION    : Dump list buffer                           *
 *                                                             *
 * INPUT          : lst_handle  - command handle               *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 void TSS_lst_buf_dump(ESA_DIAG_COMP_typ    comp,
                       TSS_LST_FIELD_typ   *lst_handle);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_realloc_lst_buffer                     *
 *                                                             *
 * DESCRIPTION    : RE Allocate list buffer                    *
 *                                                             *
 * INPUT          : lst_handle    -  cmd_handle                *
 *                  comp          -  diag component            *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK, ESA_FATAL - err               *
 *                                                             *
 **************************************************************/

 ESA_RC TSS_realloc_lst_buffer (ESA_DIAG_COMP_typ    comp,
                        TSS_LST_FIELD_typ          * lst_handle,
                        CTSAMSG_DEST_TABLE_rec_ptr   dest,
                        CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_alloc_lst_handle                       *
 *                                                             *
 * DESCRIPTION    : Allocate list fields handle                *
 *                                                             *
 * INPUT          : comp          - diag component             *
 *                  max_entries   - max cmd entries            *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : cmd_handle    - command handle             *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK, ESA_FATAL - err               *
 *                                                             *
 **************************************************************/

 ESA_RC TSS_alloc_lst_handle (ESA_DIAG_COMP_typ            comp,
                              int                          max_entries,
                              TSS_LST_FIELD_typ         ** lst_handle,
                              CTSAMSG_DEST_TABLE_rec_ptr   dest,
                              CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_free_lst_handle                        *
 *                                                             *
 * DESCRIPTION    : Free lst handle                            *
 *                                                             *
 * INPUT          : lst_handle    -  command handle            *
 *                  comp          -  diag component            *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT void TSS_free_lst_handle (ESA_DIAG_COMP_typ        comp,
                           TSS_LST_FIELD_typ         ** lst_handle,
                           CTSAMSG_DEST_TABLE_rec_ptr   dest,
                           CTSAMSG_HANDLE_rec_ptr       msgs);

/**************************************************************
*                                                             *
* PROCEDURE NAME : TSS_cfile_activate                         *
*                                                             *
* DESCRIPTION    : Activate tsscfile utility                  *
*                                                             *
* INPUT          : dest             -  destinations table     *
*                  msgs             -  messages buffer        *
*                                                             *
* OUTPUT         : none                                       *
*                                                             *
* RETURN VALUE   : ESA_RC                                     *
*                                                             *
**************************************************************/

ESA_RC TSS_cfile_activate(ESA_DIAG_COMP_typ            comp,
                          CTSAMSG_DEST_TABLE_rec_ptr   dest,
                          CTSAMSG_HANDLE_rec_ptr       msgs);

/**************************************************************
*                                                             *
* PROCEDURE NAME : TSS_reset_list_buf                         *
*                                                             *
* DESCRIPTION    : Reset list buffer                          *
*                                                             *
* INPUT          : list_b          - list buf ptr             *
*                                                             *
* OUTPUT         : none                                       *
*                                                             *
* RETURN VALUE   : none                                       *
*                                                             *
/**************************************************************/

EXT void TSS_reset_list_buf(ESA_DIAG_COMP_typ         comp,
                            TSSCFILE_HANDLE_typ     * h_desc);

/**************************************************************
*                                                             *
* PROCEDURE NAME : TSS_put_list_info                          *
*                                                             *
* DESCRIPTION    : Create list info fields                    *
*                                                             *
* INPUT          : h_desc          - list buf ptr             *
*                                                             *
* OUTPUT         : none                                       *
*                                                             *
* RETURN VALUE   : none                                       *
*                                                             *
/**************************************************************/

 EXT void TSS_put_list_info(ESA_DIAG_COMP_typ            comp,
                            TSSCFILE_HANDLE_typ        * h_desc,
                            ADDINFO_rec_ptr              addinfo,
                            CTSAMSG_DEST_TABLE_rec_ptr   dest,
                            CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_trap_buf_sort                          *
 *                                                             *
 * DESCRIPTION    : Sort trap buffer                           *
 *                                                             *
 * INPUT          : trap_handle  - trap handle                 *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT void TSS_trap_buf_sort(ESA_DIAG_COMP_typ     comp,
                            TSS_TRAP_BUF_rec_typ *trap_handle);

/**************************************************************
*                                                             *
* PROCEDURE NAME : TSS_get_parent_oe                          *
*                                                             *
* DESCRIPTION    : Fill up the parent_oe field                *
*                                                             *
* INPUT          : addinfo         - addinfo area             *
*                  laddinfo        - local addinfo area       *
*                  dest                                       *
*                  msgs                                       *
*                                                             *
* OUTPUT         : parent_oe                                  *
*                                                             *
* RETURN VALUE   : ESA_OK, ESA_FATAL                          *
*                                                             *
/**************************************************************/

EXT ESA_RC TSS_get_parent_oe(ESA_DIAG_COMP_typ             comp,
                             char                        * t_kwd,
                             char                        * acid_type,
                             char                        * parent_oe,
                             ADDINFO_rec_ptr               addinfo,
                             ADDINFO_rec_ptr               laddinfo,
       /*IS10091             CTSAMSG_DEST_TABLE_rec_typ  * dest,
                             CTSAMSG_HANDLE_rec_typ      * msgs);  */
       /* IS10091 */      ADMIN_PARAMS_rec_typ      *admin_params);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_type_tss2ess                           *
 *                                                             *
 * DESCRIPTION    : Convert acid types                         *
 *                                                             *
 * INPUT          : acid_type - acid type                      *
 *                                                             *
 * OUTPUT         : acid_type - acid type                      *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/
 EXT void TSS_type_tss2ess(ESA_DIAG_COMP_typ      comp,
                           char                 * acid_type);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_strip_val                              *
 *                                                             *
 * DESCRIPTION    : Strip string                               *
 *                                                             *
 * INPUT          : data      - data                           *
 *                  c         - strip symbol                   *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT void TSS_strip_val(char  *data, char   c, char  mode);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_global_init                            *
 *                                                             *
 * DESCRIPTION    : Initialize global table                    *
 *                                                             *
 * INPUT          : comp          - diag component             *
 *                  admin_params                               *
 *                  err                                        *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK, ESA_FATAL - err               *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_global_init (ESA_DIAG_COMP_typ       comp,
                             ADMIN_PARAMS_rec_typ  * admin_params,
                             ERR_STRUCT_rec_typ    * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_acid_header                        *
 *                                                             *
 * DESCRIPTION    : Trap cmd and build acid related field      *
 *                  dept, deiv , zone                          *
 *                                                             *
 * INPUT          : acid     - acid                            *
 *                  admin_params                               *
 *                  err                                        *
 *                                                             *
 * OUTPUT         : acid_info                                  *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_get_acid_header(ESA_DIAG_COMP_typ        comp,
                            TSS_CMD_MODE_typ             mode,
                            char                       * acid,
                            TSS_ACID_HEADER_rec_typ    * acid_info,
                            ADMIN_PARAMS_rec_typ       * admin_params,
                            ERR_STRUCT_rec_typ         * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_make_modify_vars                       *
 *                                                             *
 * DESCRIPTION    : MODIFY cmd output processing               *
 *                                                             *
 * INPUT          : get_info    - trap buffer                  *
 *                  modify_info - modify line desc             *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_make_modify_vars(ESA_DIAG_COMP_typ   comp,
                        TSS_TRAP_BUF_rec_typ       * get_info,
                        TSS_MODIFY_REC_typ         * modify_info[1],
                        CTSAMSG_DEST_TABLE_rec_typ * dest,
                        CTSAMSG_HANDLE_rec_typ     * msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_rdt_table                          *
 *                                                             *
 * DESCRIPTION    : Get RDT table and save allowed restypes    *
 *                                                             *
 * INPUT          : admin_params                               *
 *                                                             *
 * OUTPUT         : global_rdt_table_entries_number            *
 *                  rdt_table                                  *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_get_rdt_table(ESA_DIAG_COMP_typ      comp,
                          int                      * rdt_table_entries,
                          RDT_RESTYPE_typ            rdt_table[1],
                          ADMIN_PARAMS_rec_typ     * admin_params,
                          ERR_STRUCT_rec_typ       * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_check_restype                          *
 *                                                             *
 * DESCRIPTION    : Check restype aginst RDT table             *
 *                                                             *
 * INPUT          : none                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : OK - found in RDT table, ERR - not found   *
 *                  FATAL - other errors                       *
 **************************************************************/

 EXT ESA_RC TSS_check_restype(ESA_DIAG_COMP_typ       comp,
                              RESOURCE_typ            res_type);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_modify_info                        *
 *                                                             *
 * DESCRIPTION    : Trap cmd and build modify related fields   *
 *                                                             *
 * INPUT          : admin_params                               *
 *                  err                                        *
 *                                                             *
 * OUTPUT         : modify_info                                *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_get_modify_info(ESA_DIAG_COMP_typ        comp,
                            TSS_MODIFY_RET_typ         * modify_info,
                            ADMIN_PARAMS_rec_typ       * admin_params,
                            ERR_STRUCT_rec_typ         * err);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_global_segments                    *
 *                                                             *
 * DESCRIPTION    : Return segments table ptr                  *
 *                                                             *
 * INPUT          : none                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : segment table ptr                          *
 *                                                             *
 **************************************************************/

 EXT TSS_SGM_rec_typ  *   TSS_get_global_segments ( void );

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_global_rtt                         *
 *                                                             *
 * DESCRIPTION    : Return rtt      table ptr                  *
 *                                                             *
 * INPUT          : none                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : rtt     table ptr                          *
 *                                                             *
 **************************************************************/

 EXT TSS_RTT_rec_typ  *   TSS_get_global_rtt( void );

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_global_rtt_num_items               *
 *                                                             *
 * DESCRIPTION    : Return rtt  num items                      *
 *                                                             *
 * INPUT          : none                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : rtt  num items                             *
 *                                                             *
 **************************************************************/

 EXT short TSS_get_global_rtt_num_items ( void );

 /*   TSS_get_global_tssc_desc is no longer needed since
  *   the tssc file descriptor table ptrs are kept in
  *   apiinit_handle area.                            IS10091
  **************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_global_tssc_desc                   *
 *                                                             *
 * DESCRIPTION    : Return tssc file description table ptr     *
 *                                                             *
 * INPUT          : none                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : rtt  num items                             *
 *                                                             *
 **************************************************************

 EXT TSSCFILE_REC_typ  ** TSS_get_global_tssc_desc(char    *req);
 */

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_global_parameter                   *
 *                                                             *
 * DESCRIPTION    : Get global parameter                       *
 *                                                             *
 * INPUT          : comp          - diag component             *
 *                  param_k       - parameter key              *
 *                                                             *
 * OUTPUT         : param_v                                    *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_get_global_parameter(ESA_DIAG_COMP_typ       comp,
                      char                                 * param_k,
                      char                                 * param_v,
                      CTSAMSG_DEST_TABLE_rec_typ           * dest,
                      CTSAMSG_HANDLE_rec_typ               * msgs);

 /* WS10083 - start */
 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_global_term                            *
 *                                                             *
 * DESCRIPTION    : Terminate TSS global environment created   *
 *                  by TSS_global_init.                        *
 *                                                             *
 * INPUT          : comp          - diag component             *
 *                  admin_params                               *
 *                  err                                        *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK, ESA_FATAL - err               *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_global_term (ESA_DIAG_COMP_typ       comp,
                             ADMIN_PARAMS_rec_typ  * admin_params,
                             ERR_STRUCT_rec_typ    * err);

 /* WS10083 - end */

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_empty_flags                        *
 *                                                             *
 * DESCRIPTION    : Set empty flags vars to FLAG_OFF           *
 *                                                             *
 * INPUT          : cmd_type    - command type                 *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_empty_flags(ESA_DIAG_COMP_typ          comp,
                                ADDINFO_rec_ptr            addinfo,
                                CTSAMSG_DEST_TABLE_rec_ptr dest,
                                CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_set_user_lst                           *
 *                                                             *
 * DESCRIPTION    : Set TSS user list field                    *
 *                                                             *
 * INPUT          : see func prototype                         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_set_user_lst (ESA_DIAG_COMP_typ       comp,
                           TSS_CMD_HANDLE_typ        *cmd_handle,
                           void                      *rtt_table,
                           void                      *rttv,
                           ONE_FIELD_rec_ptr          ess_pair,
                           ADDINFO_rec_ptr            get_addinfo,
                           ADDINFO_rec_ptr            addinfo,
                           CTSAMSG_DEST_TABLE_rec_ptr dest,
                           CTSAMSG_HANDLE_rec_ptr     msgs);

/**************************************************************
*                                                             *
* PROCEDURE NAME : TSS_list_proc                              *
*                                                             *
* DESCRIPTION    : The main list proc router                  *
*                                                             *
* INPUT          : comp        - diag component               *
*                  keyword     - keyword                      *
*                  val         - value                        *
*                  subf_t      - subfield table               *
*                  h_desc      - het handle                   *
*                  r_desc      - record description           *
*                  d_desc      - data description             *
*                  dest                                       *
*                  msgs                                       *
*                                                             *
* OUTPUT         : none                                       *
*                                                             *
* RETURN VALUE   : ESA_RC                                     *
*                                                             *
/**************************************************************/

 EXT ESA_RC TSS_list_proc(ESA_DIAG_COMP_typ            comp,
                          TSS_SUBF_typ                 subf_t[1],
                          char                       * val,
                          TSSCFILE_HANDLE_typ        * h_desc,
                          TSSCFILE_REC_typ           * r_desc,
                          TSSCFILE_DESCR_typ         * d_desc,
                          char                       * key_val,
                          ADDINFO_rec_ptr              addinfo,
                          ADDINFO_rec_ptr              laddinfo,
                          CTSAMSG_DEST_TABLE_rec_ptr   dest,
                          CTSAMSG_HANDLE_rec_ptr       msgs);

/**************************************************************
*                                                             *
* PROCEDURE NAME : TSS_put_to_addinfo                         *
*                                                             *
* DESCRIPTION    : Put data to addinfo                        *
*                                                             *
* INPUT          : comp        - diag component               *
*                  keyword     - keyword                      *
*                  value       - value                        *
*                  addinfo     - addinfo ptr                  *
*                  allow_ins   - allowed insert(only for local*
*                  dest                                       *
*                  msgs                                       *
*                                                             *
* OUTPUT         : none                                       *
*                                                             *
* RETURN VALUE   : none                                       *
*                                                             *
/**************************************************************/

 EXT ESA_RC TSS_put_to_addinfo(ESA_DIAG_COMP_typ            comp,
                               char                       * keyword,
                               char                       * value,
                               ADDINFO_rec_ptr              addinfo,
                               int                          allow_ins,
                               CTSAMSG_DEST_TABLE_rec_ptr   dest,
                               CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_ConvertDateESS2TSS                     *
 *                                                             *
 * DESCRIPTION    : Convert ESS date to TSS format             *
 *                                                             *
 * INPUT          : date_format                                *
 *                  ess_date                                   *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : tss_date                                   *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_ConvertDateESS2TSS( ESA_DIAG_COMP_typ   comp,
                            char                       *date_format,
                            char                       *ess_date,
                            char                       *tss_date,
                            CTSAMSG_DEST_TABLE_rec_ptr  dest,
                            CTSAMSG_HANDLE_rec_ptr      msgs);

/**************************************************************
*                                                             *
* PROCEDURE NAME : TSS_get_record_id                          *
*                                                             *
* DESCRIPTION    : Get record id1, record id2                 *
*                                                             *
* INPUT          : record          - record                   *
*                  dest                                       *
*                  msgs                                       *
*                                                             *
* OUTPUT         : id1             - rec id1                  *
*                  id2             - rec id2                  *
*                                                             *
* RETURN VALUE   : none                                       *
*                                                             *
/**************************************************************/

EXT void TSS_get_rec_id(ESA_DIAG_COMP_typ         comp,
                        char                    * record,
                        char                    * id1,
                        char                    * id2);

/**************************************************************
*                                                             *
* PROCEDURE NAME : TSS_select_rec_desc                        *
*                                                             *
* DESCRIPTION    : Search record description                  *
*                                                             *
* INPUT          : id1       - id1                            *
*                                                             *
* OUTPUT         : none                                       *
*                                                             *
* RETURN VALUE   : NULL - not found, ptr to rec description   *
*                                                             *
/**************************************************************/

 EXT TSSCFILE_REC_typ * TSS_select_rec_desc(ESA_DIAG_COMP_typ comp,
                             char               * id1,
 /*IS10026 use 5.1's recs    TSSCFILE_REC_typ   * tsscf_recs[1],*/
                 /*IS10026*/ TSSCFILE_REC_typ   * tsscf_recs_51[1],
                       CTSAMSG_DEST_TABLE_rec_ptr  dest, /*BS10014*/
                       CTSAMSG_HANDLE_rec_typ   * msgs); /*BS10014*/

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_check_rec_dep                          *
 *                                                             *
 * DESCRIPTION    : Check rec dependencies                     *
 *                                                             *
 * INPUT          : prev_id   - previous rec id                *
 *                  dep_id    - dep ids                        *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_check_rec_dep(ESA_DIAG_COMP_typ        comp,
                          char                       * rec_id,
                          char                       * prev_id,
                          char                       * dep_id,
                          CTSAMSG_DEST_TABLE_rec_ptr   dest,
                          CTSAMSG_HANDLE_rec_ptr       msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_ConvertDateTSS2ESS                     *
 *                                                             *
 * DESCRIPTION    : Convert date from TSS format to ESS format *
 *                                                             *
 * INPUT          : comp        - diag component               *
 *                  tssdate     - tss date                     *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : tssdate     - ess date                     *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_ConvertDateTSS2ESS(ESA_DIAG_COMP_typ        comp,
                               char                       * tssdate,
                               CTSAMSG_DEST_TABLE_rec_ptr   dest,
                               CTSAMSG_HANDLE_rec_ptr       msgs);

 /********************************************************
  *                                                      *
  *        CMD  related functions                        *
  *                                                      *
  ********************************************************/

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_send_cmd                               *
 *                                                             *
 * DESCRIPTION    : Send cmd to TSS                            *
 *                                                             *
 * INPUT          : comp        - diag component               *
 *                  cmd         - command                      *
 *                  cmd_handle  - command handle               *
 *                  ret_buf     - return buffer                *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_send_cmd(ESA_DIAG_COMP_typ               comp,
                            TSS_CMD_MODE_typ              mode,
                            TSS_CMD_BUF_rec_typ         * cmd,
                            char                        * cmd_handle,
                            int                           print_cmd,
                            CTSAMSG_DEST_TABLE_rec_ptr    dest,
                            CTSAMSG_HANDLE_rec_ptr        msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_get_output                             *
 *                                                             *
 * DESCRIPTION    : Get TSS output                             *
 *                                                             *
 * INPUT          : comp        - diag component               *
 *                  cmd_handle  - command handle               *
 *                  ret_buf     - return buffer                *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_get_output(ESA_DIAG_COMP_typ             comp,
                           char                        * cmd_handle,
                           TSS_CMD_BUF_rec_typ         * ret_buf,
                           CTSAMSG_DEST_TABLE_rec_ptr    dest,
                           CTSAMSG_HANDLE_rec_ptr        msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_identify_rec                           *
 *                                                             *
 * DESCRIPTION    : Identify record according desciption       *
 *                                                             *
 * INPUT          : info     - list processing handle          *
 *                  line_desc- line description record         *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_identify_rec(ESA_DIAG_COMP_typ            comp,
                             TSS_LIST_HANDLE_rec_typ    * handle,
                             TSS_OUTPUT_typ             * list_dsc,
                             CTSAMSG_DEST_TABLE_rec_typ * dest,
                             CTSAMSG_HANDLE_rec_typ     * msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_free_output                            *
 *                                                             *
 * DESCRIPTION    : Free output buffers                        *
 *                                                             *
 * INPUT          : comp        - diag component               *
 *                  cmd_handle  - command handle               *
 *                  ret_buf     - return buffer                *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_free_output(ESA_DIAG_COMP_typ             comp,
                            char                        * cmd_handle,
                            CTSAMSG_DEST_TABLE_rec_ptr    dest,
                            CTSAMSG_HANDLE_rec_ptr        msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_use_root_object                        *
 *                                                             *
 * DESCRIPTION    : Return root object usage                   *
 *                  (whether need root name)                   *
 *                                                             *
 * INPUT          : none                                       *
 *                                                             *
 * OUTPUT         : root_name                                  *
 *                                                             *
 * RETURN VALUE   : root                                       *
 *                                                             *
 **************************************************************/

 EXT int  TSS_use_root_object(ESA_DIAG_COMP_typ           comp,
                          char                          * root_name,
                          CTSAMSG_DEST_TABLE_rec_typ    * dest,
                          CTSAMSG_HANDLE_rec_typ        * msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_cmd_buf_dump                           *
 *                                                             *
 * DESCRIPTION    : Dump command buffer                        *
 *                                                             *
 * INPUT          : cmd_handle  - command handle               *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : none                                       *
 *                                                             *
 **************************************************************/

 EXT void TSS_cmd_buf_dump(ESA_DIAG_COMP_typ     comp,
                           TSS_CMD_HANDLE_typ   *cmd_handle,
                           char                 *acid);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_put_cmd                                *
 *                                                             *
 * DESCRIPTION    : Put TSS command into the cmd buffer        *
 *                                                             *
 * INPUT          : cmd_handle     -    cmd handle             *
 *                  cmd            -    command                *
 *                  comp           -    diag component         *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK  , ESA_FATAL - err             *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_put_cmd (ESA_DIAG_COMP_typ          comp,
                         TSS_CMD_HANDLE_typ        *cmd_handle,
                         TSS_CMD_SET_rec_typ       *cmd,
                         CTSAMSG_DEST_TABLE_rec_ptr dest,
                         CTSAMSG_HANDLE_rec_ptr     msgs);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_convert_cmd                            *
 *                                                             *
 * DESCRIPTION    : Convert cmd enum to string                 *
 *                                                             *
 * INPUT          : cmd_type    - command type                 *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : string cmd                                 *
 *                                                             *
 **************************************************************/

 EXT char * TSS_convert_cmd (TSS_CMD_typ   cmd);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_convert_restype                        *
 *                                                             *
 * DESCRIPTION    : Convert restype                            *
 *                                                             *
 * INPUT          : ess_restype - resource type                *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : tss_restype (converted)                    *
 *                                                             *
 **************************************************************/

 EXT char * TSS_convert_restype(char     * ess_restype);

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : TSS_check_param_overflow                   *
 *                                                             *
 * DESCRIPTION    : Check param overflow before put to cmd buff*
 *                                                             *
 * INPUT          : src           - source field               *
 *                  kwd           - keyword                    *
 *                  value         - param value                *
 *                  dest                                       *
 *                  msgs                                       *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_OK - OK, ESA_FATAL - overflow          *
 *                                                             *
 **************************************************************/

 EXT ESA_RC TSS_check_param_overflow(ESA_DIAG_COMP_typ         comp,
                                  char                       * src,
                                  char                       * kwd,
                                  char                       * value,
                                  int                          i_len,
                                  int                          max_len,
                                  CTSAMSG_DEST_TABLE_rec_ptr   dest,
                                  CTSAMSG_HANDLE_rec_ptr       msgs);

 /*  IS10091 - start  */
/********************************************************************
 *
 * Procedure Name : TSS_Free_tsscf_general
 *
 * Description    : Free tsscf general records block
 *
 * Input          : -> block address
 *
 * Output         : None.
 *
 * Input/Output   :
 *
 * Return Value   : None.
 *
 * Side Effects   :
 *
 * Comments       :
 *
 ********************************************************************/

 EXT void   TSS_Free_tsscf_general(TSSCFILE_REC_typ    **block,
                           ADMIN_PARAMS_rec_typ *admin_params);
 /*  IS10091 - end    */

 /********************************************************
  *                                                      *
  *        Extractor functions                           *
  *                                                      *
  ********************************************************/

 EXT    ESA_RC TSS_convert_type(ESA_DIAG_COMP_typ         comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_convert_date(ESA_DIAG_COMP_typ         comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 /* BS2359 */
 EXT    ESA_RC TSS_convert_time(ESA_DIAG_COMP_typ         comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_convert_flag(ESA_DIAG_COMP_typ         comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 /* WS10009 like convert_flag if keyword equal to value in record */
 /* WS10009                                                start  */
 EXT    ESA_RC TSS_cnvflag_onequal(ESA_DIAG_COMP_typ      comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);
 /* WS10009                                                end    */

 EXT    ESA_RC TSS_extract_1100 (ESA_DIAG_COMP_typ        comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_extract_2101(ESA_DIAG_COMP_typ         comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_extract_2102(ESA_DIAG_COMP_typ         comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_extract_2301 (ESA_DIAG_COMP_typ        comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_extract_var_val(ESA_DIAG_COMP_typ      comp,
                             char                       * fdata,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_extract_2700 (ESA_DIAG_COMP_typ        comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_admin_lst(ESA_DIAG_COMP_typ            comp,
                             char                       * val,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_admin_simple_lst(ESA_DIAG_COMP_typ     comp,
                             char                       * val,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_xadmin_lst(ESA_DIAG_COMP_typ           comp,
                             char                       * val,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_extract_2011 (ESA_DIAG_COMP_typ        comp,
                          char                       * record,
                          TSSCFILE_HANDLE_typ        * h_desc,
                          TSSCFILE_REC_typ           * r_desc,
                          TSSCFILE_DESCR_typ         * d_desc,
                          char                       * key_val,
                          ADDINFO_rec_ptr              addinfo,
                          ADDINFO_rec_ptr              laddinfo,
                          CTSAMSG_DEST_TABLE_rec_ptr   dest,
                          CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_extract_2921 (ESA_DIAG_COMP_typ        comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_extract_3000(ESA_DIAG_COMP_typ         comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

                /* The following routine prototype added for IS10147A */
 EXT    ESA_RC TSS_extract_3001(ESA_DIAG_COMP_typ         comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);
 /*IS10026 drop TSS_facility_lst
 EXT    ESA_RC TSS_facility_lst(ESA_DIAG_COMP_typ         comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);
 ** IS10026 */
 /* WS2359 */
 EXT    ESA_RC TSS_fac51_lst(ESA_DIAG_COMP_typ            comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_convert_segm(ESA_DIAG_COMP_typ         comp,
                             char                       * sdata,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT    ESA_RC TSS_extract_4011 (ESA_DIAG_COMP_typ        comp,
                             char                       * record,
                             TSSCFILE_HANDLE_typ        * h_desc,
                             TSSCFILE_REC_typ           * r_desc,
                             TSSCFILE_DESCR_typ         * d_desc,
                             char                       * key_val,
                             ADDINFO_rec_ptr              addinfo,
                             ADDINFO_rec_ptr              laddinfo,
                             CTSAMSG_DEST_TABLE_rec_ptr   dest,
                             CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_extract_proc(ESA_DIAG_COMP_typ        comp,
                         char                       * record,
                         TSSCFILE_HANDLE_typ        * h_desc,
                         TSSCFILE_REC_typ           * r_desc,
                         TSSCFILE_DESCR_typ         * d_desc,
                         char                       * key_val,
                         ADDINFO_rec_ptr              addinfo,
                         ADDINFO_rec_ptr              laddinfo,
                         CTSAMSG_DEST_TABLE_rec_ptr   dest,
                         CTSAMSG_HANDLE_rec_ptr       msgs);

/************************************************
 *                                              *
 *         Extract procedures                   *
 *                                              *
 ************************************************/

 ESA_RC TSS_sysout_lst(ESA_DIAG_COMP_typ           comp,
                      char                       * val,
                      TSSCFILE_HANDLE_typ        * h_desc,
                      TSSCFILE_REC_typ           * r_desc,
                      TSSCFILE_DESCR_typ         * d_desc,
                      char                       * key_val,
                      ADDINFO_rec_ptr              addinfo,
                      ADDINFO_rec_ptr              laddinfo,
                      CTSAMSG_DEST_TABLE_rec_ptr   dest,
                      CTSAMSG_HANDLE_rec_ptr       msgs);

 ESA_RC TSS_jobacid_lst(ESA_DIAG_COMP_typ           comp,
                      char                       * val,
                      TSSCFILE_HANDLE_typ        * h_desc,
                      TSSCFILE_REC_typ           * r_desc,
                      TSSCFILE_DESCR_typ         * d_desc,
                      char                       * key_val,
                      ADDINFO_rec_ptr              addinfo,
                      ADDINFO_rec_ptr              laddinfo,
                      CTSAMSG_DEST_TABLE_rec_ptr   dest,
                      CTSAMSG_HANDLE_rec_ptr       msgs);

 ESA_RC TSS_subacid_lst(ESA_DIAG_COMP_typ           comp,
                      char                       * val,
                      TSSCFILE_HANDLE_typ        * h_desc,
                      TSSCFILE_REC_typ           * r_desc,
                      TSSCFILE_DESCR_typ         * d_desc,
                      char                       * key_val,
                      ADDINFO_rec_ptr              addinfo,
                      ADDINFO_rec_ptr              laddinfo,
                      CTSAMSG_DEST_TABLE_rec_ptr   dest,
                      CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_vthresh_lst(ESA_DIAG_COMP_typ      comp,
                      char                       * val,
                      TSSCFILE_HANDLE_typ        * h_desc,
                      TSSCFILE_REC_typ           * r_desc,
                      TSSCFILE_DESCR_typ         * d_desc,
                      char                       * key_val,
                      ADDINFO_rec_ptr              addinfo,
                      ADDINFO_rec_ptr              laddinfo,
                      CTSAMSG_DEST_TABLE_rec_ptr   dest,
                      CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_extract_9505(ESA_DIAG_COMP_typ        comp,
                         char                       * record,
                         TSSCFILE_HANDLE_typ        * h_desc,
                         TSSCFILE_REC_typ           * r_desc,
                         TSSCFILE_DESCR_typ         * d_desc,
                         char                       * key_val,
                         ADDINFO_rec_ptr              addinfo,
                         ADDINFO_rec_ptr              laddinfo,
                         CTSAMSG_DEST_TABLE_rec_ptr   dest,
                         CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_strip_bracket(ESA_DIAG_COMP_typ        comp,
                          char                       * fdata,
                          TSSCFILE_HANDLE_typ        * h_desc,
                          TSSCFILE_REC_typ           * r_desc,
                          TSSCFILE_DESCR_typ         * d_desc,
                          char                       * key_val,
                          ADDINFO_rec_ptr              addinfo,
                          ADDINFO_rec_ptr              laddinfo,
                          CTSAMSG_DEST_TABLE_rec_ptr   dest,
                          CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_adabas_svc(ESA_DIAG_COMP_typ        comp,
                       char                       * fdata,
                       TSSCFILE_HANDLE_typ        * h_desc,
                       TSSCFILE_REC_typ           * r_desc,
                       TSSCFILE_DESCR_typ         * d_desc,
                       char                       * key_val,
                       ADDINFO_rec_ptr              addinfo,
                       ADDINFO_rec_ptr              laddinfo,
                       CTSAMSG_DEST_TABLE_rec_ptr   dest,
                       CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_extract_9549(ESA_DIAG_COMP_typ      comp,
                       char                       * fdata,
                       TSSCFILE_HANDLE_typ        * h_desc,
                       TSSCFILE_REC_typ           * r_desc,
                       TSSCFILE_DESCR_typ         * d_desc,
                       char                       * key_val,
                       ADDINFO_rec_ptr              addinfo,
                       ADDINFO_rec_ptr              laddinfo,
                       CTSAMSG_DEST_TABLE_rec_ptr   dest,
                       CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_db2fac_lst(ESA_DIAG_COMP_typ       comp,
                      char                       * val,
                      TSSCFILE_HANDLE_typ        * h_desc,
                      TSSCFILE_REC_typ           * r_desc,
                      TSSCFILE_DESCR_typ         * d_desc,
                      char                       * key_val,
                      ADDINFO_rec_ptr              addinfo,
                      ADDINFO_rec_ptr              laddinfo,
                      CTSAMSG_DEST_TABLE_rec_ptr   dest,
                      CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_strip_zero(ESA_DIAG_COMP_typ        comp,
                       char                       * fdata,
                       TSSCFILE_HANDLE_typ        * h_desc,
                       TSSCFILE_REC_typ           * r_desc,
                       TSSCFILE_DESCR_typ         * d_desc,
                       char                       * key_val,
                       ADDINFO_rec_ptr              addinfo,
                       ADDINFO_rec_ptr              laddinfo,
                       CTSAMSG_DEST_TABLE_rec_ptr   dest,
                       CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_strip_fzero(ESA_DIAG_COMP_typ       comp,
                       char                       * fdata,
                       TSSCFILE_HANDLE_typ        * h_desc,
                       TSSCFILE_REC_typ           * r_desc,
                       TSSCFILE_DESCR_typ         * d_desc,
                       char                       * key_val,
                       ADDINFO_rec_ptr              addinfo,
                       ADDINFO_rec_ptr              laddinfo,
                       CTSAMSG_DEST_TABLE_rec_ptr   dest,
                       CTSAMSG_HANDLE_rec_ptr       msgs);

/* PS0388 */
 EXT ESA_RC TSS_extract_9519_51(ESA_DIAG_COMP_typ        comp,
                         char                       * record,
                         TSSCFILE_HANDLE_typ        * h_desc,
                         TSSCFILE_REC_typ           * r_desc,
                         TSSCFILE_DESCR_typ         * d_desc,
                         char                       * key_val,
                         ADDINFO_rec_ptr              addinfo,
                         ADDINFO_rec_ptr              laddinfo,
                         CTSAMSG_DEST_TABLE_rec_ptr   dest,
                         CTSAMSG_HANDLE_rec_ptr       msgs);

 EXT ESA_RC TSS_extract_4011_51(ESA_DIAG_COMP_typ        comp,
                         char                       * record,
                         TSSCFILE_HANDLE_typ        * h_desc,
                         TSSCFILE_REC_typ           * r_desc,
                         TSSCFILE_DESCR_typ         * d_desc,
                         char                       * key_val,
                         ADDINFO_rec_ptr              addinfo,
                         ADDINFO_rec_ptr              laddinfo,
                         CTSAMSG_DEST_TABLE_rec_ptr   dest,
                         CTSAMSG_HANDLE_rec_ptr       msgs);

 /* BS2713 begin */
 ESA_RC TSS_extract_4012_51(ESA_DIAG_COMP_typ            comp,
                         char                       * record,
                         TSSCFILE_HANDLE_typ        * h_desc,
                         TSSCFILE_REC_typ           * r_desc,
                         TSSCFILE_DESCR_typ         * d_desc,
                         char                       * key_val,
                         ADDINFO_rec_ptr              addinfo,
                         ADDINFO_rec_ptr              laddinfo,
                         CTSAMSG_DEST_TABLE_rec_ptr   dest,
                         CTSAMSG_HANDLE_rec_ptr       msgs);
 /* BS2713 end */

 /* bs2602 - begin */
 EXT ESA_RC TSS_convert_list_sep(ESA_DIAG_COMP_typ      comp,
                         char                       * record,
                         TSSCFILE_HANDLE_typ        * h_desc,
                         TSSCFILE_REC_typ           * r_desc,
                         TSSCFILE_DESCR_typ         * d_desc,
                         char                       * key_val,
                         ADDINFO_rec_ptr              addinfo,
                         ADDINFO_rec_ptr              laddinfo,
                         CTSAMSG_DEST_TABLE_rec_ptr   dest,
                         CTSAMSG_HANDLE_rec_ptr       msgs);
 /* bs2602 - end */

 EXT ESA_RC TSS_extract_9640_51(ESA_DIAG_COMP_typ        comp,
                         char                       * record,
                         TSSCFILE_HANDLE_typ        * h_desc,
                         TSSCFILE_REC_typ           * r_desc,
                         TSSCFILE_DESCR_typ         * d_desc,
                         char                       * key_val,
                         ADDINFO_rec_ptr              addinfo,
                         ADDINFO_rec_ptr              laddinfo,
                         CTSAMSG_DEST_TABLE_rec_ptr   dest,
                         CTSAMSG_HANDLE_rec_ptr       msgs);

 /* ps0395 */
 EXT ESA_RC TSS_put_0600(ESA_DIAG_COMP_typ            comp,
                         TSS_GET_HANDLE_typ         * get_hndl,
                         char                       * record,
                         TSSCFILE_HANDLE_typ        * h_desc,
                         TSSCFILE_REC_typ           * r_desc,
                         TSSCFILE_DESCR_typ         * d_desc,
                         char                       * key_val,
                         ADDINFO_rec_ptr              addinfo,
                         ADDINFO_rec_ptr              laddinfo,
                         CTSAMSG_DEST_TABLE_rec_ptr   dest,
                         CTSAMSG_HANDLE_rec_ptr       msgs);

 /*ws2362 */
 EXT ESA_RC TSS_last_mod(ESA_DIAG_COMP_typ            comp,
                         char                       * record,
                         TSSCFILE_HANDLE_typ        * h_desc,
                         TSSCFILE_REC_typ           * r_desc,
                         TSSCFILE_DESCR_typ         * d_desc,
                         char                       * key_val,
                         ADDINFO_rec_ptr              addinfo,
                         ADDINFO_rec_ptr              laddinfo,
                         CTSAMSG_DEST_TABLE_rec_ptr   dest,
                         CTSAMSG_HANDLE_rec_ptr       msgs);

 /* BS2583 */
 EXT ESA_RC TSS_put_4404(ESA_DIAG_COMP_typ            comp,
                    TSS_GET_HANDLE_typ         * get_handle,
                    char                       * record,
                    TSSCFILE_HANDLE_typ        * h_desc,
                    TSSCFILE_REC_typ           * r_desc,
                    TSSCFILE_DESCR_typ         * d_desc,
                    char                       * key_val,
                    ADDINFO_rec_ptr              addinfo,
                    ADDINFO_rec_ptr              laddinfo,
                    CTSAMSG_DEST_TABLE_rec_ptr   dest,
                    CTSAMSG_HANDLE_rec_ptr       msgs);

/* IS0347 */
ESA_RC TSS_open_output_file(ESA_DIAG_COMP_typ  comp,
                            ADMIN_PARAMS_rec_typ * admin_params,
                            FILE ** out_file);
#endif  /* TSS_H_included */
