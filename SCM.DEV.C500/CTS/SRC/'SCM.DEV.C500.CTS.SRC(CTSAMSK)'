***********************************************************************
*
* COMPARE MASK ROUTINE
*
*    WRITTEN BY SHLOMI BERNTHAL 06.11.90
*
*  CHECK IF GIVEN TEXT MATCHES GIVEN MASK.
*
*  MASK SPECIAL CHARACTERS:
*   '*' - ANY NUMBER (INCLUDING ZERO) OF CHARACTERS
*   '?' - ONE CHARACTER
*   ALL OTHER CHARACTERS - AS THEMSELVES
*
***********************************************************************
*
* PARAMETERS: (UPON ENTRY, THEIR ADDRESS LIST IS POINTED BY R1)
* NOTE: PLEASE CALL THIS ROUTINE WITH ',VL' PARAMETER OF THE
*       CALL MACRO (OR MARK THE LAST PARM ADDRESS WITH X'80')
*
*    1. TEXT   (CL?) - THE TEXT
*    2. LTEXT  (F)   - LENGTH OF THE TEXT
*    3. MASK   (CL?) - THE MASK (UPTO 256)
*    4. LMASK  (F)   - LENGTH OF THE MASK
*    5. OPCODE (F)   - OPERATION CODE (OPTIONAL):
*          0 - (DEFAULT) CHECK IF MASK MATCHES ALL THE TEXT EXACTLY.
*              (INCLUDING TRAILING BLANKS IN BOTH FIELDS)
*          1 - CHECK IF MASK MATCHES ALL THE TEXT, IGNORING TRAILING
*              BLANKS IN BOTH FIELDS.
*          2 - CHECK IF MASK MATCHES SOME PLACE IN TEXT, EXACTLY.
*              (INCLUDING TRAILING BLANKS IN MASK)
*          3 - CHECK IF MASK MATCHES SOME PLACE IN TEXT, IGNORING
*              TRAILING BLANKS IN MASK.
*    6. WORK   (CL?) - NEEDED IN CASE OF OPERATION CODES 2 AND 3.
*          A BUFFER WHOSE LENGTH SHOULD BE AT LEAST LMASK+2 (AND
*          SHORTER THAN 256)
*
*
* RETURN CODE:
*
*    R15=0 - TEXT MATCHES MASK
*    R15=4 - TEXT DOESN'T MATCH MASK
*    R15=8 - INVALID PARAMETERS (INVALID OPCODE OR MISSING WORK PARM)
*
* EXAPLE OF CALL FORMAT:
*
*        CALL  IOAMSK,(TEXT,LTEXT,MASK,LMASK,THREE,WORK),VL
* TEXT   DS    CL80
* LTEXT  DS    F
* MASK   DS    CL80
* LMASK  DS    F
* OPCODE DS    F
* ZERO   DC    F'0'
* THREE  DS    F'3'
* WORK   DS    CL82
*
* OR:
*        LA    R2,TEXT
*        L     R3,LTEXT
*        LA    R2,MASK
*        L     R3,LMASK
*        CALL  IOAMSK,((R2),?R3,(R4),?R5,ZERO),VL
*
***********************************************************************
*
*                        /* T  - POINTER ON TEXT
*  ALGORITHM:            /* TA - TEXT ADDRESS
*  ----------            /* TL - TEXT LENGTH
*                        /* M  - POINTER ON MASK
*                        /* MA - MASK ADDRESS
*                        /* ML - MASK LENGTH
*                        /* P_AST - PLACE ON TEXT WHERE COMPARISON
*                        /*         TO A *EXP BEGAN LAST
*  P_AST=0;              /*         (*EXP := PART OF MASK THAT FOLLOWS
*  M=MA;                 /*          A '*' AND DOESN'T CONTAIN ONE;
*  T=TA;                 /* LAST_AST(M)+1 - PLACE ON TEXT WHERE CURRENT
*                        /*                 *EXP BEGAN
*  LOOP:
*     M<MA+ML? YES: T<TA+TL? YES: START_LOOP;
*                                     /* IS THE REST OF M ONLY '*'S ?
*                             NO: M=('*')*? YES: EQUAL;
*                                            NO: NOT_EQUAL;
*               NO: T<TA+TL? YES: P_AST=0? YES: NOT_EQUAL;
*                                           NO: T=++P_AST;
*                                              M=LAST_AST(M)+1;
*                                              LOOP;
*                             NO: EQUAL;
*  START_LOOP:
*     M='*': M+1=MA+ML? YES: EQUAL;
*                        NO: ++M;
*                            P_AST=T;
*                            LOOP;
*     M='?': ++M;
*            ++T;
*            LOOP;
*     ELSE:  T=M? YES: ++T;
*                      ++M;
*                      LOOP;
*                  NO: P_AST=0? YES: NOT_EQUAL;
*                                NO: T=++P_AST;
*                                    M=LAST_AST(M)+1;
*                                    LOOP;
*
***********************************************************************
* 07/07/93 DB *RENT  REENTRANT                                        *
* IS10188  AL 14/10/24 MOVE OUR MODULES ABOVE 16M LINE                *
***********************************************************************
         CTSEQUR
CTSAMSK  CSECT
CTSAMSK  AMODE ANY                                              IS10188
CTSAMSK  RMODE ANY                                              IS10188
         STM   R14,R12,12(R13)                                  *RENT
         LR    R10,R13                                          *RENT
         LR    R13,R15                                          *RENT
         USING CTSAMSK,R13
         CTSLEVEL 1.4.0
         LR    R9,R1               KEEP ADDRESS LIST ADDRESS
         LM    R1,R4,0(R1)
         L     R2,0(R2)            R2 = TEXT LENGTH
         L     R4,0(R4)            R4 = MASK LENGTH
*
* BRANCH ACCORDING TO OPERATION CODE:
*
         TM    12(R9),X'80'        ONLY 4 PARMS ?
         BO    OPCODE0             YES - DEFAULT OPCODE
         L     R5,16(R9)           R5 -> OPCODE
         L     R5,0(R5)            R5 = OPCODE
         C     R5,=F'3'            BIGGER THAN 3 ?
         BH    OPCODERR            YES - ERROR
         LTR   R5,R5               NEGATIVE ?
         BM    OPCODERR            YES - ERROR
         SLA   R5,2                *4 = OFFSET IN TABLE
         LA    R15,OPCODES         R15 -> OPCODES TABLE
         L     R15,0(R15,R5)       R15 -> OPCODE CODE
         BR    R15                 BRANCH TO RELEVANT CODE
*
* OPCODE 0 - FIXED PLACE, EXACT MATCH
*
OPCODE0  EQU   *
         B     NOSEARCH
*
* OPCODE 1 - FIXED PLACE, IGNORE TRAILING BLANKS
*
OPCODE1  EQU   *
         B     SEARCH
*
* OPCODE 2 - VARIABLE PLACE, EXACT MACTH
*
OPCODE2  EQU   *
         LA    R15,NOSEARCH        MATCH CODE ADRESS
         B     OPCODE23
*
* OPCODE 3 - VARIABLE PLACE, IGNORE TRAILING BLANKS
*
OPCODE3  EQU   *
         LA    R15,SEARCH          MATCH CODE ADRESS
         B     OPCODE23
*
* COMMON FOR OPCODE 2 AND 3 - INSERT LEADING AND TRAILING BLANKS
*
OPCODE23 EQU   *
         TM    16(R9),X'80'        IS THERE A 6'TH PARM ?
         BO    MISSWORK            NO - ERROR
         L     R5,20(R9)           R5 -> WORK BUFFER
         MVI   0(R5),C'*'          INSERT LEADING ASTERISK
         LR    R6,R4               R6 = MASK LENGTH
         BCTR  R6,0                MINUS ONE FOR EX
         EX    R6,MOVEMASK         MOVE THE MASK TEXT INTO WORK
         LA    R6,2(R5,R6)         R6 -> LAST PLACE IN NEW MASK
         MVI   0(R6),C'*'          INSERT TRAILING ASTERISK
         LR    R3,R5               PASS WORK AS MASK
         LA    R4,2(R4)            INCREASE LMASK BY 2
         BR    R15                 BRANCH TO RELEVANT MATCH CODE
MOVEMASK MVC   1(*-*,R5),0(R3)     MOVE CODE FOR EX
*
* CALL MASK MACRO, WITHOUT BLANK SEARCH
*
NOSEARCH EQU   *
         CTSAMSK 0(R1),(R2),0(R3),(R4)
         B     MSKRTRN
*
* CALL MASK MACRO, WITH BLANK SEARCH
*
SEARCH   EQU   *
         CTSAMSK 0(R1),(R2),0(R3),(R4),Y
         B     MSKRTRN
*
* RETURN WITH APPROPRIATE RC
*
MSKRTRN  EQU   *
         LR    R13,R10                                          *RENT
         ST    R15,16(R13)                                      *RENT
         LM    R14,R12,12(R13)                                  *RENT
         BR    R14                                              *RENT
*
* INVALID OPCODE, MISSING WORK PARAMETER
*
OPCODERR EQU   *
MISSWORK EQU   *
         LA    R15,8
         B     MSKRTRN
*
* GENERATE SOURCE
*
         CTSAMSK GEN
OPCODES  DS    0F
         DC    A(OPCODE0)
         DC    A(OPCODE1)
         DC    A(OPCODE2)
         DC    A(OPCODE3)
         LTORG
*
         END
