         TITLE 'CTSASTO - STORAGE OBTAIN / RELEASE'
*                                                                       00000901
****************************************************************        00000201
****                                                        ****        00000301
****     MF CONNECTOR RELEASE 4.0.00                        ****        00000401
****                                                        ****        00000501
****     (C) COPYRIGHT 2019 SAILPOINT TECHNOLOGIES, INC.,   ****        00000601
****     ALL RIGHTS RESERVED.                               ****        00000701
****                                                        ****        00000801
****************************************************************        00000901
*                                                                       00000901
****************************************************************        00001001
*                                                              *        00001101
* TITLE            : CTSASTO                                   *        00001201
*                                                              *        00001501
* AUTHOR           : SELIG TESSLER                             *        00001601
*                                                              *        00001701
* CREATION DATE    : 10 JANUARY 2020                           *        00001801
*                                                              *        00001901
* DESCRIPTION      : OBTAIN / RELEASE STORAGE BUFFER           *        00002001
*                                                              *        00002101
* INPUT PARAMETERS : - FUNCTION: OBTAIN / RELEASE              *        00002101
*                    - LENGTH                                  *        00002101
*                    - ADDRESS: INPUT FIELD FOR RELEASE        *        00002101
*                               OUTPUT FIELD FOR OBTAIN        *        00002101
*                    - SUBPOOL (OPTIONAL)                      *        00002101
*                    - KEY (OPTIONAL)                          *        00002101
*                    - LOCATION: 24 / 31 (DEFAULT = 31)        *        00002101
*                    - POINTER TO ERROR MESSAGE AREA           *        00002101
*                    - ERROR MESSAGE AREA LENGTH               *        00002101
*                    - DEBUG LEVEL                             *        00002101
*                                                              *        00002101
* RETURN CODES     : 4:  PARAMETER (LIST) ERROR                *        00002101
*                        ERROR MESSAGE PROVIDED TO CALLER:     *
*                        INPUT PARAMETER ERROR PRMXXXXX        *
*                  : 8:  STORAGE OBTAIN / RELEASE ERROR        *        00002101
*                        ERROR MESSAGE PROVIDED TO CALLER:     *
*                        STORAGE OBTAIN ERROR RC=XX ETC. ETC.  *
*                        STORAGE RELEASE ERROR RC=XX ETC. ETC. *
*                  : 12: GETMAIN FAILED FOR LOCAL WORK AREA    *        00002101
*                        ERROR MESSAGE PROVIDED TO CALLER:     *
*                        SAVEAREA GETMAIN FAILURE              *
*                                                              *        00002101
* ASSUMPTIONS AND                                              *        00002201
*   CONSIDERATIONS :                                           *        00002301
*                                                              *        00002401
****************************************************************        00002501
*--------------------- CTS V 4.0.00 ---------------------------*
* WS10076  10.02.2020 ST MANAGE PERMISSIONS AS ACCOUNT AND     *
*                        GROUP ATTRIBUTES - PHASE 2            *
* BS10111  08.12.2020 NY SUPPORT RUOB ABOVE THE BAR.           *
*                        THIS ROUTINE IS NOT USED ANY MORE SO  *        00002401
*                        IT WAS CHNAGED TO BE "EMPTY" AND CAN  *        00002401
*                        BE EASILY REVIVED WHEN NEEDED. IT IS  *        00002401
*                        NOT REMOVED FROM LINKCARDS.           *        00002401
*                                                              *        00002401
*                                                              *        00002401
****************************************************************        00002501
*
*--------------------------------------------------------------*
*        STANDARD ENTRY LINKAGE
*--------------------------------------------------------------*
CTSASTO  CSECT
CTSASTO  AMODE 31
CTSASTO  RMODE 31
*                                                                       00020001
         LHI   15,0                                            BS10111
         BR    14                                              BS10111
         DC    C'CTSASTO - THIS ROUTINE IS NULLIFIED'          BS10111
**                                                             BS10111
**  THIS ROUTINE IS  N-O-T  OBSOLETE. '                        BS10111
**                                                             BS10111
**  IT IS CURRENTLY NOT USED BUT LINKCARDS WERE NOT CHANGED    BS10111
**  SO IT WAS NULLIFIED USING AGO IN ORDER TO DECREASE         BS10111
**  LOAD MODULES SIZE.                                         BS10111
**                                                             BS10111
         AGO   .SKIP                                           BS10111
         USING CTSASTO,R15
         SAVE  (14,12),,*
         CTSEQUR
         CTSLEVEL
*
         LR    R12,R15                 SET BASE REGISTER
         DROP  R15
         USING CTSASTO,R12             ESTABLISH ADDRESSABILITY
         LR    R10,R1                  POINT TO PARAMETER LIST
         USING PRM,R10                 ESTABLISH ADDRESSABILITY
*--------------------------------------------------------------*
*        GETMAIN AND CLEAR WORK AREA AND CHAIN SAVE AREAS
*--------------------------------------------------------------*
         GETMAIN RC,LV=WALEN           GETMAIN WORK AREA
         CHI   R15,0                   HOW WAS GETMAIN?
         BNE   RC12                    GETMAIN FAILED
*
******** XC    0(WALEN,R1),0(R1)       CLEAR WORK AREA
         LR    R2,R1                   COPY WORK AREA ADDRESS
         LHI   R3,WALEN                GET WORK AREA LENGTH
         SLR   R15,R15                 ZERO SOURCE LEN
         MVCL  R2,R14                  CLEAR WORK AREA
         ST    R13,4(,R1)              SET PTR TO HSA
         ST    R1,8(,R13)              SET PTR TO LSA
         LR    R13,R1                  SET PTR TO SAVE AREA
         USING WA,R13                  ESTABLISH ADDRESSABILITY
*--------------------------------------------------------------------
*        GET THE PARAMETERS AND START WORKING
*        HANDLE DBGLEVEL, MESSAGE AREA ADDRESS, AND MESSAGE AREA LEN
*--------------------------------------------------------------------
         MVI   DBGLEVEL,0              ZERO DEBUG LEVEL
         L     R1,PRMDBG               POINT TO DEBUG LEVEL
         LA    R1,0(,R1)               CLEAR AMODE BIT
         CHI   R1,0                    DEBUG LEVEL PROVIDED?
         BE    NODEBUG                 NO, CONTINUE THERE
         L     R1,0(,R1)               GET DEBUG LEVEL
         CHI   R1,0                    VALID DEBUG LEVEL?
         BNH   NODEBUG                 NO, NO DEBUG LEVEL
         STC   R1,DBGLEVEL             SAVE DEBUG LEVEL
NODEBUG  DS    0H
         L     R9,PRMMSGAR             GET MESSAGE AREA ADDRESS
         XC    MSGARLEN,MSGARLEN       CLEAR MESSAGE AREA LENGTH
         L     R2,PRMMSGAL             GET MESSAGE AREA LENGTH
         ICM   R2,15,0(R2)             IS IT GT ZERO?
         BNP   NOMSGALN                NO, SKIP THIS CODE
         ST    R2,MSGARLEN             YES, SAVE MESSAGE AREA LENGTH
         LTR   R2,R9                   COPY MESSAGE AREA ADDRESS
         BNP   NOMSGALN                NOT GT ZERO, SKIP THIS CODE
         L     R3,MSGARLEN             GET WORK AREA LENGTH
         SLR   R15,R15                 ZERO SOURCE LEN (PAD BYTE ZERO)
         MVCL  R2,R14                  CLEAR ENTIRE MESSAGE AREA
         L     R2,MSGARLEN             GET MESSAGE AREA LENGTH
         BCTR  R2,0                    DECREMENT BY 0
         ST    R2,MSGARLEN             SAVE MESSAGE AREA LENGTH MINUS 1
NOMSGALN DS    0H
*--------------------------------------------------------------------
*        STORAGE OBTAIN OR RELEASE??
*--------------------------------------------------------------------
         L     R2,PRMFUNC              GET FUNCTION PARAMETER
         CLC   =C'OBTAIN',0(R2)
         BE    OBTAIN
         CLC   =C'RELEASE',0(R2)
         BE    RELEASE
         MVC   PARMDET,=CL5'FUNC'      SET RC=4 DETAIL FIELD
         B     RC4                     NONE OF THE ABOVE, LEAVE (RC=4)
*--------------------------------------------------------------------
*        STORAGE OBTAIN
*--------------------------------------------------------------------
OBTAIN   DS    0H
         MVC   PARMDET,=CL5'LEN'       SET RC=4 DETAIL FIELD
         L     R2,PRMLEN               GET LENGTH PARAMETER
         CHI   R2,0                    LENGTH PROVIDED?
         BE    RC4                     NO, INPUT PARAMETER ERROR
         L     R5,0(,R2)
         ST    R5,INLEN                SAVE INPUT LENGTH HERE
*
         MVC   PARMDET,=CL5'ADDR'      SET RC=4 DETAIL FIELD
         L     R6,PRMADDR              GET ADDR PARAMETER
         CHI   R6,0                    ADDR PROVIDED?
         BE    RC4                     NO, INPUT PARAMETER ERROR
*
         SLR   R7,R7                   SET DEFAULT SUBPOOL TO 0
         MVC   INSP,=F'999'            INPUT SP NOT SPECIFIED
         L     R2,PRMSP                GET SUBPOOL PARAMETER
         CHI   R2,0                    SUBPOOL PROVIDED?
         BE    GETKEYO                 NO, SKIP NEXT INSTRUCTION
         L     R7,0(,R2)
         ST    R7,INSP                 SAVE INPUT SP HERE
*
GETKEYO  DS    0H
         MVI   KEYFLAG,X'00'           KEY PARAMETER NOT SPECIFIED
         MVC   INKEY,=F'99'            INPUT KEY NOT SPECIFIED
         L     R2,PRMKEY               GET KEY PARAMETER
         CHI   R2,0                    KEY PROVIDED?
         BE    GETLOC                  NO, SKIP NEXT INSTRUCTION
         L     R8,0(,R2)
         ST    R8,INKEY                SAVE INPUT KEY HERE
         SLL   R8,4                    KEY MUST BE IN BITS 24-27
         MVI   KEYFLAG,X'80'           KEY PARAMETER SPECIFIED
*--------------------------------------------------------------------
*        AT THIS POINT, THESE REGISTERS CONTAIN:
*        R5 - LENGTH OF STORAGE TO OBTAIN
*        R6 - WHERE TO PLACE ADDRESS AFTER STORAGE OBTAIN
*        R7 - SUBPOOL
*        R8 - KEY
*--------------------------------------------------------------------
GETLOC   DS    0H
         MVC   INLOC,=F'99'            INPUT LOC NOT SPECIFIED
         L     R2,PRMLOC               GET LOC PARAMETER
         CHI   R2,0                    LOC PROVIDED?
         BE    OBTLOC31                NO, DEFAULT IS LOC=31
         L     R2,0(,R2)
         ST    R2,INLOC                SAVE INPUT LOC HERE
         C     R2,=F'24'               IS IT LOC=24?
         BE    OBTLOC24
         C     R2,=F'31'               IS IT LOC=31?
         BE    OBTLOC31
         MVC   PARMDET,=CL5'LOC'       SET RC=4 DETAIL FIELD
         B     RC4                     NONE OF THE ABOVE, LEAVE (RC=4)
*
OBTLOC24 DS    0H
         CLI   KEYFLAG,X'80'           WAS KEY PARAMETER SPECIFIED?
         BE    OL24KEY                 YES, CONTINUE THERE
         STORAGE OBTAIN,LENGTH=(R5),ADDR=(R1),SP=(R7),LOC=24,          X
               LINKAGE=SYSTEM,RTCD=RETCODE,COND=YES
         B     OL24AFT
OL24KEY  DS    0H
         STORAGE OBTAIN,LENGTH=(R5),ADDR=(R1),SP=(R7),LOC=24,KEY=(R8), X
               LINKAGE=SYSTEM,RTCD=RETCODE,COND=YES
OL24AFT  DS    0H
         CHI   R15,0
         BNE   RC8O
         B     OBTGOOD
*
OBTLOC31 DS    0H
         CLI   KEYFLAG,X'80'           WAS KEY PARAMETER SPECIFIED?
         BE    OL31KEY                 YES, CONTINUE THERE
         STORAGE OBTAIN,LENGTH=(R5),ADDR=(R1),SP=(R7),LOC=31,          X
               LINKAGE=SYSTEM,RTCD=RETCODE,COND=YES
         B     OL31AFT
OL31KEY  DS    0H
         STORAGE OBTAIN,LENGTH=(R5),ADDR=(R1),SP=(R7),LOC=31,KEY=(R8), X
               LINKAGE=SYSTEM,RTCD=RETCODE,COND=YES
OL31AFT  DS    0H
         CHI   R15,0
         BNE   RC8O
*
OBTGOOD  DS    0H
         ST    R1,0(,R6)               RETURN ADDRESS TO THE CALLER
         LR    R6,R1                   COPY ADDRESS HERE FOR DEBUG MSG
         CTSADBG TYPE=PRTDBG,LEVEL=(DBGLEVEL,1),                       *
               'STORAGE OBTAINED AT ADDR ~ (LEN # SP # KEY # LOC #)',  *
               (?R6,?R5,INSP,INKEY,INLOC),                             *
               RAREA=RAREA,DBGAREA=DBGAREA
         LHI   R15,0
         B     RETURN
*
*--------------------------------------------------------------------
*        STORAGE RELEASE
*--------------------------------------------------------------------
RELEASE  DS    0H
         MVC   PARMDET,=CL5'LEN'       SET RC=4 DETAIL FIELD
         L     R2,PRMLEN               GET LENGTH PARAMETER
         CHI   R2,0                    LENGTH PROVIDED?
         BE    RC4                     NO, INPUT PARAMETER ERROR
         L     R5,0(,R2)
         ST    R5,INLEN                SAVE INPUT LENGTH HERE
*
         MVC   PARMDET,=CL5'ADDR'      SET RC=4 DETAIL FIELD
         L     R2,PRMADDR              GET ADDR PARAMETER
         CHI   R2,0                    ADDR PROVIDED?
         BE    RC4                     NO, INPUT PARAMETER ERROR
         L     R6,0(,R2)
         ST    R6,INADDR               SAVE INPUT ADDR HERE
*
         SLR   R7,R7                   SET DEFAULT SUBPOOL TO 0
         MVC   INSP,=F'999'            INPUT SP NOT SPECIFIED
         L     R2,PRMSP                GET SUBPOOL PARAMETER
         CHI   R2,0                    SUBPOOL PROVIDED?
         BE    GETKEYR                 NO, SKIP NEXT INSTRUCTION
         L     R7,0(,R2)
         ST    R7,INSP                 SAVE INPUT SP HERE
*
GETKEYR  DS    0H
         MVI   KEYFLAG,X'00'           KEY PARAMETER NOT SPECIFIED
         MVC   INKEY,=F'99'            INPUT KEY NOT SPECIFIED
         L     R2,PRMKEY               GET KEY PARAMETER
         CHI   R2,0                    KEY PROVIDED?
         BE    DOREL                   NO, SKIP NEXT INSTRUCTION
         L     R8,0(,R2)
         ST    R8,INKEY                SAVE INPUT KEY HERE
         SLL   R8,4                    KEY MUST BE IN BITS 24-27
         MVI   KEYFLAG,X'80'           KEY PARAMETER SPECIFIED
*--------------------------------------------------------------------
*        AT THIS POINT, THESE REGISTERS CONTAIN:
*        R5 - LENGTH OF STORAGE TO RELEASE
*        R6 - ADDRESS OF STORAGE TO RELEASE
*        R7 - SUBPOOL
*        R8 - KEY
*--------------------------------------------------------------------
DOREL    DS    0H
         CLI   KEYFLAG,X'80'           WAS KEY PARAMETER SPECIFIED?
         BE    RELKEY                  YES, CONTINUE THERE
         STORAGE RELEASE,LENGTH=(R5),ADDR=(R6),SP=(R7),                X
               LINKAGE=SYSTEM,RTCD=RETCODE,COND=YES
         B     RELAFT
RELKEY   DS    0H
         STORAGE RELEASE,LENGTH=(R5),ADDR=(R6),SP=(R7),KEY=(R8),       X
               LINKAGE=SYSTEM,RTCD=RETCODE,COND=YES
RELAFT   DS    0H
         CTSADBG TYPE=PRTDBG,LEVEL=(DBGLEVEL,1),                       *
               'STORAGE RELEASED AT ADDR ~ (LEN # SP # KEY #)  RC = #',*
               (?R6,?R5,INSP,INKEY,?R15),                              *
               RAREA=RAREA,DBGAREA=DBGAREA
         CHI   R15,0
         BNE   RC8R
         LHI   R15,0
         B     RETURN
*
*--------------------------------------------------------------------
*        DEAL WITH ERROR CONDITIONS (RETURN ERROR MESSAGE TO CALLER),
*        SET THE RETURN CODE, AND RETURN TO THE CALLER
*--------------------------------------------------------------------
RC4      DS    0H
         LHI   R11,4                   SET RETURN CODE
         MVC   ERRMSG(L'IPPARMER),IPPARMER COPY ERROR MESSAGE...
         MVC   ERRMSG+IPPARMDT(L'PARMDET),PARMDET ...AND DETAIL FIELD
         LA    R4,ERRMSG               POINT TO ERROR MESSAGE
         LHI   R5,L'IPPARMER           GET ERROR MESSAGE LENGTH
         B     COPYMSG
*
RC8O     DS    0H
         LHI   R11,8                   SET RETURN CODE
         L     R15,RETCODE             GET RETURN CODE
         CTSAN2C N2CRC,LEN=L'N2CRC     TRANSLATE RETURN CODE FROM R15
         L     R15,INLEN               GET INPUT LENGTH
         CTSAN2C N2CLEN,LEN=L'N2CLEN   TRANSLATE LENGTH FROM R15
         L     R15,INSP                GET INPUT SP
         CTSAN2C N2CSP,LEN=L'N2CSP     TRANSLATE SP FROM R15
         L     R15,INKEY               GET INPUT KEY
         CTSAN2C N2CKEY,LEN=L'N2CKEY   TRANSLATE KEY FROM R15
         L     R15,INLOC               GET INPUT LOC
         CTSAN2C N2CLOC,LEN=L'N2CLOC   TRANSLATE LOC FROM R15
         MVC   ERRMSG(L'OBTERR),OBTERR COPY ERROR MESSAGE...
         MVC   ERRMSG+OBTERRRC(L'N2CRC),N2CRC   ...AND RC
         MVC   ERRMSG+OBTERRLN(L'N2CLEN),N2CLEN ...AND LEN
         MVC   ERRMSG+OBTERRSP(L'N2CSP),N2CSP   ...AND SP
         MVC   ERRMSG+OBTERRKY(L'N2CKEY),N2CKEY ...AND KEY
         MVC   ERRMSG+OBTERRLC(L'N2CLOC),N2CLOC ...AND LOC
         LA    R4,ERRMSG               POINT TO ERROR MESSAGE
         LHI   R5,L'OBTERR             GET ERROR MESSAGE LENGTH
         B     COPYMSG
*
RC8R     DS    0H
         LHI   R11,8                   SET RETURN CODE
         L     R15,RETCODE             GET RETURN CODE
         CTSAN2C N2CRC,LEN=L'N2CRC     TRANSLATE RETURN CODE FROM R15
         L     R15,INADDR              GET INPUT LENGTH
         CTSAN2C N2CADDR,MODE=HEX      TRANSLATE LENGTH FROM R15
         L     R15,INLEN               GET INPUT LENGTH
         CTSAN2C N2CLEN,LEN=L'N2CLEN   TRANSLATE LENGTH FROM R15
         L     R15,INSP                GET INPUT SP
         CTSAN2C N2CSP,LEN=L'N2CSP     TRANSLATE SP FROM R15
         L     R15,INKEY               GET INPUT KEY
         CTSAN2C N2CKEY,LEN=L'N2CKEY   TRANSLATE KEY FROM R15
         MVC   ERRMSG(L'RELERR),RELERR COPY ERROR MESSAGE...
         MVC   ERRMSG+RELERRRC(L'N2CRC),N2CRC     ...AND RC
         MVC   ERRMSG+RELERRAD(L'N2CADDR),N2CADDR ...AND ADDR
         MVC   ERRMSG+RELERRLN(L'N2CLEN),N2CLEN   ...AND LEN
         MVC   ERRMSG+RELERRSP(L'N2CSP),N2CSP     ...AND SP
         MVC   ERRMSG+RELERRKY(L'N2CKEY),N2CKEY   ...AND KEY
         LA    R4,ERRMSG               POINT TO ERROR MESSAGE
         LHI   R5,L'RELERR             GET ERROR MESSAGE LENGTH
         B     COPYMSG
*
COPYMSG  DS    0H
         LR    R15,R11                 SET REAL RETURN CODE
         LTR   R9,R9                   IS THERE A MESSAGE AREA?
         BZ    RETURN                  NO, RETURN TO CALLER NOW
         LR    R2,R9                   COPY PTR TO MESSAGE AREA
         ICM   R3,15,MSGARLEN          GET MESSAGE AREA LENGTH MINUS 1
         BNP   RETURN
         MVCL  R2,R4                   COPY THE ERROR MESSAGE
         B     RETURN                  RETURN TO CALLER
*
*        GETMAIN FOR WORK AREA FAILED: RETURN ERROR MSG AND LEAVE
*
RC12     DS    0H
         LHI   R15,12                  SET RETURN CODE
         L     R2,PRMMSGAR             GET MESSAGE AREA ADDRESS
         L     R9,0(,R2)               SAVE THE POINTER HERE
         L     R2,PRMMSGAL             GET MESSAGE AREA LENGTH
         ICM   R8,15,0(R2)             IS IT GT ZERO?
         BNP   OUT                     NO, SKIP THIS CODE
         LTR   R2,R9                   COPY WORK AREA ADDRESS
         BNP   OUT                     NOT GT ZERO, SKIP THIS CODE
         LR    R3,R8                   GET WORK AREA LENGTH
         SLR   R15,R15                 ZERO SOURCE LEN (PAD BYTE ZERO)
         MVCL  R2,R14                  CLEAR ENTIRE MESSAGE AREA
         LHI   R15,12                  SET RETURN CODE AGAIN
         BCTR  R8,0                    SET MESSAGE AREA LENGTH MINUS 1
         LR    R2,R9                   COPY PTR TO MESSAGE AREA
         LTR   R3,R8                   GET MESSAGE AREA LENGTH MINUS 1
         BNP   OUT
         LA    R4,GMFAIL               POINT TO ERROR MESSAGE
         LHI   R5,L'GMFAIL             GET ERROR MESSAGE LENGTH
         MVCL  R2,R4                   COPY THE ERROR MESSAGE
         B     OUT                     RETURN TO CALLER
*--------------------------------------------------------------------
*        RETURN TO THE CALLER
*--------------------------------------------------------------------
RETURN   DS    0H
         LR    R5,R15                  SAVE RC
         LR    R1,R13                  GET POINTER TO GETMAINED AREA
         L     R13,4(,R13)             GET POINTER TO HSA
         FREEMAIN RC,LV=WALEN,A=(R1)   FREEMAIN WORK AREA
         LR    R15,R5                  RESTORE RC
*
OUT      DS    0H
         RETURN (14,12),RC=(15)
         DROP  ,
         LTORG ,
         CTSAN2C WORK=YES,RENT=CONST
*
*--------------------------------------------------------------------
*        CONSTANTS, LOCAL WORK AREA, AND INPUT PARAMETER LIST DSECT
*--------------------------------------------------------------------
GMFAIL   DC    C'SAVEAREA GETMAIN FAILURE'
IPPARMER DC    C'INPUT PARAMETER ERROR PRMXXXXX'
IPPARMDT EQU   25
OBTERR   DC    C'STORAGE OBTAIN ERROR RC=XX (LEN=12345678 SP=123 KEY=12X
                LOC=12)'
******           +12345678901234567890123456789012345678901234567890123
******         45678901234567890'
OBTERRRC EQU   24
OBTERRLN EQU   32
OBTERRSP EQU   44
OBTERRKY EQU   52
OBTERRLC EQU   59
RELERR   DC    C'STORAGE RELEASE ERROR RC=XX (ADDR=12345678 LEN=1234567X
               8 SP=123 KEY=12)'
******           +12345678901234567890123456789012345678901234567890123
******         45678901234567890'
RELERRRC EQU   25
RELERRAD EQU   34
RELERRLN EQU   47
RELERRSP EQU   59
RELERRKY EQU   67
*
WA       DSECT
SA       DS    18F                     SAVE AREA
*
RETCODE  DS    F                       RETURN CODE
MSGARLEN DS    F                       MESSAGE AREA LENGTH
DBGLEVEL DS    XL1                     DEBUG LEVEL FOR THIS ROUTINE
KEYFLAG  DS    XL1                     WAS KEY SPECIFIED OR NOT?
N2CRC    DS    CL2                     OUTPUT RETURN CODE
INADDR   DS    F                       INPUT ADDRESS
N2CADDR  DS    CL8                     OUTPUT ADDRESS
INLEN    DS    F                       INPUT LENGTH
N2CLEN   DS    CL8                     OUTPUT LENGTH
INSP     DS    F                       INPUT SP
N2CSP    DS    CL3                     OUTPUT SP
INKEY    DS    F                       INPUT KEY
N2CKEY   DS    CL2                     OUTPUT KEY
INLOC    DS    F                       INPUT LOC
N2CLOC   DS    CL2                     OUTPUT LOC
PARMDET  DS    CL5                     FUNC, LEN, ADDR, OR LOC
ERRMSG   DS    CL80                    ERROR MESSAGE AREA
         CTSAN2C WORK=YES,RENT=VAR
         DS    0D
RAREA    DS    XL512                   USED BY CTSADBG
DBGAREA  DS    XL2048                  USED BY CTSADBG
*
WALEN    EQU   *-WA                    LENGTH OF WORK AREA
*
PRM      DSECT                     I/O INPUT PARAMETERS
PRMFUNC  DS    A                   I   PTR TO OBTAIN / RELEASE
PRMLEN   DS    A                   I   PTR TO LENGTH
PRMADDR  DS    A                   I/O PTR TO ADDRESS OF STORAGE BUFFER
*                                      ON DOUBLEWORD BOUNDARY.
PRMSP    DS    A                   I   PTR TO SUBPOOL (OPTIONAL)
PRMKEY   DS    A                   I   PTR TO KEY (OPTIONAL)
PRMLOC   DS    A                   I   PTR TO 24 / 31
PRMMSGAR DS    A                   I/O PTR TO MESSAGE AREA
PRMMSGAL DS    A                   I   PTR TO MESSAGE AREA LENGTH
PRMDBG   DS    A                   I   PTR TO DEBUG LEVEL
*
.SKIP    ANOP                          BS10111
         END
