         TITLE 'CHECK SEGMENTS/FIELDS EXISTANCE ACCORDING TEMPLATE'
*
****************************************************************
****                                                        ****
****     CONTROL-SA  RELEASE 2.1.0                          ****
****                                                        ****
****     LICENCED MATERIAL - NEW DIMENSION SOFTWARE LTD.    ****
****                                                        ****
****************************************************************
*
****************************************************************
*                                                              *
* TITLE            : CHECK SEGMENT/FIELDS EXISTANCE            *
*                                                              *
* FILE NAME        : CTSFSGC                                   *
*                                                              *
* AUTHOR           : ALEX SHVARTSMAN                           *
*                                                              *
* CREATION DATE    : 16/07/97                                  *
*                                                              *
* DESCRIPTION      : CHECK SEGMENT/FIELD EXISTANCE ACCORDING   *
*                    TEMPLATE PTR PLACED IN RCVT AREA          *
****************************************************************
* MOD.ID   WHO      WHEN     DESCRIPTION                       *
* -------- -------- -------- --------------------------------- *
* IS10076  NURITY   31/01/13 SUPPORT CUSTOM FIELDS.            *
* SAS2IBMN NURITY   12/12/16 RESOLVE USING WARNING.            *
* IS10188  AVNERL   06/10/24 MOVE OUR MODULES ABOVE 16M LINE   *
****************************************************************
OFFID    EQU   0                       RCVTID   FIELD
OFFVERS  EQU   X'AC'                   RACFVERS FIELD
*
********************************************************************
*    PARAMETERS LIST
*******************************************************************
*
XSTPRM   DSECT
XSTDBG   DS    A                       DEBUG LEVEL
XSTMODE  DS    A                       MODE
XSTPRF   DS    A                       PROFILE
XSTSGM   DS    A                       SEGMENT
XSTFLD   DS    A                       FIELD NAME (FOR FIELD MODE)
XSTRFLD  DS    A                       RET FIELD NAME (FOR FIELD MODE)
*
********************************************************************
*    TEMPLATE RECORDS
*******************************************************************
*
XTMPHPRM DSECT                         HEADER ENTRY
XTMPHSC  DS    X                       NUMBER OF SEGMENTS
XTMPHCHN DS    AL4                     CHAIN ADDRESS
XTMPHLEN EQU   *-XTMPHPRM              TEMPLATE HEADER ENTRY LEN
*
XTMPBPRM DSECT                         SEGMENT ENTRY
XTMPBNM  DS    CL8                     SEGMENT NAME
XTMPBSRL DS    X                       SEGMENT SERIAL NUMBER
XTMPBCHN DS    AL4                     CHAIN ADDRESS
XTMPBLEN EQU   *-XTMPBPRM              SEGMENT ENTRY LEN
*
XTMPPRM  DSECT                         FIELDS ENTRY
XTMPPNM  DS    CL8                     FIELD NAME
XTMPPSRL DS    X                       FIELD SERIAL NUMBER
XTMPPFI  DS    CL8                     FIELD INFO
XTMPLEN  EQU   *-XTMPPRM               TEMPLATE ENTRY LEN
*
*******************************************************************
CTSFSGC  CSECT
CTSFSGC  AMODE 31
*IS10188 CTSFSGC  RMODE 24       (FOR CTSADBG)
CTSFSGC  RMODE ANY                                             IS10188
         BEGIN
         CTSEQUR
*IS10076 CTSLEVEL
*SAS2IBMN CTSLEVEL PATCH=NO                                    IS10076
         CTSLEVEL                                              SAS2IBMN
*--------------------------------------------------------------------
*     ADDRESSABILITY MAIN PARAMETERS
*--------------------------------------------------------------------
         LR    R10,R1
         USING XSTPRM,R10
         L     R2,XSTDBG              | SAVE
         LTR   R2,R2                  |
         BZ    DBGSTORE               |
         L     R2,0(R2)               |  DEBUG
DBGSTORE DS    0H                     |
         STC   R2,DEBUGC              |   LEVEL
         XC    RETFLD(4),RETFLD        RETURNED FIELD ADDR
*
         CTSADBG 'ENTER DEBUG LEVEL=#',(?R2),                          X
               LEVEL=(DEBUGC,8),RAREA=RAREA
*
         L     R2,XSTMODE              MODE
         L     R3,XSTPRF               PROFILE
         L     R4,XSTSGM               SEGMENT
*
         CTSADBG 'MODE=_ PROFILE=_ SEGMENT=_',                         X
               (0(R2),8,0(R3),8,0(R4),8),                              X
               LEVEL=(DEBUGC,8),RAREA=RAREA
*
         MVC   MODE(8),0(R2)           MODE
         MVC   PROFILE(8),0(R3)        PROFILE
         MVC   SEGMENT(8),0(R4)        SEGMENT
         CLC   MODE,=CL8'VRFSGM'       VERIFY SEGMENT ONLY ?
         BE    CHKSGM                  CHECK SEGMENT ONLY
         L     R2,XSTFLD               FIELD NAME (FOR FIELD MODE)
*
         CTSADBG 'MODE=_ PROFILE=_ SEGMENT=_ FIELD=_',                 X
               (MODE,8,PROFILE,8,SEGMENT,8,0(R2),8),                   X
               LEVEL=(DEBUGC,8),RAREA=RAREA
*
         MVC   FIELD(8),0(R2)          SAVE FIELD NAME
         L     R2,XSTRFLD              RET FIELD NAME (FOR FIELD MODE)
         ST    R2,RETFLD               RETURNED FIELD ADDR
CHKSGM   DS    0H
         CLC   SEGMENT,=CL8' '
         BNE   GETRCVT
         MVC   SEGMENT,=CL8'BASE'
*
GETRCVT  DS    0H
         L     R2,CVTPTR               LOAD ADDR CVT
         USING CVT,R2                  ADDRESSABILITY CVT DSECT
         L     R8,CVTRAC               LOAD ADDR CVT RACF
*
         CTSADBG 'CVTRAC=~',(?R8),                                     X
               LEVEL=(DEBUGC,8),RAREA=RAREA
*
         LTR   R8,R8                   ADDR SUPPLIED ?
         BZ    RET16                   NO, RACF 'DOWN'
         USING RCVT,R8                 ADDRESSABILITY RACF CVT AREA
*
         CTSADBG 'RCVTID=_',(RCVTID,4),                                X
               LEVEL=(DEBUGC,8),RAREA=RAREA
*
*        'RCVT' BLOCK
*
         CLC   =CL4'RCVT',OFFID(R8)    CHECK BLOCK ID
         BNE   RET16                   INVALID BLOCK ID, RACF 'DOWN'
*
*        TEMPLATE ADDRESS
*
         L     R7,RCVTTMP2
         LTR   R7,R7                   DYNAMIC PARSE NOT ACTIVE
         BZ    RET8
         LR    R9,R7
*
         CLI   TMPDMP,1                TEMPLATE TABLE SNAPED ?
         BE    TMP00
         MVI   TMPDMP,1                TEMPLATE TABLE SNAPED
         CTSADBG 'RCVTTMP2=~',(?R9),                                   X
               LEVEL=(DEBUGC,1,2,3,4,5),RAREA=RAREA
         A     R9,TMPLEN               TEMPLATE LEN FOR SNAP
         CTSADBG TYPE=SNAP,ID=1,HDR='** TEMPLATE AREA 2 *',            1
               ADDR=(0(R7),0(R9)),LEVEL=(DEBUGC,8),RAREA=RAREA
*
         DROP  R8
TMP00    DS    0H
         MVI   PRFFND,0                PROFILE FOUND
         MVI   SGMFND,0                SEGMENT FOUND
         MVI   FLDFND,0                FIELD FOUND
*
*        PROFILES LOOP
*
TMP22    DS    0H
         USING XTMPHPRM,R7             HEADER ENTRY
         SR    R9,R9
         IC    R9,XTMPHSC              NUMBER OF SEGMENTS
         ICM   R10,X'F',XTMPHCHN       ADDR OF FIRST (BASE) SEGMENT
         BZ    TMP22FIN                Y, (END-OF-TEMPLATE, RETURN)
         USING XTMPBPRM,R10            SEGMENT ENTRY
*
         CTSADBG '1.NUMBER OF SEGMENTS=~ BASE-ADDR=~',(?R9,?R10),      X
               LEVEL=(DEBUGC,8),RAREA=RAREA
*
         ICM   R11,X'F',XTMPBCHN       ADDRESS OF PROFILE NAME
         USING XTMPPRM,R11             PROFILE NAME ENTRY (FIRST FIELD)
*
         CTSADBG '1.~._.OF _.(SERIAL=$ INFO=$)',                       X
               (?R10,XTMPBNM,8,XTMPPNM,8,XTMPPSRL,1,XTMPPFI,8),        X
               LEVEL=(DEBUGC,8),RAREA=RAREA
*
         MVC   SG1(8),XTMPBNM          1-ST SEGMENT NAME
         MVC   PF1(8),XTMPPNM          1-ST PROFILE NAME RELATE TO SEGM
         LA    R6,XTMPLEN              TEMPLATE ENTRY LEN
         AR    R11,R6                  FIRST PROFILE'S FIELD ADDR
*
*        CHECK SEGMENT, PROFILE
*
         CLC   PROFILE(8),PF1          REQUESTED PROFILE ?
         BNE   TMP24FIN                N, SKIP
         MVI   PRFFND,1                PROFILE FOUND
         CLC   SEGMENT(8),SG1          REQUESTED SEGMENT
         BNE   TMP24FIN                N, SKIP
         MVI   SGMFND,1                SEGMENT FOUND
         CLC   MODE,=CL8'VRFSGM'       VERIFY SEGMENT ONLY ?
         BE    RET0                    Y, RETURN (O.K)
*
*        SEGMENTS LOOP
*
TMP23    DS    0H
         SR    R4,R4
*
*        FIELDS LOOP
*
TMP24    DS    0H
         SR    R12,R12
         IC    R12,XTMPPSRL            FIELD SERIAL NUMBER
         LTR   R12,R12                 SERIAL = 0 ?
*IS10076 BE    TMP24FIN                Y, END-OF-FIELDS LIST
         BNZ   TMP24CES                ..NO - PROCESS.          IS10076
*                                                               IS10076
**  CHECK IF COMBINED FIELD                                     IS10076
*                                                               IS10076
         CLI   XTMPPNM,X'00'       FIELD NAME = X'00' ?         IS10076
         BE    TMP24FIN            ..YES - END-OF-FIELDS LIST   IS10076
         TM    XTMPPFI,X'40'       COMBINED FIELD ?             IS10076
         BO    TMP24P1             ..YES - PROCESS.             IS10076
         B     TMP24FIN            ..NO - END.                  IS10076
TMP24CES DS    0H                  CHECK IF END OF GESMENT      IS10076
         LTR   R4,R4
         BZ    TMP24P
         CR    R12,R4                  CURRENT FIELD'S SERIAL HIGER ?
         BNH   TMP24FIN                N, END-OF-FIELDS LIST
TMP24P   DS    0H
         LR    R4,R12                  SAVE PREVIOUS FIELD'S SERIAL
*
TMP24P1  DS    0H                                               IS10076
         CTSADBG '3.~/_ (PRFFND=$ SGMFND=$) (SERIAL=$ INFO=$)',        X
               (?R12,XTMPPNM,8,PRFFND,1,SGMFND,1,                      X
               XTMPPSRL,1,XTMPPFI,8),                                  X
               LEVEL=(DEBUGC,8),RAREA=RAREA
*
*        IF PROFILE ,SEGMENT ARE FOUND. CHECK FIELD
*
         CLI   PRFFND,1                PROFILE FOUND  ?
         BNE   TMP24C                  N, GET NEXT
         CLI   SGMFND,1                SEGMENT FOUND  ?
         BNE   TMP24C                  N, GET NEXT
         L     R8,RETFLD               RETURNED FIELD ADDR
         LTR   R8,R8                   ADDR SUPPLIED ?
         BZ    TMP24NRF
         MVC   0(8,R8),XTMPPNM         RETURN FIRST FIELD NAME FROM SGM
         XC    RETFLD(4),RETFLD        CLEAR RETURNED FIELD ADDR
TMP24NRF DS    0H
         CLC   FIELD(8),XTMPPNM
         BNE   TMP24C
         MVI   FLDFND,1                FIELD FOUND
         B     RET0                    EVERYTHING FOUND. RETURN (O.K)
*
*        GET NEXT FIELD
*
TMP24C   DS    0H
         LA    R6,XTMPLEN              TEMPLATE ENTRY LEN
         AR    R11,R6                  NEXT FIELD ADDR
         B     TMP24
*
*        END OF FIELD'S LIST. GET NEXT SEGMENT
*
TMP24FIN DS    0H
         CLI   PRFFND,1                PROFILE FOUND ?
         BNE   TMP24FC                 N, (TRY NEXT)
         CLI   SGMFND,1                SEGMENT FOUND ?
         BNE   TMP24FC                 N, (TRY NEXT)
         B     RET4                    IF PROFILE, SEGMENT FOUND
*                                      BUT FIELD NOT YET,
*        GET NEXT SEGMENT              THERE IS NO CHANCE ANY MORE
*
TMP24FC  DS    0H
         LA    R6,XTMPBLEN             BASE SEGMENT ENTRY LEN
         AR    R10,R6                  GET NEXT SEGMENT'S ADDRESS
         BCTR  R9,0                    DECR SEGMENT'S COUNTER
         LTR   R9,R9                   END-OF SEGMENT'S LIST ?
         BZ    TMP23FIN                Y, (GET NEXT PROFILE)
         ICM   R11,X'F',XTMPBCHN       ADDRESS OF PROFILE NAME
*
         CTSADBG '2.~._. (PRFFND=$) (NEXT PROFILE ADDR=~)',            X
               (?R10,XTMPBNM,8,PRFFND,1,?R11),                         X
               LEVEL=(DEBUGC,8),RAREA=RAREA
*
*
*        IF PROFILE FOUND. CHECK SEGMENT
*
         CLI   PRFFND,1                PROFILE FOUND  ?
         BNE   TMP24FIN                N, GET NEXT
         CLC   SEGMENT(8),XTMPBNM      REQUESTED SEGMENT ?
         BNE   TMP24FIN                N, GET NEXT
         MVI   SGMFND,1                SEGMENT FOUND
         CLC   MODE,=CL8'VRFSGM'       VERIFY SEGMENT ONLY ?
         BE    RET0                    Y, RETURN (O.K)
         LA    R6,XTMPLEN              TEMPLATE ENTRY LEN
         AR    R11,R6                  FIRST PROFILE'S FIELD ADDR
         B     TMP23
*
*        END OF SEGMENT'S LIST. GOTO NEXT PROFILE
*
TMP23FIN DS    0H
         LA    R6,XTMPHLEN             TEMPLATE HEADER ENTRY LEN
         AR    R7,R6
         B     TMP22
*
*        END OF PROFILE'S LIST. FINISH
*
TMP22FIN DS    0H
         B     RET4                    R2 <> 0 - NOT FOUND
*
* ----------------------------------------------------------------
*
RET0     DS    0H                      0-SEGMENT/FIELD FOUND
         SR    R15,R15
         B     RET
RET4     DS    0H                      4-SEGMENT/FIELD NOT FOUND
         LA    R15,4
         B     RET
*
RET8     DS    0H                      8-DYNAMIC PARSE NOT ACTIVE
         LA    R15,8
         B     RET
*
RET16    DS    0H                      16-RACF DEACTIVATED BY RVARY CMD
         LA    R15,16
         B     RET
*
RET      DS    0H
         CTSADBG 'EXITING WITH RC=~',(?R15),                           1
               LEVEL=(DEBUGC,8),RAREA=RAREA
         BRTRN (15)
         LTORG
PRFFND   DS    X                       PROFILE FOUND
SGMFND   DS    X                       SEGMENT FOUND
FLDFND   DS    X                       FIELD FOUND
TMPDMP   DS    X                       TEMPLATE TABLE SNAPED
DEBUGC   DS    CL1                     DEBUG LEVEL
WRK      DS    F
RETFLD   DS    F                       RETURNED FIELD ADDR
TMPLEN   DC    F'10240'                10K
MODE     DS    CL8                     MODE
PROFILE  DS    CL8                     PROFILE
SEGMENT  DS    CL8                     SEGMENT
FIELD    DS    CL8                     FIELD
SG1      DS    CL8                     WORK / CURRENT SEGMENT
PF1      DS    CL8                     WORK / CURRENT PROFILE
RAREA    DS    64F
***************************************************************
*                                                             *
*        SYSTEM CONTROL BLOCKS MAPPING                        *
*                                                             *
***************************************************************
         PRINT GEN
         CVT   DSECT=YES,LIST=YES
         ICHPRCVT
         END
