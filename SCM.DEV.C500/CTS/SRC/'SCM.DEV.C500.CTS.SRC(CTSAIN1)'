CTSAIN1 TITLE ' '                                                       00010000
**********************************************************************  00020000
*                                                                    *  00030000
*                                                                    *  00040000
*                             CTSAIN1                                *  00050000
*                             -------                                *  00060000
*                                                                    *  00070000
*                       WRITTEN BY ARIEL GORDON AND YOSSIE           *  00080000
*                                                                    *  00090000
*                                                                    *  00100000
*   FUNCTION:  THIS PROGRAM IS USED TO FIX INS PARAMETERS IN THE     *  00110000
*              PROCEDURE. IT IS DIFFERENT THAN CTDINS !              *  00120000
*                                                                    *  00130000
*              IT CAN BE ACTIVATED IN FOUR MODES:                    *  00140000
*                  PARM='1X,....                                     *  00150000
*                  PARM='2X,....                                     *  00160000
*                  PARM='3X,....                                     *  00170000
*                  PARM='4X,....                                     *  00180000
*              X IS THE SUFFIX OF THE INSTALLED PRODUCT (A,M,D,R,O,B)*  00190000
*                                                                    *  00200000
*                                                                    *  00210000
*   DD-CARDS:                                                        *  00220000
*              1.  DD-CARD 'DAINS' DEFINES THE PROCEDURE MEMBER      *  00230000
*                                                                    *  00240000
*   INPUT  PARAMETERS:                                               *  00250000
*  MODE 1   R1 -> 1X,ILPREF,ILVER,OLPREF,OLVER,STEPLIB               *  00260000
*  MODE 2   R1 -> 2X,ILUNIT,ILVOL,JOBNAME,FRENCH,GERMAN,JAPANES,JOBCARD 00270000
*  MODE 3   R1 -> 3X,OLUNIT,OLVOL,SMP                                *  00280000
*  MODE 4   R1 -> 4X,OS                                  WM0910      *  00290000
*  MODE 5   R1 -> 5X,SPCPREF,SPCVER,SPCUNIT,SPCVOL,SPAPREF,SPAVER    *  00300000
*  MODE 6   R1 -> 6X,SPAUNIT,SPAVOL,SPDPREF,SPDVER,SPDUNIT,SPDVOL    *  00310000
*                                                                    *  00320000
*  NOTE - 1.THE PRODUCT SUFFIX CHARACTER WILL BE APPENDED BY CTSIN1  *  00330000
*           TO THE FOLLOWING PARAMETERS:                             *  00340000
*           ILPREF,ILVER,OLPREF,OLVER,ILUNIT,ILVOL,OLUNIT,OLVOL      *  00350000
*         2.PARAMETERS CAN BE OMITTED FROM THE INPUT PARAMETERS,     *  00360000
*           PROVIDED THEIR ABSENCE IS MARKED BY A COMMA - EXACTLY    *  00370000
*           AS THE JCL RULES. THIS INCLUDES ALSO THE LAST COMMA.     *  00380000
*--------------------------V 2.0.0---------------------------V200----*  00390000
*  ----  07.06.88  ADD LANGUAGE SUPPORT.                             *  00400000
*--------------------------V 2.1.0---------------------------V210----*  00410000
*  B587  20.12.88  CHECK LENGTH OF JOBCARD TO AVOID S0C1.       AK   *  00420000
*--------------------------V 3.0.0---------------------------V300----*  00430000
*  IOAI  18.02.91  CHANGE FOR IOA INSTALLATION                  EC   *  00440000
*--------------------------M 3.0.0 FJ -------------------------------*  00450000
* WM0910 25.07.91  SUPPORT FUJITSU MSP / MULTIPLE DD HANDLING   EC   *  00460000
* JPN    19.08.91  SUPPORT JAPANESE LANGUAGE                    EC   *  00470000
*--------------------------V 4.0.0 ----------------------------------*  00480000
* SMP/E  05.11.92  SUPPORT SMP/E INSTALLATION                   HT   *  00490000
* SMP/E  02.12.92  SUBSTITUTE ##SMP## IN CHNGEPRC               HT   *  00500000
*--------------------------V 2.1.0 ----------------------------------*  00501000
* PS0157 05.11.92  DEFAULT SECURITY SYSTEM                      DC   *  00502000
*IS10188 06.10.24  MOVE OUR MODULES ABOVE 16M LINE              AL   *  00503000
**********************************************************************  00510000
         EJECT                                                          00520000
         MACRO                                                          00530000
         DEFVAR     &VAR=                                               00540000
         GBLC      &VARN(100),&VARNLEN(100),&REPL(100),&REPLLEN(100)    00550000
         GBLA       &MONE,&LV(100)                                      00560000
         GBLA       &ENTLEN                                             00570000
         ACTR      10000                                                00580000
&MONE    SETA       &MONE+1                                             00590000
&VARN(&MONE)    SETC   '&VAR'                                           00600000
&LV(&MONE)  SETA      K'&VAR                                            00610000
         MEND                                                           00620000
         MACRO                                                          00630000
         REPLACE    &VAR=,&ACT=R,&MCTFLD=,&FLD=,&TYPE=NUM,&LEN=,       *00640000
               &ADDTO=,&TPSZ=F                                          00650000
         GBLC      &VARN(100),&VARNLEN(100),&REPL(100),&REPLLEN(100)    00660000
         GBLA       &MONE,&LV(100)                                      00670000
         GBLA       &ENTLEN                                             00680000
         LCLC       &MONEC                                              00690000
         LCLC       &CHAR                                               00700000
         LCLA       &LENVAR,&I                                          00710000
         ACTR      10000                                                00720000
         PUSH       PRINT                                               00730000
         PRINT      GEN                                                 00740000
         AIF        ('&ACT' EQ    'GEN').GEN                            00750000
&MONE    SETA       &MONE+1                                             00760000
&VARN(&MONE)    SETC   '&VAR'                                           00770000
&LV(&MONE) SETA      K'&VAR                                             00780000
&MONEC   SETC       '&MONE'                                             00790000
         LA        R1,&MONEC                                            00800000
         BCTR      R1,0                                                 00810000
         MH        R1,=Y(FLDLEN)                                        00820000
         A         R1,=A(TABLE)      UPON  ENTRY                        00830000
         USING     FLD,R1                                               00840000
         LR        R15,&LEN                                             00850000
         LTR       R15,R15                                              00860000
.*       BNP       ERR1009                                              00870000
         ST        R15,FLDREPLL                                         00880000
         BCTR      R15,0                                                00890000
&LENVAR  SETA      K'&VAR                                               00900000
&CHAR    SETC      'L'.''''.'&VAR'                                      00910000
         MVC       FLDVARL,=A(&LENVAR)                                  00920000
         AIF       ('&TYPE' EQ   'NUM').NUM                             00930000
.*    ASSUME  CHAR                                                      00940000
         AIF     (T'&MCTFLD  NE    'O').MCT1                            00950000
         MVC       FLDREPL(L'FLDREPL),=100C' '                          00960000
         EX        R15,MOV&SYSNDX.1     MVC    FLDREPL(*-*),&FLD        00970000
*   COMPRESS  BLANKS                                                    00980000
         LA        R14,FLDREPL(R15)                                     00990000
         LA        R15,1(R15)                                           01000000
*     PRTDBG ' VAR="_"',(FLDVAR,15)                                     01010000
*     PRTDBG ' VALUE="_" LTH=#',(&FLD,?R15,?R15)                        01020000
L&SYSNDX.LEN   EQU  *                                                   01030000
         CLI       0(R14),C' '                                          01040000
         BNE       S&SYSNDX.LEN                                         01050000
         BCTR      R14,0                                                01060000
         BCTR      R15,0                                                01070000
         B         L&SYSNDX.LEN                                         01080000
S&SYSNDX.LEN   EQU  *                                                   01090000
         ST        R15,FLDREPLL                                         01100000
         B         END&SYSNDX                                           01110000
MOV&SYSNDX.1    MVC    FLDREPL(*-*),&FLD                                01120000
         AGO      .END                                                  01130000
.MCT1    ANOP                                                           01140000
         MVC       FLDREPL,=100C' '                                     01150000
         EX        R15,MOV&SYSNDX.2     MVC    FLDREPL(*-*),&MCTFLD     01160000
         MVC       FLDREPL,&FLD                                         01170000
         B         END&SYSNDX                                           01180000
MOV&SYSNDX.2    MVC    FLDREPL(*-*),&MCTFLD                             01190000
         AGO      .END                                                  01200000
.NUM     ANOP                                                           01210000
         AIF       (T'&MCTFLD   NE   'O').MCT2                          01220000
         MVC       FLDREPL,=100C' '                                     01230000
         MVC       FLDREPLL,=A(&LEN)                                    01240000
         AIF       ('&TPSZ' EQ   'H').HALF                              01250000
         L         R14,&FLD                                             01260000
         AGO       .CONTHLF                                             01270000
.HALF    ANOP                                                           01280000
         LH        R14,&FLD                                             01290000
.CONTHLF ANOP                                                           01300000
         AIF       (T'&ADDTO    EQ   'O').NOADD                         01310000
         A         R14,&ADDTO                                           01320000
.NOADD   ANOP                                                           01330000
         CVD       R14,CVD&SYSNDX.1                                     01340000
         L         R15,FLDREPLL                                         01350000
         BCTR      R15,0                                                01360000
         SLL       R15,4                                                01370000
         EX        R15,UNPK&SYSNDX                                      01380000
         SRL       R15,4                                                01390000
         LA        R14,FLDREPL(R15)                                     01400000
         OI        0(R14),X'F0'                                         01410000
         B         END&SYSNDX                                           01420000
         DS        0D                                                   01430000
CVD&SYSNDX.1      DS   D                                                01440000
UNPK&SYSNDX   UNPK  FLDREPL(*-*),CVD&SYSNDX.1                           01450000
         AGO       .END                                                 01460000
.MCT2    ANOP                                                           01470000
         MVC       FLDREPL,=100C' '                                     01480000
         MVC       FLDREPLL,=A(&LEN)                                    01490000
         AIF       ('&TPSZ' EQ   'H').HALF1                             01500000
         L         R14,&MCTFLD                                          01510000
         AGO       .CONTHL1                                             01520000
.HALF1   ANOP                                                           01530000
         LH        R14,&MCTFLD                                          01540000
.CONTHL1 ANOP                                                           01550000
         AIF       (T'&ADDTO    EQ   'O').NOADD1                        01560000
         A         R14,&ADDTO                                           01570000
.NOADD1  ANOP                                                           01580000
         CVD       R14,CVD&SYSNDX.2                                     01590000
         L         R15,FLDREPLL                                         01600000
         BCTR      R15,0                                                01610000
         SLL       R15,4                                                01620000
         EX        R15,UNPK&SYSNDX                                      01630000
         SRL       R15,4                                                01640000
         LA        R14,FLDREPL(R15)                                     01650000
         OI        0(R14),X'F0'                                         01660000
         B         END&SYSNDX                                           01670000
         DS        0D                                                   01680000
CVD&SYSNDX.2   DS   D                                                   01690000
UNPK&SYSNDX   UNPK  FLDREPL(*-*),CVD&SYSNDX.2                           01700000
         AGO       .END                                                 01710000
.END     ANOP                                                           01720000
END&SYSNDX   EQU   *                                                    01730000
         AGO       .END1                                                01740000
.GEN    ANOP                                                            01750000
         DS        0F                                                   01760000
TABLE    EQU        *                                                   01770000
.LOOPI   ANOP                                                           01780000
&I       SETA      &I+1                                                 01790000
         AIF      (&I   GT    &MONE).END2                               01800000
         DC        CL44'&VARN(&I)',A(&LV(&I)),A(0),CL44' '              01810000
         AGO      .LOOPI                                                01820000
.END2    ANOP                                                           01830000
TABEND   EQU       *                                                    01840000
.END1    ANOP                                                           01850000
         POP      PRINT                                                 01860000
         MEND                                                           01870000
         EJECT                                                          01880000
         DCBD  DSORG=PS                                          WM0910 01890000
         IEFTIOT1                                                WM0910 01900000
FLD      DSECT                                                          01910000
FLDVAR   DC    CL44' '                                                  01920000
FLDVARL  DC    A(0)                                                     01930000
FLDREPLL DC    A(0)                                                     01940000
FLDREPL  DC    CL44' '                                                  01950000
FLDLEN   EQU   *-FLD                                                    01960000
         EJECT                                                          01970000
CTSAIN1  CSECT                                                          01980000
CTSAIN1  AMODE 24           MUST BE BELOW THE 16M LINE          IS10188 01980101
CTSAIN1  RMODE 24           MUST BE BELOW THE 16M LINE          IS10188 01980201
         CTSEQUR                                                        01981000
         BEGIN    *,R12,R11                                             01990000
         CTSLEVEL CTSAIN1,1.4.0                                         02000000
**********************************************************************  02010000
****                                                              ****  02020000
****       IOA         RELEASE 4.0.0                              ****  02030000
****                                                              ****  02040000
****       LICENCED MATERIAL - 4TH DIMENSION SOFTWARE LTD.        ****  02050000
****                                                              ****  02060000
**********************************************************************  02070000
         LR    R3,R1               SAVE  PARAMETERS                     02080000
         SPACE 3                                                        02090000
*                                                                       02100000
*   OPEN SYSPRINT FILE                                                  02110000
*                                                                       02120000
         OPEN   (DCBOUT,OUTPUT)                                         02130000
         LTR    R15,R15                                                 02140000
         BNZ    ERROR913                                                02150000
         SPACE  3                                                       02160000
*                                                                       02170000
*   CHECK THE INPUT PARAMETERS                                          02180000
*                                                                       02190000
         L     R1,0(,R3)           POINT TO LENGTH OF PARM              02200000
         LH    R2,0(,R1)           GET LENGTH OF PARM                   02210000
         CH    R2,=H'0'            PARM EXISTS ?                        02220000
         BE    MSG1011             IF NOT - ERROR                       02230000
         STH   R2,PARMLTH                                               02240000
         MVI   COMMAND,C' '        FIX A BLANK                          02250000
         MVC   COMMAND+1(L'COMMAND-1),COMMAND                           02260000
         BCTR  R2,0                DECREASE LENGTH BY 1 FOR EX          02270000
SKIP01   EX    R2,MVC1             MOVE COMMAND                         02280000
*  PRTDBG ' COMMAND=_',(COMMAND,110)                                    02290000
         MVC   PRODSUFF,COMMAND+1     KEEP PRODUCT SUFFIX        IOAI   02300000
         CLC   =C'1',COMMAND                                            02310000
         BE    TYPE1                                                    02320000
         CLC   =C'2',COMMAND                                            02330000
         BE    TYPE2                                                    02340000
         CLC   =C'3',COMMAND                                            02350000
         BE    TYPE3                                                    02360000
         CLC   =C'4',COMMAND                                     WM0910 02370000
         BE    TYPE4                                             WM0910 02380000
         CLC   =C'5',COMMAND                                     SMP/E  02390000
         BE    TYPE5                                             SMP/E  02400000
         CLC   =C'6',COMMAND                                     SMP/E  02410000
         BE    TYPE6                                             SMP/E  02420000
         B     MSG1011                                                  02430000
         SPACE 3                                                        02440000
*                                                                       02450000
***    SET UP PARAMETERS  FOR TYPE 1                                    02460000
*                                                                       02470000
TYPE1    EQU   *                                                        02480000
         LA    R7,COMMAND+3            SKIP '1X,' CONSTANT              02490000
         SR    R1,R1                                                    02500000
*                                                                       02510000
         TRT   0(110,R7),COMATAB                                        02520000
         BZ    ERR1009                                                  02530000
         SR    R1,R7                                                    02540000
         LR    R2,R1                                                    02550000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  02560000
         BZ    NILPREF                   YES, SKIP REPLACING      IOAI  02570000
         REPLACE VAR=##ILPREFX##,FLD=0(R7),TYPE=CHAR,LEN=R2       IOAI  02580000
         MVC   FLDVAR+8(1),PRODSUFF   APPEND PRODUCT SUFFIX       IOAI  02590000
         B     YILPREF1                                           IOAI  02600000
NILPREF  EQU   *                                                  IOAI  02610000
         LA    R7,1(R7)               ADVANCE TO NEXT VARIABLE    IOAI  02620000
         B     YILPREF2                  AND CONTINUE WITH IT     IOAI  02630000
YILPREF1 LA    R7,1(R2,R7)            OVER PRESENT EXISTING VAR   IOAI  02640000
YILPREF2 SR    R1,R1                                              IOAI  02650000
*                                                                       02660000
         TRT   0(110,R7),COMATAB                                        02670000
         BZ    ERR1009                                                  02680000
         SR    R1,R7                                                    02690000
         LR    R2,R1                                                    02700000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  02710000
         BZ    NILVER                    YES, SKIP REPLACING      IOAI  02720000
         REPLACE VAR=##ILVERX##,FLD=0(R7),TYPE=CHAR,LEN=R2        IOAI  02730000
         MVC   FLDVAR+7(1),PRODSUFF      APPEND PRODUCT SUFFIX    IOAI  02740000
         B     YILVER1                                            IOAI  02750000
NILVER   EQU   *                                                  IOAI  02760000
         LA    R7,1(R7)               ADVANCE TO NEXT VARIABLE    IOAI  02770000
         B     YILVER2                   AND CONTINUE WITH IT     IOAI  02780000
YILVER1  LA    R7,1(R2,R7)                                              02790000
YILVER2  SR    R1,R1                                                    02800000
*                                                                       02810000
         TRT   0(110,R7),COMATAB                                        02820000
         BZ    ERR1009                                                  02830000
         SR    R1,R7                                                    02840000
         LR    R2,R1                                                    02850000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  02860000
         BZ    NOLPREF                   YES, SKIP REPLACING      IOAI  02870000
         REPLACE VAR=##OLPREFX##,FLD=0(R7),TYPE=CHAR,LEN=R2       IOAI  02880000
         MVC   FLDVAR+8(1),PRODSUFF      APPEND PRODUCT SUFFIX    IOAI  02890000
         B     YOLPREF1                                           IOAI  02900000
NOLPREF  EQU   *                                                  IOAI  02910000
         LA    R7,1(R7)               ADVANCE TO NEXT VARIABLE    IOAI  02920000
         B     YOLPREF2                  AND CONTINUE WITH IT     IOAI  02930000
YOLPREF1 LA    R7,1(R2,R7)                                              02940000
YOLPREF2 SR    R1,R1                                                    02950000
*                                                                       02960000
         TRT   0(110,R7),COMATAB                                        02970000
         BZ    ERR1009                                                  02980000
         SR    R1,R7                                                    02990000
         LR    R2,R1                                                    03000000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  03010000
         BZ    NOLVER                    YES, SKIP REPLACING      IOAI  03020000
         REPLACE VAR=##OLVERX##,FLD=0(R7),TYPE=CHAR,LEN=R2        IOAI  03030000
         MVC   FLDVAR+7(1),PRODSUFF      APPEND PRODUCT SUFFIX    IOAI  03040000
         B     YOLVER1                                            IOAI  03050000
NOLVER   EQU   *                                                  IOAI  03060000
         LA    R7,1(R7)               ADVANCE TO NEXT VARIABLE    IOAI  03070000
         B     YOLVER2                   AND CONTINUE WITH IT     IOAI  03080000
YOLVER1  LA    R7,1(R2,R7)                                              03090000
YOLVER2  LA    R2,COMMAND                                               03100000
*                                                                       03110000
         AH    R2,PARMLTH                                               03120000
         SR    R2,R7                                                    03130000
         LA    R2,1(R2)                                                 03140000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  03150000
         BZ    NSTEPLB                   YES, SKIP REPLACING      IOAI  03160000
         REPLACE VAR=##STEPLIB##,FLD=0(R7),TYPE=CHAR,LEN=R2             03170000
NSTEPLB  EQU   *                                                        03180000
*--------------------------------------------------------------- PS0157 03190000
         PRINT GEN                                                      03190100
         ACFINCVT R2,NONE=NOTACF2                                PS0157 03190200
         LA    R2,4                                              PS0157 03190300
         LA    R7,TYPEACF2                                       PS0157 03190500
         B     ENDGTYPE                                          PS0157 03190600
         PRINT NOGEN                                                    03190700
NOTACF2  DS    0H                                                PS0157 03190800
         L     R2,CVTPTR               LOAD ADDR CVT             PS0157 03190900
         ICM   R2,15,CVTRAC-CVT(R2)    LOAD ADDR CVT RACF        PS0157 03191000
         BZ    NOTTSS                  DEFAULT IS RACF .....     PS0157 03191200
         CLC   =CL4'RTSS',0(R2)                                  PS0157 03191300
         BNE   NOTTSS                                            PS0157 03191400
         LA    R2,3                                              PS0157 03191500
         LA    R7,TYPETSS                                        PS0157 03191600
         B     ENDGTYPE                                          PS0157 03191800
NOTTSS   DS    0H                                                PS0157 03192100
         LA    R2,4                                              PS0157 03193000
         LA    R7,TYPERACF                                       PS0157 03194000
         B     ENDGTYPE                                          PS0157 03210100
TYPERACF DC    C'RACF'                                           PS0157 03210300
TYPETSS  DC    C'TSS'                                            PS0157 03210400
TYPEACF2 DC    C'ACF2'                                           PS0157 03210500
ENDGTYPE DS    0H                                                PS0157 03210600
         REPLACE VAR=##RSSGTYP##,FLD=0(R7),TYPE=CHAR,LEN=R2      PS0157 03210700
*--------------------------------------------------------------- PS0157 03220000
         B     STARTMSG                                                 03230000
*                                                                       03250000
***    SET UP PARAMETERS  FOR TYPE 2                                    03260000
*                                                                       03270000
TYPE2    EQU   *                                                        03280000
         LA    R7,COMMAND+3            SKIP '2X,' CONSTANT              03290000
         SR    R1,R1                                                    03300000
*                                                                       03310000
         TRT   0(110,R7),COMATAB                                        03320000
         BZ    ERR1009                                                  03330000
         SR    R1,R7                                                    03340000
         LR    R2,R1                                                    03350000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  03360000
         BZ    NILUNIT                   YES, SKIP REPLACING      IOAI  03370000
         REPLACE VAR=##ILUNITX##,FLD=0(R7),TYPE=CHAR,LEN=R2       IOAI  03380000
         MVC   FLDVAR+8(1),PRODSUFF      APPEND PRODUCT SUFFIX    IOAI  03390000
         B     YILUNIT1                                           IOAI  03400000
NILUNIT  EQU   *                                                  IOAI  03410000
         LA    R7,1(R7)               ADVANCE TO NEXT VARIABLE    IOAI  03420000
         B     YILUNIT2                  AND CONTINUE WITH IT     IOAI  03430000
YILUNIT1 LA    R7,1(R2,R7)                                              03440000
YILUNIT2 SR    R1,R1                                                    03450000
*                                                                       03460000
         TRT   0(110,R7),COMATAB                                        03470000
         BZ    ERR1009                                                  03480000
         SR    R1,R7                                                    03490000
         LR    R2,R1                                                    03500000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  03510000
         BZ    NILVOL                    YES, SKIP REPLACING      IOAI  03520000
         REPLACE VAR=##ILVOLX##,FLD=0(R7),TYPE=CHAR,LEN=R2        IOAI  03530000
         MVC   FLDVAR+7(1),PRODSUFF      APPEND PRODUCT SUFFIX    IOAI  03540000
         B     YILVOL1                                            IOAI  03550000
NILVOL   EQU   *                                                  IOAI  03560000
         LA    R7,1(R7)               ADVANCE TO NEXT VARIABLE    IOAI  03570000
         B     YILVOL2                   AND CONTINUE WITH IT     IOAI  03580000
YILVOL1  LA    R7,1(R2,R7)                                              03590000
YILVOL2  SR    R1,R1                                                    03600000
*                                                                       03610000
         TRT   0(110,R7),COMATAB                                        03620000
         BZ    ERR1009                                                  03630000
         SR    R1,R7                                                    03640000
         LR    R2,R1                                                    03650000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  03660000
         BZ    NJOBNM                    YES, SKIP REPLACING      IOAI  03670000
         REPLACE VAR=##JOBNAME##,FLD=0(R7),TYPE=CHAR,LEN=R2             03680000
         B     YJOBNM1                                            IOAI  03690000
NJOBNM   EQU   *                                                  IOAI  03700000
         LA    R7,1(R7)               ADVANCE TO NEXT VARIABLE    IOAI  03710000
         B     YJOBNM2                   AND CONTINUE WITH IT     IOAI  03720000
YJOBNM1  LA    R7,1(R2,R7)                                              03730000
YJOBNM2  SR    R1,R1                                                    03740000
*                                                                       03750000
         TRT   0(110,R7),COMATAB                                        03760000
         BZ    ERR1009                                                  03770000
         SR    R1,R7                                                    03780000
         LR    R2,R1                                                    03790000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  03800000
         BZ    NFRENCH                   YES, SKIP REPLACING      IOAI  03810000
         REPLACE VAR=##FRENCH##,FLD=0(R7),TYPE=CHAR,LEN=R2              03820000
         B     YFRENCH1                                           IOAI  03830000
NFRENCH  EQU   *                                                  IOAI  03840000
         LA    R7,1(R7)               ADVANCE TO NEXT VARIABLE    IOAI  03850000
         B     YFRENCH2                  AND CONTINUE WITH IT     IOAI  03860000
YFRENCH1 LA    R7,1(R2,R7)                                              03870000
YFRENCH2 SR    R1,R1                                                    03880000
*                                                                       03890000
         TRT   0(110,R7),COMATAB                                        03900000
         BZ    ERR1009                                                  03910000
         SR    R1,R7                                                    03920000
         LR    R2,R1                                                    03930000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  03940000
         BZ    NGERMAN                   YES, SKIP REPLACING      IOAI  03950000
         REPLACE VAR=##GERMAN##,FLD=0(R7),TYPE=CHAR,LEN=R2              03960000
         B     YGERMAN1                                           IOAI  03970000
NGERMAN  EQU   *                                                  IOAI  03980000
         LA    R7,1(R7)               ADVANCE TO NEXT VARIABLE    IOAI  03990000
         B     YGERMAN2                  AND CONTINUE WITH IT     IOAI  04000000
YGERMAN1 LA    R7,1(R2,R7)                                              04010000
YGERMAN2 LA    R2,COMMAND                                               04020000
*                                                                       04030000
         TRT   0(110,R7),COMATAB                                  JPN   04040000
         BZ    ERR1009                                            JPN   04050000
         SR    R1,R7                                              JPN   04060000
         LR    R2,R1                                              JPN   04070000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? JPN   04080000
         BZ    NJAPAN                    YES, SKIP REPLACING      JPN   04090000
         REPLACE VAR=##JAPANES##,FLD=0(R7),TYPE=CHAR,LEN=R2             04100000
         B     YJAPAN1                                            JPN   04110000
NJAPAN   EQU   *                                                  JPN   04120000
         LA    R7,1(R7)               ADVANCE TO NEXT VARIABLE    JPN   04130000
         B     YJAPAN2                   AND CONTINUE WITH IT     JPN   04140000
YJAPAN1  LA    R7,1(R2,R7)                                        JPN   04150000
YJAPAN2  LA    R2,COMMAND                                         JPN   04160000
*                                                                       04170000
         AH    R2,PARMLTH                                               04180000
         SR    R2,R7                                                    04190000
         LA    R2,1(R2)                                                 04200000
         C     R2,=F'44'           IS NAME LONGER THAN 44 CHARS?  B587  04210000
         BH    ERR1009             IF YES - GO HANDLE ERROR       B587  04220000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  04230000
         BZ    NJBCARD                   YES, SKIP REPLACING      IOAI  04240000
         REPLACE VAR=##JOBCARD##,FLD=0(R7),TYPE=CHAR,LEN=R2             04250000
NJBCARD  EQU   *                                                        04260000
         B     STARTMSG                                                 04270000
         SPACE 3                                                        04280000
*                                                                       04290000
***    SET UP PARAMETERS  FOR TYPE 3                                    04300000
*                                                                       04310000
TYPE3    EQU   *                                                        04320000
         LA    R7,COMMAND+3            SKIP '3X,' CONSTANT              04330000
         SR    R1,R1                                                    04340000
*                                                                       04350000
         TRT   0(110,R7),COMATAB                                        04360000
         BZ    ERR1009                                                  04370000
         SR    R1,R7                                                    04380000
         LR    R2,R1                                                    04390000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  04400000
         BZ    NOLUNIT                   YES, SKIP REPLACING      IOAI  04410000
         REPLACE VAR=##OLUNITX##,FLD=0(R7),TYPE=CHAR,LEN=R2       IOAI  04420000
         MVC   FLDVAR+8(1),PRODSUFF      APPEND PRODUCT SUFFIX    IOAI  04430000
         B     YOLUNIT1                                           IOAI  04440000
NOLUNIT  EQU   *                                                  IOAI  04450000
         LA    R7,1(R7)               ADVANCE TO NEXT VARIABLE    IOAI  04460000
         B     YOLUNIT2                  AND CONTINUE WITH IT     IOAI  04470000
YOLUNIT1 LA    R7,1(R2,R7)                                              04480000
YOLUNIT2 EQU   *                                                 SMP/E  04490000
         SR    R1,R1               CLEAR R1                      SMP/E  04500000
         TRT   0(110,R7),COMATAB   COMMA FOUND?                  SMP/E  04510000
         BZ    ERR1009             NO, ERROR MESSAGE             SMP/E  04520000
         SR    R1,R7                                             SMP/E  04530000
         LR    R2,R1                                             SMP/E  04540000
         LTR   R2,R2                                             SMP/E  04550000
         BZ    NOLVOL                                            SMP/E  04560000
         REPLACE VAR=##OLVOLX##,FLD=0(R7),TYPE=CHAR,LEN=R2       SMP/E  04570000
         MVC   FLDVAR+7(1),PRODSUFF      APPEND PRODUCT SUFFIX   SMP/E  04580000
         B     YOLVOL1                                           SMP/E  04590000
NOLVOL   EQU   *                                                 SMP/E  04600000
         LA    R7,1(,R7)                                         SMP/E  04610000
         B     YOLVOL2                                           SMP/E  04620000
YOLVOL1  EQU   *                                                 SMP/E  04630000
         LA    R7,1(R2,R7)                                       SMP/E  04640000
YOLVOL2  EQU   *                                                 SMP/E  04650000
         LA    R2,COMMAND                                               04660000
*                                                                       04670000
         AH    R2,PARMLTH                                               04680000
         SR    R2,R7                                                    04690000
         LA    R2,1(R2)                                                 04700000
         LTR   R2,R2                  VARIABLE MISSING FROM PARM? IOAI  04710000
         BZ    NOSMPENV                  YES, SKIP REPLACING      IOAI  04720000
         REPLACE VAR=##SMPENV##,FLD=0(R7),TYPE=CHAR,LEN=R2              04730000
NOSMPENV EQU   *                                                        04740000
         B     STARTMSG                                                 04750000
*                                                                WM0910 04760000
***    SET UP PARAMETERS  FOR TYPE 4                             WM0910 04770000
*                                                                WM0910 04780000
TYPE4    EQU   *                                                 WM0910 04790000
         LH    R1,PARMLTH              PARAMETER LENGTH          WM0910 04800000
         CH    R1,=H'3'                OS PARM PRESENT ?         WM0910 04810000
         BE    OSMVS                     NO, ASSUME MVS          WM0910 04820000
         CH    R1,=H'6'                VALID OS PARM PRESENT ?   WM0910 04830000
         BNE   MSG1012                   NO, ERRROR              WM0910 04840000
         CLC   COMMAND+3(3),=CL3'MVS'  IS IT MVS ?               WM0910 04850000
         BE    OSMVS                      YES                    WM0910 04860000
         CLC   COMMAND+3(3),=CL3'390'  IS IT OS/390              WM0910 04870000
         BE    OS390                      YES                    WM0910 04880000
         B     MSG1012                    OTHERWISE, ERROR       WM0910 04890000
OS390    EQU   *                                                 WM0910 04900000
         LA    R1,PGMSTAB              UPDATE                    WM0910 04910000
         LA    R0,PGMSENT#             ..ALL                     WM0910 04920000
OS390LOP MVC   0(PGMSL,R1),PGMSL(R1)   ..MSP                     WM0910 04930000
         LA    R1,PGMSL(R1)            ..VARIABLES               WM0910 04940000
         BCT   R0,OS390LOP                                       WM0910 04950000
OSMVS    EQU   *                                                 WM0910 04960000
         LA    R7,IEBCOPY                                        WM0910 04970000
         LH    R2,IEBCOPY+8                                      WM0910 04980000
         REPLACE VAR=##IEBCOPY##,FLD=0(R7),TYPE=CHAR,LEN=R2      WM0910 04990000
         LA    R7,IKJEFT01                                       WM0910 05000000
         LH    R2,IKJEFT01+8                                     WM0910 05010000
         REPLACE VAR=##IKJEFT01##,FLD=0(R7),TYPE=CHAR,LEN=R2     WM0910 05020000
         LA    R7,IDCAMS                                         WM0910 05030000
         LH    R2,IDCAMS+8                                       WM0910 05040000
         REPLACE VAR=##IDCAMS##,FLD=0(R7),TYPE=CHAR,LEN=R2       WM0910 05050000
         LA    R7,IEFBR14                                        WM0910 05060000
         LH    R2,IEFBR14+8                                      WM0910 05070000
         REPLACE VAR=##IEFBR14##,FLD=0(R7),TYPE=CHAR,LEN=R2      WM0910 05080000
         LA    R7,LKED                                           WM0910 05090000
         LH    R2,LKED+8                                         WM0910 05100000
         REPLACE VAR=##LKED##,FLD=0(R7),TYPE=CHAR,LEN=R2         WM0910 05110000
         LA    R7,ASSEM                                          WM0910 05120000
         LH    R2,ASSEM+8                                        WM0910 05130000
         REPLACE VAR=##ASSEM##,FLD=0(R7),TYPE=CHAR,LEN=R2        WM0910 05140000
         LA    R7,IFOX00                                         WM0910 05150000
         LH    R2,IFOX00+8                                       WM0910 05160000
         REPLACE VAR=##IFOX00##,FLD=0(R7),TYPE=CHAR,LEN=R2       WM0910 05170000
         LA    R7,MAIN                                           WM0910 05180000
         LH    R2,MAIN+8                                         WM0910 05190000
         REPLACE VAR=##MAIN##,FLD=0(R7),TYPE=CHAR,LEN=R2         WM0910 05200000
         LA    R7,MVS                                            WM0910 05210000
         LH    R2,MVS+8                                          WM0910 05220000
         REPLACE VAR=##OS##,FLD=0(R7),TYPE=CHAR,LEN=R2           WM0910 05230000
         B     STARTMSG                                          WM0910 05240000
         SPACE 3                                                 WM0910 05250000
TYPE5    EQU    *                                                SMP/E  05260000
         LA    R7,COMMAND+3        SKIP '1X,' CONSTANT           SMP/E  05270000
         SR    R1,R1               CLEAR R1                      SMP/E  05280000
         TRT   0(110,R7),COMATAB   GO SEARCH FOR A COMMA         SMP/E  05290000
         BZ    ERR1009             NONE FOUND, ERROR             SMP/E  05300000
         SR    R1,R7               OFFSET TO END OF PARM SEGMENT SMP/E  05310000
         LR    R2,R1               KEPT ON R2 AS WELL            SMP/E  05320000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  05330000
         BZ    NSCPREF             YES, NO SMPCSI PREFIX REPLA   SMP/E  05340000
         REPLACE VAR=##SPCPREF##,FLD=0(R7),TYPE=CHAR,LEN=R2      SMP/E  05350000
         LA    R7,1(R2,R7)         OVER PRESENT EXISTING VAR     SMP/E  05360000
         B     YSCPREF2            GO CONTINUE WITH NEXT PARM    SMP/E  05370000
NSCPREF  EQU   *                                                 SMP/E  05380000
         LA    R7,1(R7)            ADVANCE TO NEXT VARIABLE      SMP/E  05390000
YSCPREF2 EQU   *                                                 SMP/E  05400000
         SR    R1,R1               CLEAR R1                      SMP/E  05410000
         TRT   0(110,R7),COMATAB   GO SEARCH FOR A COMMA         SMP/E  05420000
         BZ    ERR1009             NONE FOUND, ERROR             SMP/E  05430000
         SR    R1,R7               OFFSET TO END OF PARM SEGMENT SMP/E  05440000
         LR    R2,R1               KEPT ON R2 AS WELL            SMP/E  05450000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  05460000
         BZ    NSCVER              YES, NO SMPCSI VER REPLACE    SMP/E  05470000
         REPLACE VAR=##SPCVER##,FLD=0(R7),TYPE=CHAR,LEN=R2       SMP/E  05480000
         LA    R7,1(R2,R7)         OVER PRESENT EXISTING VAR     SMP/E  05490000
         B     YSCVER2             GO CONTINUE WITH NEXT PARM    SMP/E  05500000
NSCVER   EQU   *                                                 SMP/E  05510000
         LA    R7,1(R7)            ADVANCE TO NEXT VARIABLE      SMP/E  05520000
YSCVER2  EQU   *                                                 SMP/E  05530000
         SR    R1,R1               CLEAR R1                      SMP/E  05540000
         TRT   0(110,R7),COMATAB   GO SEARCH FOR A COMMA         SMP/E  05550000
         BZ    ERR1009             NONE FOUND, ERROR             SMP/E  05560000
         SR    R1,R7               OFFSET TO END OF PARM SEGMENT SMP/E  05570000
         LR    R2,R1               KEPT ON R2 AS WELL            SMP/E  05580000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  05590000
         BZ    NSCUNIT             YES, NO SMPCSI UNIT REPLACE   SMP/E  05600000
         REPLACE VAR=##SPCUNIT##,FLD=0(R7),TYPE=CHAR,LEN=R2      SMP/E  05610000
         LA    R7,1(R2,R7)         OVER PRESENT EXISTING VAR     SMP/E  05620000
         B     YSCUNIT2            GO CONTINUE WITH NEXT PARM    SMP/E  05630000
NSCUNIT  EQU   *                                                 SMP/E  05640000
         LA    R7,1(R7)            ADVANCE TO NEXT VARIABLE      SMP/E  05650000
YSCUNIT2 EQU   *                                                 SMP/E  05660000
         SR    R1,R1               CLEAR R1                      SMP/E  05670000
         TRT   0(110,R7),COMATAB   GO SEARCH FOR A COMMA         SMP/E  05680000
         BZ    ERR1009             NONE FOUND, ERROR             SMP/E  05690000
         SR    R1,R7               OFFSET TO END OF PARM SEGMENT SMP/E  05700000
         LR    R2,R1               KEPT ON R2 AS WELL            SMP/E  05710000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  05720000
         BZ    NSCVOL              YES, NO SMPCSI VOLUME REPLACE SMP/E  05730000
         REPLACE VAR=##SPCVOL##,FLD=0(R7),TYPE=CHAR,LEN=R2       SMP/E  05740000
         LA    R7,1(R2,R7)         OVER PRESENT EXISTING VAR     SMP/E  05750000
         B     YSCVOL2             GO CONTINUE WITH NEXT PARM    SMP/E  05760000
NSCVOL   EQU   *                                                 SMP/E  05770000
         LA    R7,1(R7)            ADVANCE TO NEXT VARIABLE      SMP/E  05780000
YSCVOL2  EQU   *                                                 SMP/E  05790000
         SR    R1,R1               CLEAR R1                      SMP/E  05800000
         TRT   0(110,R7),COMATAB   GO SEARCH FOR A COMMA         SMP/E  05810000
         BZ    ERR1009             NONE FOUND, ERROR             SMP/E  05820000
         SR    R1,R7               OFFSET TO END OF PARM SEGMENT SMP/E  05830000
         LR    R2,R1               KEPT ON R2 AS WELL            SMP/E  05840000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  05850000
         BZ    NSAPREF             YES, NO SMPAUX PREFIX REPLACE SMP/E  05860000
         REPLACE VAR=##SPAPREF##,FLD=0(R7),TYPE=CHAR,LEN=R2      SMP/E  05870000
         LA    R7,1(R2,R7)         OVER PRESENT EXISTING VAR     SMP/E  05880000
         B     YSAPREF2            GO CONTINUE WITH NEXT PARM    SMP/E  05890000
NSAPREF  EQU   *                                                 SMP/E  05900000
         LA    R7,1(R7)            ADVANCE TO NEXT VARIABLE      SMP/E  05910000
YSAPREF2 EQU   *                                                 SMP/E  05920000
         LA    R2,COMMAND          COMMAND ADDRESS               SMP/E  05930000
         AH    R2,PARMLTH          POINT TO END                  SMP/E  05940000
         SR    R2,R7               AND GET LENGTH OF LAST ENTRY  SMP/E  05950000
         LA    R2,1(,R2)                                         SMP/E  05960000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  05970000
         BZ    NSAVER              YES, NO SMPAUX VER REPLACE    SMP/E  05980000
         REPLACE VAR=##SPAVER##,FLD=0(R7),TYPE=CHAR,LEN=R2       SMP/E  05990000
NSAVER   B     STARTMSG            GO PROCESS                    SMP/E  06000000
         EJECT                                                   SMP/E  06010000
TYPE6    EQU    *                                                SMP/E  06020000
         LA    R7,COMMAND+3        SKIP '1X,' CONSTANT           SMP/E  06030000
         SR    R1,R1               CLEAR R1                      SMP/E  06040000
         TRT   0(110,R7),COMATAB   GO SEARCH FOR A COMMA         SMP/E  06050000
         BZ    ERR1009             NONE FOUND, ERROR             SMP/E  06060000
         SR    R1,R7               OFFSET TO END OF PARM SEGMENT SMP/E  06070000
         LR    R2,R1               KEPT ON R2 AS WELL            SMP/E  06080000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  06090000
         BZ    NSAUNIT             YES, NO SMPCSI UNIT REPLACE   SMP/E  06100000
         REPLACE VAR=##SPAUNIT##,FLD=0(R7),TYPE=CHAR,LEN=R2      SMP/E  06110000
         LA    R7,1(R2,R7)         OVER PRESENT EXISTING VAR     SMP/E  06120000
         B     YSAUNIT2            GO CONTINUE WITH NEXT PARM    SMP/E  06130000
NSAUNIT  EQU   *                                                 SMP/E  06140000
         LA    R7,1(R7)            ADVANCE TO NEXT VARIABLE      SMP/E  06150000
YSAUNIT2 EQU   *                                                 SMP/E  06160000
         SR    R1,R1                                             SMP/E  06170000
         TRT   0(110,R7),COMATAB   GO SEARCH FOR A COMMA         SMP/E  06180000
         BZ    ERR1009             NONE FOUND, ERROR             SMP/E  06190000
         SR    R1,R7               OFFSET TO END OF PARM SEGMENT SMP/E  06200000
         LR    R2,R1               KEPT ON R2 AS WELL            SMP/E  06210000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  06220000
         BZ    NSAVOL              YES, NO SMPAUX VOL REPLACE    SMP/E  06230000
         REPLACE VAR=##SPAVOL##,FLD=0(R7),TYPE=CHAR,LEN=R2       SMP/E  06240000
         LA    R7,1(R2,R7)         OVER PRESENT EXISTING VAR     SMP/E  06250000
         B     YSAVOL2             GO CONTINUE WITH NEXT PARM    SMP/E  06260000
NSAVOL   EQU   *                                                 SMP/E  06270000
         LA    R7,1(R7)            ADVANCE TO NEXT VARIABLE      SMP/E  06280000
YSAVOL2  EQU   *                                                 SMP/E  06290000
         SR    R1,R1                                             SMP/E  06300000
         TRT   0(110,R7),COMATAB   GO SEARCH FOR A COMMA         SMP/E  06310000
         BZ    ERR1009             NONE FOUND, ERROR             SMP/E  06320000
         SR    R1,R7               OFFSET TO END OF PARM SEGMENT SMP/E  06330000
         LR    R2,R1               KEPT ON R2 AS WELL            SMP/E  06340000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  06350000
         BZ    NSDPREF             YES, NO SMP DLIB PREFIX REP   SMP/E  06360000
         REPLACE VAR=##SPDPREF##,FLD=0(R7),TYPE=CHAR,LEN=R2      SMP/E  06370000
         LA    R7,1(R2,R7)         OVER PRESENT EXISTING VAR     SMP/E  06380000
         B     YSDPREF2            GO CONTINUE WITH NEXT PARM    SMP/E  06390000
NSDPREF  EQU   *                                                 SMP/E  06400000
         LA    R7,1(R7)            ADVANCE TO NEXT VARIABLE      SMP/E  06410000
YSDPREF2 EQU   *                                                 SMP/E  06420000
         SR    R1,R1                                             SMP/E  06430000
         TRT   0(110,R7),COMATAB   GO SEARCH FOR A COMMA         SMP/E  06440000
         BZ    ERR1009             NONE FOUND, ERROR             SMP/E  06450000
         SR    R1,R7               OFFSET TO END OF PARM SEGMENT SMP/E  06460000
         LR    R2,R1               KEPT ON R2 AS WELL            SMP/E  06470000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  06480000
         BZ    NSDVER              YES, NO SMP DLIB VER REPLACE  SMP/E  06490000
         REPLACE VAR=##SPDVER##,FLD=0(R7),TYPE=CHAR,LEN=R2       SMP/E  06500000
         LA    R7,1(R2,R7)         OVER PRESENT EXISTING VAR     SMP/E  06510000
         B     YSDVER2             GO CONTINUE WITH NEXT PARM    SMP/E  06520000
NSDVER   EQU   *                                                 SMP/E  06530000
         LA    R7,1(R7)            ADVANCE TO NEXT VARIABLE      SMP/E  06540000
YSDVER2  EQU   *                                                 SMP/E  06550000
         SR    R1,R1               CLEAR R1                      SMP/E  06560000
         TRT   0(110,R7),COMATAB   GO SEARCH FOR A COMMA         SMP/E  06570000
         BZ    ERR1009             NONE FOUND, ERROR             SMP/E  06580000
         SR    R1,R7               OFFSET TO END OF PARM SEGMENT SMP/E  06590000
         LR    R2,R1               KEPT ON R2 AS WELL            SMP/E  06600000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  06610000
         BZ    NSDUNIT             YES, NO SMPAUX PREFIX REPLACE SMP/E  06620000
         REPLACE VAR=##SPDUNIT##,FLD=0(R7),TYPE=CHAR,LEN=R2      SMP/E  06630000
         LA    R7,1(R2,R7)         OVER PRESENT EXISTING VAR     SMP/E  06640000
         B     YSDUNIT2            GO CONTINUE WITH NEXT PARM    SMP/E  06650000
NSDUNIT  EQU   *                                                 SMP/E  06660000
         LA    R7,1(R7)            ADVANCE TO NEXT VARIABLE      SMP/E  06670000
YSDUNIT2 EQU   *                                                 SMP/E  06680000
         LA    R2,COMMAND          COMMAND ADDRESS               SMP/E  06690000
         AH    R2,PARMLTH          POINT TO END                  SMP/E  06700000
         SR    R2,R7               AND GET LENGTH OF LAST ENTRY  SMP/E  06710000
         LA    R2,1(,R2)                                         SMP/E  06720000
         LTR   R2,R2               VARIABLE MISSING FROM PARM?   SMP/E  06730000
         BZ    NSDVOL              YES, NO SMP DLIB VOL REPLACE  SMP/E  06740000
         REPLACE VAR=##SPDVOL##,FLD=0(R7),TYPE=CHAR,LEN=R2       SMP/E  06750000
NSDVOL   B     STARTMSG            GO PROCESS                    SMP/E  06760000
         SPACE 3                                                 SMP/E  06770000
*                                                                       06780000
***    INFORM  START  OF REPLACING                                      06790000
*                                                                       06800000
STARTMSG EQU  *                                                         06810000
         EXTRACT ATIOT,FIELDS=(TIOT)   GET TIOT                  WM0910 06820000
         L     R2,ATIOT                   ADDRESS                WM0910 06830000
         LA    R2,TIOELNGH-TIOT1(R2)    START OF DDNAMES         WM0910 06840000
         ST    R2,ATIOT                                          WM0910 06850000
LOOKDDNM L     R2,ATIOT                CURR AVAIL. ENTRY         WM0910 06860000
         XR    R3,R3                                             WM0910 06870000
         IC    R3,TIOELNGH-TIOELNGH(R2)                          WM0910 06880000
         LTR   R3,R3                   END OF TIOT ?             WM0910 06890000
         BZ    RETURNOK                   YES, FINISH            WM0910 06900000
         CLC   TIOEDDNM-TIOELNGH(5,R2),DDDAINS  DAINS DD ?       WM0910 06910000
         BE    DDOK                       YES, IT IS             WM0910 06920000
         AR    R2,R3                   NEXT TIOT ENTRY           WM0910 06930000
         ST    R2,ATIOT                ..UPDATE FOR NEXT PASS    WM0910 06940000
         B     LOOKDDNM                ..AND BRANCH TO IT        WM0910 06950000
DDOK     EQU   *                                                 WM0910 06960000
         ST    R2,ATIOT               ..UPDATE FOR NEXT PASS     WM0910 06970000
*                                                                       06980000
***    OPEN     DAINS  LIBRARY                                          06990000
*                                                                       07000000
         MVC    DAINS+DCBDDNAM-IHADCB(8),TIOEDDNM-TIOELNGH(R2)   WM0910 07010000
         OPEN   (DAINS,UPDAT)                                           07020000
         LTR    R15,R15                                                 07030000
         BNZ    MSG1002                                                 07040000
         SPACE 3                                                        07050000
*                                                                       07060000
***      GET   NEXT  RECORD  FROM  MEMBER                               07070000
*                                                                       07080000
GET      EQU    *                                                       07090000
         GET    DAINS                                                   07100000
         NI     FLAG,255-$WORK                                          07110000
         MVC    CARD,0(R1)                                              07120000
         MVC    NEWCARD,=80C' '                                         07130000
         MVC    NEWCARD1,=80C' '                                        07140000
         LR     R3,R1                                                   07150000
         LA     R8,CARD                                                 07160000
         LA     R4,70                                                   07170000
*        PRTDBG ' WORKING ON _',(CARD,80)                               07180000
         DROP   R1                                                      07181000
         USING  FLD,R5                                                  07190000
         LA     R9,NEWCARD                                              07200000
LOOPCARD EQU    *                                                       07210000
*                                                                       07220000
***     SEARCH   FOR  VARIABLE IN CARD                                  07230000
*                                                                       07240000
         LM     R5,R7,=A(TABLE,FLDLEN,TABEND)                           07250000
         USING  FLD,R5                                                  07260000
LOOPVAR  EQU    *                                                       07270000
         L      R15,FLDVARL                                             07280000
         BCTR   R15,0                                                   07290000
         EX     R15,SEARCH       CLC     FLDVAR(*-*),0(R8)              07300000
         BE     REPLIT                                                  07310000
LOOPVARC EQU    *                                                       07320000
         BXLE   R5,R6,LOOPVAR                                           07330000
LOOPVARE EQU    *                                                       07340000
         MVC    0(1,R9),0(R8)                                           07350000
         LA     R8,1(R8)                                                07360000
         C      R8,=A(CARD+70)                                          07370000
         BH     PUTX                                                    07380000
         LA     R9,1(R9)                                                07390000
         C      R9,=A(NEWCARD+70)                                       07400000
         BH     PUTX                                                    07410000
         BCT    R4,LOOPCARD                                             07420000
         B      PUTX                                                    07430000
         SPACE  3                                                       07440000
*                                                                       07450000
***       IF   STRING   FOUND  THEN  REPLACE IT                   IOAI  07460000
*                                                                       07470000
REPLIT   EQU    *                                                       07480000
         ICM    R14,B'1111',FLDREPLL                                    07490000
         BZ     LOOPVARE                                                07500000
*   PRTDBG ' IN REPLIT ON _',(0(R8),15)                                 07510000
         OI     FLAG,$WORK       SYN  WE  CHANGED  SOMETHING            07520000
         L      R14,FLDREPLL                                            07530000
         BCTR   R14,0                                                   07540000
         EX     R14,MOVEREPL     MVC     0(*-*,R9),FLDREPL              07550000
         LA     R9,1(R14,R9)                                            07560000
         C      R9,=A(NEWCARD+70)                                       07570000
         BH     PUTX                                                    07580000
         LA     R8,1(R15,R8)                                            07590000
         C      R8,=A(CARD+70)                                          07600000
         BH     PUTX                                                    07610000
         B      LOOPCARD         ANOTHER   VARIBLE  CAN BE IN CARD      07620000
PUTX     EQU    *                                                       07630000
         TM     FLAG,$WORK       ANYTHING  DONE                         07640000
         BZ     GET              NO                                     07650000
         SPACE  3                                                       07660000
*                                                                       07670000
***      SHOW   CARD   BEFORE  CHANGE                                   07680000
*                                                                       07690000
         CTSMSG1 CODE=CTS905I,PLANT=(80,0(R3)),ROUT=OUT                 07700000
*                                                                       07710000
***      SHOW   CARD   AFTER   CHANGE                                   07720000
*                                                                       07730000
         CTSMSG1 CODE=CTS906I,PLANT=(80,NEWCARD),ROUT=OUT               07740000
         MVC    0(70,R3),NEWCARD                                        07750000
         LR     R1,R3                                                   07760000
         PUTX   DAINS                                                   07770000
         B      GET                                                     07780000
EODAD    CLOSE  DAINS                                                   07790000
         L      R2,ATIOT                CURR AVAIL. ENTRY        WM0910 07800000
         MVC     DDMSG(8),TIOEDDNM-TIOELNGH(R2)                  WM0910 07810000
         CTSMSG1 CODE=CTS914E,ROUT=(OUT,WTO),WTOCON=CTS,         WM0910*07820000
               PLANT=(8,DDMSG)                                   WM0910 07830000
         XR     R3,R3                                            WM0910 07840000
         IC     R3,TIOELNGH-TIOELNGH(R2)                         WM0910 07850000
         AR     R2,R3                   NEXT TIOT ENTRY          WM0910 07860000
         ST     R2,ATIOT                ..SAVE IT                WM0910 07870000
         B      LOOKDDNM                ..AND LOOP AGAIN         WM0910 07880000
         SPACE  3                                                       07890000
RETURNOK CLOSE   DCBOUT                                                 07900000
         SR     R15,R15                                                 07910000
RETURN   EQU    *                                                       07920000
         BRTRN   (15)                                                   07930000
         SPACE  3                                                       07940000
*                                                                       07950000
***  MISSING  PARAMETR IN PARM FIELD                                    07960000
*                                                                       07970000
MSG1011  CTSMSG1   CODE=CTS911E,ROUT=(OUT,WTO),WTOCON=CTS               07980000
         CLOSE   DCBOUT                                                 07990000
         LA      R15,8                                                  08000000
         B       RETURN                                                 08010000
         SPACE  3                                                       08020000
*                                                                       08030000
***  INVALID OS PARAMETER                                       WM0910  08040000
*                                                                       08050000
MSG1012  CTSMSG1   CODE=CTS912E,ROUT=(OUT,WTO2),WTOCON=CTS      WM0910  08060000
         ABEND   1012                                           WM0910  08070000
         CLOSE   DCBOUT                                         WM0910  08080000
         LA      R15,8                                          WM0910  08090000
         B       RETURN                                         WM0910  08100000
         SPACE  3                                                       08110000
*                                                                       08120000
***  OPEN   FAILED  FOR  "DAINS"   DDNAME                               08130000
*                                                                       08140000
MSG1002  MVC     DDMSG(8),TIOEDDNM-TIOELNGH(R2)                         08150000
         CTSMSG1 CODE=CTS907E,ROUT=(OUT,WTO),WTOCON=CTS,               X08160000
               PLANT=(8,DDMSG)                                          08170000
         CLOSE   DCBOUT                                                 08180000
         LA      R15,8                                                  08190000
         B       RETURN                                                 08200000
         SPACE 3                                                        08210000
*                                                                       08220000
*  INVALID PARM WAS SPECIFIED                                           08230000
*                                                                       08240000
ERR1009  EQU    *                                                       08250000
         CTSMSG1 CODE=CTS909E,PLANT=(80,COMMAND),ROUT=(OUT,WTO),       X08260000
               WTOCON=CTS                                               08270000
         LA     R15,8                                                   08280000
         B      RETURN                                                  08290000
         SPACE  3                                                       08300000
*                                                                       08310000
***   OPEN  OF  SYSPRINT  DD  FAILED                                    08320000
*                                                                       08330000
ERROR913 CTSMSG1   CODE=CTS913S,ROUT=WTO,WTOCON=CTS                     08340000
         BRTRN  8                                                       08350000
*                                                                       08360000
PGMSTAB  EQU   *                                 START OF TAB    WM0910 08370000
IEBCOPY  DC    C'IEBCOPY ',H'7',C'IEBCOPY ',H'7'                 WM0910 08380000
PGMSL    EQU   (*-IEBCOPY)/2                     ONE ENTRY LENGTH M0910 08390000
IKJEFT01 DC    C'IKJEFT01',H'8',C'IKJEFT01',H'8'                 WM0910 08400000
IDCAMS   DC    C'IDCAMS  ',H'6',C'IDCAMS  ',H'6'                 WM0910 08410000
IEFBR14  DC    C'IEFBR14 ',H'7',C'IEFBR14 ',H'7'                 WM0910 08420000
LKED     DC    C'HEWLH096',H'8',C'HEWLH096',H'8'                 WM0910 08430000
ASSEM    DC    C'IEV90   ',H'5',C'ASMA90  ',H'6'                 WM0910 08440000
IFOX00   DC    C'IFOX00  ',H'6',C'IFOX00  ',H'6'                 WM0910 08450000
MAIN     DC    C'MAIN    ',H'4',C'MAIN    ',H'4'                 WM0910 08460000
MVS      DC    C'MVS     ',H'3',C'390     ',H'3'                 WM0910 08470000
PGMSENT# EQU   ((*-PGMSTAB)/PGMSL)*2             NO. OF ENTRIES  WM0910 08480000
*                                                                       08530000
ATIOT    DS    F                                                 WM0910 08540000
R1PARM   DS    A                                                        08550000
PARMLTH  DS    H                                                        08560000
COMMAND  DC    CL120' '                                                 08570000
MVC1     MVC   COMMAND(*-*),2(R1)                                       08580000
MVCREP   MVC   FLDREPL(*-*),0(R15)                                      08590000
FLAG     DS    X                                                        08600000
$WORK    EQU   X'80'                                                    08610000
CARD     DC    CL80' '                                                  08620000
NEWCARD  DC    CL80' '                                                  08630000
NEWCARD1 DC    CL80' '                                                  08640000
ONE      DC    F'1'                                                     08650000
DDDAINS  DC    CL5'DAINS'                                        WM0910 08660000
         DS    0F                                                       08670000
         REPLACE   ACT=GEN                                        IOAI  08680000
MOVEREPL MVC   0(*-*,R9),FLDREPL                                        08690000
SEARCH   CLC   FLDVAR(*-*),0(R8)                                        08700000
MOVEVAR  MVC   0(*-*,R7),0(R6)                                          08710000
DAINS    DCB   DDNAME=XXXXXXXX,RECFM=FB,DSORG=PS,MACRF=(GL,PM),        *08720000
               EODAD=EODAD                                              08730000
DCBOUT   DCB   DDNAME=SYSPRINT,LRECL=121,RECFM=FBA,                    *08740000
               BLKSIZE=121*8,DSORG=PS,MACRF=PM                          08750000
DDMSG    DC    CL8' '                                             IOAI  08760000
PRODSUFF DC    CL1' '                                             IOAI  08770000
RAREA    DS    XL384                   CTSMSG1 WORK AREA                08780000
         LTORG                                                          08790000
COMATAB  DC    256X'00'                                                 08800000
         ORG   COMATAB+C','                                             08810000
         DC    X'01'                                                    08820000
         ORG                                                            08830000
         CVT   DSECT=YES                                          @DC   08831000
         END                                                            08840000
