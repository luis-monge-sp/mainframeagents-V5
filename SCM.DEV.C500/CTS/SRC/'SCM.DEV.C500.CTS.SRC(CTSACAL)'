          START
*
****************************************************************
****                                                        ****
****     CONTROL-SA  RELEASE 2.1.0                          ****
****                                                        ****
****     LICENSED MATERIAL - NEW DIMENSION SOFTWARE LTD.    ****
****                                                        ****
****************************************************************
*
****************************************************************
*                                                              *
* TITLE            : CTSACAL                                   *
*                                                              *
* FILE NAME        : CTSACAL                                   *
*                                                              *
* AUTHOR           : DORON COHEN                               *
*                                                              *
* CREATION DATE    : 21/07/94                                  *
*                                                              *
* DESCRIPTION      : COMMAND PROCESSOR TO EXECUTE BUILT IN     *
*                    CALL FUNC  (AUTHORIZED ONE'S )            *
*                    IN THE DYNAMIC TSO ENVIRONMENT            *
*                                                              *
* ASSUMPTIONS AND                                              *
*   CONSIDERATIONS :                                           *
*                                                              *
****************************************************************
*
****************************************************************
* MOD.ID   WHO      WHEN     DESCRIPTION                       *
* -------- -------- -------- --------------------------------- *
* IS10188  AL       06/10/24 MOVE OUR MODULES ABOVE 16M LINE   *
*                                                              *
****************************************************************
*
CTSACAL  CSECT ,
CTSACAL  AMODE ANY
*IS10188 CTSACAL  RMODE 24
CTSACAL  RMODE ANY                                              IS10188
*
***************************************************************
*        INITIALIZE                                           *
***************************************************************
*
         BEGIN *,R12
         CTSEQUR
         CTSLEVEL
         LR    R10,R1
         USING CPPL,R10
*
         XC    RC,RC
*
         L     R8,CPPLECT
         USING ECT,R8
*
*        IF WE WERE ACTIVATED WITH DEBUG ON, SET DEBUG LEVEL
*
         CLC   ECTPCMD,=CL8'CTSACALD'
         BNE   DEBUGOK
         MVC   DEBUG,=F'1'
DEBUGOK  DS    0H
*
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'PRIMARY COMMAND IN ECT IS _',(ECTPCMD,8)
*
         L     R9,CPPLCBUF
         BAL   R14,DUMPCBUF
*
***************************************************************
*        SCAN THE COMMAND BUFFER                              *
***************************************************************
*
         LA    R1,4(R9)              R1 -> START OF TEXT
         ST    R1,TEXTSTRT           SAVE IT
         AH    R1,2(R9)              R1 -> START OF ARGUMENT 1
         ST    R1,ARG1STRT           SAVE IT
         LH    R1,0(R9)              R1 = LENGTH OF TOTAL BUFFER
         SH    R1,=H'4'              R1 = LENGTH OF TEXT
         ST    R1,TEXTLEN            SAVE IT
         SH    R1,2(R9)              R1 = LENGTH OF ARGUMENTS
         ST    R1,ARGSLEN            SAVE IT
         BNP   ERRNOARG              NO ARGUMENTS ERROR
*
*        LOCATE THE END OF THE 1ST ARGUMNET (THE REAL COMMAND)
*
         L     R5,ARG1STRT
         L     R6,ARGSLEN
*
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'LOCATE 1-ST ARGUMENT WITHIN STRING=#/_',(?R6,0(R5),?R6)
*
LOOPA1   DS    0H
         CLI   0(R5),C' '
         BE    ENDOFA1
         LA    R5,1(R5)
         BCT   R6,LOOPA1
ENDOFA1  DS    0H
         ST    R5,ARG1END
*
*        LOCATE THE START OF THE 2ND ARGUMNET (THE REAL ARGUMENTS)
*
LOOPA2   DS    0H
         CLI   0(R5),C' '
         BNE   ENDOFA2
         LA    R5,1(R5)
         BCT   R6,LOOPA2
ENDOFA2  DS    0H
         ST    R5,ARG2STRT
         ST    R6,ARG2LEN
*
*        BLANK OUT THE ORIGINAL COMMAND FROM THE BUFFER (OUR OWN CP)
*
         L     R1,ARG1STRT
         L     R2,TEXTSTRT
         SR    R1,R2
         BNP   SKIPB
         BCTR  R1,0
         MVC   0(*-*,R2),=CL256' '
         EX    R1,*-6
SKIPB    DS    0H
*
*        COPY PROGRAM NAME
*
COPYPRG  DS    0H
         MVC   PRG,=CL8' '
         L     R2,ARG1STRT
         L     R1,ARG1END
         SR    R1,R2
         CH    R1,=H'8'
         BH    ERRNOCMD
         BCTR  R1,0
         MVC   PRG(*-*),0(R2)
         EX    R1,*-6
         TR    PRG,LOW2UPR
*
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'PROGRAM NAME=_',(PRG,8)
*
*        UPDATE COMMAND BUFFER ARGUMENTS OFFSET
*
         L     R5,ARG2STRT           R5 -> START OF ARG2
         S     R5,TEXTSTRT           R5 = OFFSET OF ARG2
         STH   R5,2(R9)              UPDATE NEW OFFSET
*
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'OFFSET OF PARM LIST=#',(?R5)
*
         L     R5,ARG2STRT           R5 -> START OF ARG2
         L     R6,ARG2LEN
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'PARAMETERS=#/_',(?R6,0(R5),?R6)
*
         BAL   R14,DUMPCBUF
*
***************************************************************
*        ACTIVATE AUTHORIZED MODULE  UNDER CONTROL-SA         *
***************************************************************
ACTAUTH  DS    0H
*
*        CHECK ENVIRONMENT - ARE WE UNDER CONTROL-SA ?
*
         MVC   FUNC,=CL8'CHKENV'
         CALL  CTSATSO,(FUNC,RC,RS,AB,DEBUG)
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'CHKENV RC=# #/#/#',(?R15,RC,RS,AB)
         LTR   R15,R15
         BZ    ACTAUTHS
         WTO   'CTSACALL: ERROR - MUST BE ACTIVATED UNDER CONTROL-SA'
         MVC   RC,=F'230'
         B     EXIT
*
*        IF NOT ALREADY AUTHORIZED, SET AUTHORIZATION BIT IN JSCB
*
ACTAUTHS DS    0H
         MVI   FLAGAUTH,C'Y'
         TESTAUTH FCTN=1
         LTR   R15,R15
         BZ    DONEAUTH
         MVI   FLAGAUTH,C'N'
         CTSAATH AUTH=ON
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'AUTHORIZED...'
DONEAUTH DS    0H
*
*        BUILD PARAM LIST
*
         SR    R1,R1
         L     R5,ARG2STRT           R5 -> START OF ARG2
         L     R6,ARG2LEN
         LTR   R6,R6
         BZ    ATTCMD
*
         CH    R6,=H'2'                QUATE PROCESSING ONLY IF LEN > 2
         BNH   NOSKIPG                 NO - SKIP QUATE
         CLI   0(R5),C''''             STARTING WITH A QUATE ?
         BE    SKIPG                   YES - CHECK LAST CHAR
         CLI   0(R5),C'"'              STARTING WITH A QUATE ?
         BE    SKIPG                   YES - CHECK LAST CHAR
         B     NOSKIPG                 NO, NOTHING TO SKIP
SKIPG    DS    0H
         LA    R7,0(R5,R6)             R7 - > LAST CHAR + 1
         BCTR  R7,0                    R7 - > LAST CHAR
         CLC   0(1,R5),0(R7)           QUATE ?
         BNE   NOSKIPG                 NO, NOTHING TO SKIP
         LA    R5,1(R5)
         SH    R6,=H'2'
         BNP   ATTCMD
NOSKIPG  DS    0H
*
         STH   R6,PRMLIST            SAVE PARMLIST LENGTH
         BCTR  R6,0                  DECR FOR EX COMMAND
         MVC   PRMLIST+2(*-*),0(R5)
         EX    R6,*-6
         LA    R1,PRMLISTA
*
         LH    R6,PRMLIST
         LR    R7,R1
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               '~.PRMLIST=#/_',(?R7,?R6,PRMLIST+2,?R6)
         LA    R1,PRMLISTA
*
*        ACTIVATE
*
ATTCMD   DS    0H
         XC    CMDECB,CMDECB           PREPARE ECB
         ATTACH EPLOC=PRG,ECB=CMDECB
*
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'ATTACH _ RC=~',(PRG,8,?R15)
*
         LTR   R15,R15                 SUBTASK ATTACHED OK ?
         BNZ   BADATT                  NO - EXIT WITH ERROR
         ST    R1,CMDTCB               FOR DETACH
         WAIT  ECB=CMDECB              WAIT FOR TSO
         LA    R2,CMDTCB               R2 -> SAVETCB -> CMD TCB
         DETACH (2)                    DETACH THE TASK
         XR    R15,R15
         ICM   R15,B'0111',CMDECB+1    GET STEP RETURN CODE
         B     ATTCMDF
BADATT   DS    0H
         LA    R15,130
ATTCMDF  DS    0H
         ST    R15,RC
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'RC FROM _ #',(PRG,8,?R15)
*
*        IF NOT ALREADY AUTHORIZED, SET AUTHORIZATION BIT IN JSCB
*
         CLI   FLAGAUTH,C'Y'
         BE    DONEDAUT
         CTSAATH AUTH=OFF
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'UNAUTHORIZED ...'
DONEDAUT DS    0H
         B     EXIT
*
***************************************************************
*        DUMP COMMAND BUFFER ROUTINE                          *
***************************************************************
*
DUMPCBUF DS    0H
         STM   R14,R4,SAVEREGS
         LH    R2,0(R9)
         LH    R3,2(R9)
         LR    R4,R2
         SH    R4,=H'4'
         SH    R4,=H'4'
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'CPPLCBUF AT ~.#.#._',                                  X
               (?R9,?R2,?R3,4(R9),?R4)
         LM    R14,R4,SAVEREGS
         BR    R14
SAVEREGS DS    18F
*
***************************************************************
*        FINISH                                               *
***************************************************************
*
ERRNOCMD DS    0H
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'NO COMMAND'
         XC    RC,RC
         B     EXIT
ERRNOARG DS    0H
         CTSADBG LEVEL=(DBGLVL,1),                                     X
               'NO ARGUMENTS'
         MVC   RC,=F'4'
         B     EXIT
*
EXIT     DS    0H
         L     R15,RC
         BRTRN (15)
*
***************************************************************
*        CONSTANTS                                            *
***************************************************************
*
         LTORG ,
*
***************************************************************
*        VARIABLES                                            *
***************************************************************
*
TEXTLEN  DS    F
ARGSLEN  DS    F
TEXTSTRT DS    A
ARG1STRT DS    A
ARG1END  DS    A
ARG2STRT DS    A
ARG2LEN  DS    F
         DS    0D                       IMPORTANT
PRMLISTD DS    H
PRMLIST  DS    H                        PARMLIST
         DS    CL256
         DS    0D                       IMPORTANT !
PRMLISTA DC    A(PRMLIST+X'80000000')
PRG      DS    CL8
FUNC     DS    CL8
CMDL     DS    F
RC       DS    F
RS       DS    F
AB       DS    F
FLAGAUTH DS    C
DEBUG    DC    F'0'
         ORG   DEBUG+3
DBGLVL   DS    X
         ORG   ,
CMDTCB   DS    A
CMDECB   DS    A
AUTHCLEN DS    F
LOW2UPR  DC    256AL1(*-LOW2UPR)       TRANSLATE TABLE TO UPPERCASE
         ORG   LOW2UPR
         DC    64C' '
         ORG   LOW2UPR+C'A'-X'40'
         DC    C'ABCDEFGHI'
         ORG   LOW2UPR+C'J'-X'40'
         DC    C'JKLMNOPQR'
         ORG   LOW2UPR+C'S'-X'40'
         DC    C'STUVWXYZ'
         ORG   ,
         DROP  ,
*
***************************************************************
*        CONTROL BLOCKS MAPPING                               *
***************************************************************
*
         IKJCPPL
         IKJECT
         END
