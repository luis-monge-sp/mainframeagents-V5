*                                                                       00010000
****************************************************************        00020000
****                                                        ****        00030000
****     CONTROL-SA  RELEASE 1.3.0                          ****        00040000
****                                                        ****        00050000
****     LICENCED MATERIAL - NEW DIMENSION SOFTWARE LTD.    ****        00060000
****                                                        ****        00070000
****************************************************************        00080000
*                                                                       00090000
****************************************************************        00100000
*                                                              *        00110000
* TITLE            : CTSAXMS                                   *        00120000
*                                                              *        00130000
* FILE NAME        : CTSAXMS                                   *        00140000
*                                                              *        00150000
* AUTHOR           : DORON COHEN (ADPATED FROM CTV - IOASXMV)  *        00160000
*                                                              *        00170000
* CREATION DATE    : 18/08/94                                  *        00180000
*                                                              *        00190000
* DESCRIPTION      : CROSS MEMORY ENVIROMENT INITIALIZATION    *        00200000
*                    AND TERMINATION FOR CONTROL-SA INTERCEPTOR*        00210000
*                                                              *        00220000
* ASSUMPTIONS AND                                              *        00230000
*   CONSIDERATIONS :                                           *        00240000
*                                                              *        00250000
****************************************************************        00260000
*                                                              *        00270000
*   FUNCTIONS:                                                 *        00280000
*   ----------                                                 *        00290000
*                                                              *        00300000
*      INITIALIZATION ROUTINE FOR THE CROSS MEMORY SERVER.     *        00310000
*      TERMINATION    ROUTINE FOR THE CROSS MEMORY SERVER.     *        00320000
*                                                              *        00330000
*   PARAMETERS:                                                *        00340000
*   -----------                                                *        00350000
*                                                              *        00360000
*      1. ADDRESS OF FUNCTION CODE (INIT/TERM/INITH/TERMH)     *        00370000
*      2. ADDRESS OF XMM  (0 FOR INITIAL CALL)                 *        00380000
*      3. ADDRESS OF SUBSYSTEM NAME                            *        00390000
*      4. ADDRESS OF SUBSYSTEM DYNALOC PARAMETER               *        00400000
*      5. STEP NUMBER (IN CASE OF ERROR)                       *        00410000
*      6. ADDRESS OF CCT                                       *        00420000
*      7. ADDRESS OF RETURN CODE                               *        00430000
*                                                              *        00440000
*   RETURN-CODES:                                              *        00450000
*   -------------                                              *        00460000
*                                                              *        00470000
*      0   SUCCESSFULL ENDING                                  *        00480000
*      4   ERROR DURING INTIALIZATION                          *        00490000
*      8   UNRECOGNIZED REQUEST.                               *        00500000
*                                                              *        00510000
****************************************************************        00520000
*--------------------- CTS V 1.3.0 ----------------------------*        00530000
* *CTS1  18.08.94 DC ADAPTED FOR CONTROL-SA INTERCETOR         *        00540000
* *CTS2  28.12.94 DC ADAPTED FOR CONTROL-SA SERVERS            *        00550000
* *CTS3  15.03.95 DC ALLOW REUSE OF XMM IF NO TIMESTAMP MATCH  *        00560000
*--------------------- CTS V 1.4.0 ----------------------------*        00561000
* PS0001 08.10.96 DC FIX ASSEMBLY ERRORS                       *        00562000
*--------------------- CTS V 3.0.1 ----------------------------*        00563000
* WS2356 23.09.99 YB HOOK TO XMM THROUGH NAME/TOKEN            *        00563100
* PS0435 29.10.00 YB RETURN APF AUTHORIZATION IN ABEND EXIT    *        00563200
*                    (IN CASE A NON APF PROGRAM ABENDED)       *        00563300
*                    (APPLY BS2436)                            *        00563400
*--------------------- CTS V 3.2.0 ----------------------------*        00563500
* BS2706 16.03.06 AL S0C4 IN ICHPWX01. RECOMPILE. (AS BS2690)  *        00563600
* IS10006 10JUL07 AVNERL MEMORY IN CSA WITH KEY=8 & UNFREED.   *        00563700
* WS10013 31OCT07 AVNERL ADD DIAGNOSTIC MESSAGES.              *        00563800
* WS10047 14SEP14 NURITY SUPPORT JOB STARTED TASKS - TAKE      *        00564000
*                        STARTED TASK ID FROM CSCB INSTEAD OF  *        00564100
*                        TIOT.                                 *        00564200
* WS10054 08AUG16 SELIGT ADD ENQ/DEQ SYSTEMS RNL PARAMETER     *        00564300
*SAS2IBMN 12DEC16 NURITY 1. RESOLVE USING WARNING.             *        00564401
*                        2. REMOVE REFERENCE TO SSCT/SSVT      *        00564501
*                        3. RESOLVE ABEND SEC6 DURING ABEND    *        00564601
*                           RECOVERY, CAUSED BY THE CALL TO    *        00564701
*                           CTSAATH.                           *        00564801
*                        4. IMPROVE RECOVERY SINCE WE CURRENTLY*        00564901
*                           DO NOT FULL CLEANUP AT RECOVERY    *        00565001
*                           BECAUSE OF ASSEMBLER / C / LE      *        00565101
*                           ISSUES (CTSASTA)                   *        00565201
* IS10188 06/10/24 NURITY MOVE OUR MODULES ABOVE 16M LINE      *        00565301
****************************************************************        00565401
*                                                                       00565501
*                                                                       00565601
         GBLC   &AMODUSE                                        *DC     00565701
&AMODUSE SETC   'CVT'                                           *DC     00565801
*PS0001  COPY  CTSAXMM                                                  00565901
*                                                                       00566001
CCT      DSECT                                                          00566101
         COPY  CTSACCT                                                  00566201
*                                                                       00566301
PRM      DSECT                                                          00566401
PRMFUNC  DS    A                   ADDRESS OF FUNCTION                  00566501
PRMSUBS  DS    A                   ADDRESS OF SUBSYSTEM NAME            00566601
PRMDYNA  DS    A                   ADDRESS OF DYNAMIC ALLOC FLAG        00566701
PRMSTEP  DS    A                   ADDRESS OF STEP NUMBER               00566801
PRMCCT   DS    A                   ADDRESS OF CCT                       00566901
PRMRC    DS    A                   ADDRESS OF RETURN CODE               00567001
PRMJBN   DS    A                   ADDRESS OF JOBNAME                   00567101
PRMDBG   DS    A                   ADDRESS OF DBGLEVEL          WS10013 00567201
*                                                                       00568000
CTSAXMS  CSECT                                                          00569000
*IS10188 CTSAXMS  RMODE 24                                              00570001
CTSAXMS  RMODE ANY                                             IS10188  00571001
CTSAXMS  AMODE ANY                                                      00580000
*                                                                       00590000
****************************************************************        00600000
**   INITIALIZE                                                *        00610001
****************************************************************        00620000
*                                                                       00630000
         BEGIN *                                                        00640000
         CTSEQUR                                                        00650000
         CTSLEVEL CTSAXMS                                               00660000
         USING CTSAXMS,R13,R10                                  WS10013 00670000
         LA    R10,4095(R13)                                    WS10013 00680000
         LA    R10,1(R10)                                       WS10013 00690000
*                                                                       00700000
         LR    R8,R1               R8 -> PARAMETER LIST.                00710000
         USING PRM,R8                                                   00720000
*                                                                       00730000
         CTSAAMD 31,AMODSAV=AMODE                              IS10188  00731002
*                                                                       00732002
         L     R15,PRMDBG          R15->DEBUG LEVEL(1 BYTE)     WS10013 00740000
         XC    DBGLEVEL,DBGLEVEL   STORE DEBUG LEVEL            WS10013 00750000
         XR    R1,R1               CLR REG                      WS10013 00760000
         ICM   R1,1,0(R15)         DEBUG LEVEL                  WS10013 00770000
         BNP   NODEBUG             SKIP DEBUG LVL IF MINUS      WS10013 00780000
         STC   R1,DBGLEVEL         STORE DEBUG LEVEL (1 BYTE)   WS10013 00790000
NODEBUG  DS    0H                                               WS10013 00800000
         CTSADBG LEVEL=(DBGLEVEL,1),                            WS10013X00810000
               'CTSAXMS STARTS'                                         00811000
         L     R2,PRMCCT           R2 -> CCT ADDRESS.                   00812000
         L     R2,0(R2)            R2 -> CCT                            00813000
         ST    R2,CCTADDR                                               00814000
*                                                                       00815000
         MVI   XMSSERV,C'N'                                     *CTS2   00816000
         L     R2,PRMFUNC          R2 -> FUNCTION.                      00817000
         CLC   =C'INITH',0(R2)     INIT HEADER (NO XMS)         *CTS2   00818000
         BE    INIT0               YES... INITIALIZE            *CTS2   00819000
         MVI   XMSSERV,C'Y'        NO.... SET XMS SERV ON       *CTS2   00820000
         CLC   =C'INIT',0(R2)      INIT ?                               00830000
         BE    INIT0               YES... INITIALIZE.                   00840000
*                                                                       00850000
         MVI   XMSSERV,C'N'                                     *CTS2   00860000
         CLC   =C'TERMH',0(R2)     TERM HEADER (NO XMS)         *CTS2   00870000
         BE    TERM0               YES... TERMINATE             *CTS2   00880000
         MVI   XMSSERV,C'Y'                                     *CTS2   00890000
         CLC   =C'TERM',0(R2)      TERM ?                               00900000
         BE    TERM0               YES... TERMINATE                     00910000
         B     ERROR8              NO... ERROR                          00920000
*                                                                       00930000
****************************************************************        00940000
**   STEP 0. GET SUBSYSTEM NAME. SERIALIZE INITIALISATION               00950001
****************************************************************        00960000
*                                                                       00970000
INIT0    DS    0H                                                       00980000
         CTSADBG LEVEL=(DBGLEVEL,1),                            WS10013X00990000
               'CTSAXMS INIT0'                                          01000000
         MVI   WSENQFLG,X'00'          CLEAR ENQ FLAG.                  01010000
         L     R12,PRMDYNA             GET SUBSYSTEM SYNALLOC FLAG.     01020000
         MVC   WSALLOC,0(R12)          SET SUBSYS DYNALLOC FLAG.        01030000
         L     R12,PRMSUBS             GET SUBSYSTEM NAME               01040000
         MVC   WSSSNAM,0(R12)          SET SSNAME.                      01050000
         L     R2,CVTPTR               POINT TO CVT                     01060000
         L     R2,CVTSMCA-CVT(R2)      POINT TO SMCA                    01070000
         MVC   WSSMFID,SMCASID-SMCABASE(R2) SET SMFID.                  01080000
         CALL  CTSAGTQ,(QNDBG,QNAME,ENQRNL,QNRSN)               WS10054 01090000
         CTSADBG LEVEL=(DBGLEVEL,1),                            WS10013X01100000
               'CTSAXMS AFTER CTSAGTQ'                                  01110000
*                                                                       01120000
**  SERIALIZE THE INIT PROCESSING BY ISSUEING AN ENQ                    01130001
*                                                                       01140000
         MVC   RNAMEID,WSSMFID         SET SMFID IN ENQ NAME.           01150000
         MVC   RNAMESS,WSSSNAM         SET SSNAME IN ENQ NAME.          01160000
*WS10054 CALL  CTSARSV,(ENQ,QNAME,RNAME,RNAMEL,DDNAME,WAIT)             01170000
         CALL  CTSAENQ,(DBGFWD,ENQ,QNAME,RNAME,DDNAME,          WS10054X01171000
               EXCSHR,ENQRNL,RESFLG,REASONCD,SCOPE)             WS10054 01172000
         CTSADBG LEVEL=(DBGLEVEL,1),                            WS10013X01180000
               'CTSAXMS AFTER CTSAENQ ENQ. RSN=~',REASONCD      WS10054 01190000
         MVI   WSENQFLG,C'E'           SIGN ENQ WAS DONE.               01200000
*                                                                       01210000
****************************************************************        01211000
**  STEP 1. GET CTSA TOKEN .IF NOT FOUND, INITIALIZE CTSA TOKEN         01212001
****************************************************************        01213000
*                                                                       01214000
INIT1    EQU   *                                                        01215000
         L     R1,PRMSTEP              SET STEP ID                      01216000
         MVC   0(4,R1),=CL4'0001'                                       01217000
****************************************************************WS2356  01218000
**  LOOK FOR THE GLOBAL CTSA TOKEN                              WS2356  01219001
****************************************************************WS2356  01220000
         CTSANT FUNC=RETRIEVE,LEVEL=SYSTEM,NAME=CTSAINST,       WS2356 *01230000
               TOKEN=ICB_PTR                                    WS2356  01240000
         LTR   R15,R15                                          WS2356  01250000
         BZ    TOKFOUND                                         WS2356  01260000
****************************************************************WS2356  01270000
**  CREATE THE GLOBAL CTSA TOKEN                                WS2356  01280001
**  THIS IS DONE BY FIRST AGENT COMPONENT STARTED AFTER IPL.   IS10006  01290001
****************************************************************WS2356  01300000
         MODESET KEY=ZERO MAKE SURE AREA IS SET WITH KEY=0     IS10006  01310000
*IS10188 CTSAXGR GETMAIN,LV=ICBLEN+4,SP=241,BLOCKID=ICB         WS2356  01310101
         CTSAXGR GETMAIN,LV=ICBLEN+4,SP=241,BLOCKID=ICB,       IS10188 >01310201
               LOC=ANY                                         IS10188  01310301
         LTR   R15,R15                                         WS10013  01310400
         BNZ   ERRORINI                                        WS10013  01310500
         LR    R4,R1                                            WS2356  01310600
         USING ICBSTART,R4                                      WS2356  01310700
         MVC   ICBNAME,WSSSNAM                                  WS2356  01310800
         MVC   ICBVER,CTSREL                                    WS2356  01310900
         XC    ICBXMMA,ICBXMMA                                  WS2356  01311000
         XC    ICBNEXT,ICBNEXT                                  WS2356  01311100
         ST    R4,ICB_PTR                                       WS2356  01311200
         CTSADBG LEVEL=(DBGLEVEL,1),                            WS10013X01312000
               'CTSAXMS CREATE GLOBAL CTSA TOKEN AT:<~>',ICB_PTR        01312100
         CTSANT FUNC=CREATE,LEVEL=SYSTEM,NAME=CTSAINST,         WS2356 *01312200
               TOKEN=ICB_PTR,PERSIST=YES                        WS2356  01312300
         LTR   R15,R15                                          WS2356  01312400
         BNZ   ERRORINI                                         WS2356  01312500
         MODESET KEY=NZERO                                     IS10006  01312600
         B     INIT2                                            WS2356  01312700
****************************************************************WS2356  01312800
**  CHAIN A NEW INSTALLATION TO THE TOKEN                       WS2356  01312901
****************************************************************WS2356  01313000
TOKFOUND DS    0H                                               WS2356  01313100
         CTSADBG LEVEL=(DBGLEVEL,1),                            WS10013X01313200
               'CTSAXMS TOKFOUND'                                       01313300
         L     R4,ICB_PTR                                       WS2356  01313400
         LTR   R4,R4                   IF ZERO                 WS10013  01313500
         BZ    ERRREUS                      EXIT WITH ERROR    WS10013  01313600
ICBLOOP  DS    0H                                               WS2356  01313700
         CTSADBG LEVEL=(DBGLEVEL,1),                           WS10013 X01313800
               'CTSAXMS ICBLOOP'                               WS10013  01313900
         CLC   ICBNAME,WSSSNAM         IS IT OUR INSTALLATION ? WS2356  01314000
         BE    INIT2                   FOUND - CONTINUE         WS2356  01314100
         LR    R9,R4                   SAVE THIS ENTRY'S ADDR   WS2356  01314200
         L     R4,ICBNEXT              NEXT ENTRY               WS2356  01314300
         LTR   R4,R4                   IF NOT ZERO              WS2356  01314400
         BNZ   ICBLOOP                         LOOP             WS2356  01314500
ICBNFND  DS    0H                      NOT FOUND INST - CHAIN ITWS2356  01314600
         CTSADBG LEVEL=(DBGLEVEL,1),                            WS10013X01314700
               'CTSAXMS ICBNFND'                                        01314800
         LR    R4,R9                   RESTORE LAST ENTRY'S ADDRWS2356  01314900
         MODESET KEY=ZERO MAKE SURE AREA IS SET WITH KEY=0     IS10006  01315000
*IS10188 CTSAXGR GETMAIN,LV=ICBLEN+4,SP=241,BLOCKID=ICB         WS2356  01315101
         CTSAXGR GETMAIN,LV=ICBLEN+4,SP=241,BLOCKID=ICB,       IS10188 >01315201
               LOC=ANY                                         IS10188  01315301
         LR    R5,R1                                            WS2356  01315400
         ST    R5,ICBNEXT                                       WS2356  01315500
         DROP  R4                                               WS2356  01315600
         USING ICBSTART,R5                                      WS2356  01315700
         MVC   ICBNAME,WSSSNAM                                  WS2356  01315800
         MVC   ICBVER,CTSREL                                    WS2356  01315900
         XC    ICBXMMA,ICBXMMA                                  WS2356  01316000
         XC    ICBNEXT,ICBNEXT                                  WS2356  01316100
         MODESET KEY=NZERO                                     IS10006  01316200
         DROP  R5                                               WS2356  01316300
         LR    R4,R5                                            WS2356  01316400
         USING ICBSTART,R4                                      WS2356  01316500
         B     INIT2                                            WS2356  01316600
*WS2356                                                                 01316700
*WS2356  FIND/DEFINE THE SUBSYSTEM CONTROL BLOCKS                       01316800
*WS2356                                                                 01316900
*WS2356  CALL  CTSASSI,(GETSUBS,WSSSNAM,WSALLOC,WSOPTION,             * 01317000
*WS2356        WSDEBUG,WSSSCTAD,WSSSVTAD,WSSWTAD,WSCOMPFL,            * 01317100
*WS2356        WSEXLEN,WSFDBK)                                          01317200
*WS2356  LTR   R15,R15              RC = 0 - OK ?                       01317300
*WS2356  BNZ   ERRORINI             NO...  ERROR.                       01317400
*WS2356                             YES... --->                         01317500
*WS2356                                                                 01317600
****************************************************************        01317700
**   STEP 2. GET/CREATE AN XMM HEADER IN THE LIST CHAINED THE N/T       01317800
****************************************************************        01317900
*                                                                       01318000
INIT2    EQU  *                                                         01318100
         CTSADBG LEVEL=(DBGLEVEL,1),                            WS10013X01318200
               'CTSAXMS INIT2'                                          01319000
         L     R1,PRMSTEP              SET STEP ID                      01320000
         MVC   0(4,R1),=CL4'0002'                                       01330000
         L     R1,PRMJBN           POINT TO HARDCODED JOBNAME   *CTS1   01340000
         MVC   JOBNAME,0(R1)                                    *CTS1   01350000
         CLI   JOBNAME,C' '                                     *CTS1   01360000
         BH    JOBNAMOK                                         *CTS1   01370000
         L     R1,PSATOLD-PSA      POINT TO TCB                         01380000
*WS10047 L     R1,TCBTIO-TCB(R1)   POINT TO TIOT                        01390000
*WS10047 MVC   JOBNAME,TIOCNJOB-TIOT(R1) GET JOB NAME                   01400000
*WS10047 CLI   TIOCSTEP-TIOT(R1),C' '                                   01410000
*WS10047 BNH   JOBNAMOK                                                 01420000
*WS10047 MVC   JOBNAME,TIOCSTEP-TIOT(R1) GET JOB NAME                   01430000
         LHI   R15,0                                           WS10047  01440000
         ICM   R15,B'0111',TCBJSTCA-TCB(R1) R15 -> JSTCB       WS10047  01450000
         ICM   R15,B'0111',TCBJSCBB-TCB(R15) R15 -> JSCB       WS10047  01460000
         L     R15,JSCBCSCB-IEZJSCB(,R15) R15 -> CSCB.         WS10047  01461000
         LA    R1,CHKEY-CSCB(,R15)    R1 -> STC ID.            WS10047  01462000
         CLI   0(R1),C' '             ID EXISTS ?              WS10047  01463000
         BH    TAKEJBNM               ..YES - USE IT.          WS10047  01464000
         LA    R1,CHCLS-CSCB(,R15)    R1 -> JOBNAME.           WS10047  01465000
TAKEJBNM DS    0H                                              WS10047  01466000
         MVC   JOBNAME,0(R1)      SAVE JOBNAME,                WS10047  01467000
JOBNAMOK EQU   *                                                        01468000
         CTSADBG LEVEL=(DBGLEVEL,1),                           WS10047 X01468100
               'JOBNAME = _',(JOBNAME,8)                       WS10047  01468200
*WS2356  L     R7,WSSSVTAD          R7 -> SSVT                          01468300
*WS2356  LA    R7,SUSEXMMA-SSVT(R7) R7 -> FIRST XMM ADDRESS             01468400
         LA    R7,ICBXMMA          OBTAIN FIRST XMM HEADER       WS2356 01468500
         USING XMMHDR,R3                                                01468600
INIT2LP  EQU   *                                                        01468700
         ICM   R3,B'1111',0(R7)    GET NEXT XMM HEADER                  01468800
         BZ    INIT2CRE            END OF CHAIN, CREATE NEW ONE         01468900
         CLC   XMMMNAME,JOBNAME    THIS ENTRY HAS OUR JOBNAME?          01469000
         BNE   INIT2STP            NO... CHECK NEXT ELEMENT.            01470000
         ICM   R5,B'1111',XMMEXTAD THIS ELEMENT IS FREE?                01480000
         BZ    INIT2A              YES... USE IT                        01490000
*                                                               *CTS1   01500000
**  REUSE OLD BLOCK                                             *CTS1   01510001
*                                                               *CTS1   01520000
         L     R14,XMMASVTE        R14 -> ASVT ENTRY            *CTS1   01530000
         ICM   R14,15,0(R14)       ASCB AVAILABLE ?             *CTS1   01540000
*CTS3    BNM   ERRREUS             YES, CAN'T REUSE XMM BLOCK   *CTS1   01550000
         BM    INIT2RUE                                         *CTS3   01560000
         CLC   XMMSTAMP,ASCBINTS-ASCB(R14) TIMESTAMP MATCH ?    *CTS3   01570000
         BE    ERRREUS             YES, CAN'T REUSE XMM BLOCK   *CTS3   01580000
INIT2RUE DS    0H                                               *CTS3   01590000
         CTSMSG1 CODE=CTS320W,ROUT=WTO,                         *CTS1  X01600000
               PLANT=(8,JOBNAME,4,WSSSNAM)                      *CTS1   01610000
         B     INIT2A              REUSE                        *CTS1   01620000
*                                                                       01630000
INIT2STP EQU   *                                                        01640000
         LR    R7,R3                    ..NO, KEEP LAST POINTER         01650000
         B     INIT2LP                    AND LOOP                      01660000
INIT2CRE EQU   *                                                        01670000
         MODESET KEY=ZERO                                               01680000
*DC      IOAXAGR GETMAIN,LV=XMMHDRLN+4,SP=241,BLOCKID=XMMH XMM HEADER   01690000
*IS10188 CTSAXGR GETMAIN,LV=XMMHDRLN+4,SP=241,BLOCKID=XMMH XMM     *DC  01700001
         CTSAXGR GETMAIN,LV=XMMHDRLN+4,SP=241,BLOCKID=XMMH,    IS10188 >01701001
               LOC=ANY                 XMM                     IS10188  01702001
         LTR   R15,R15                                                  01710000
         BNZ   ERRORINI                                                 01720000
         LR    R3,R1                                                    01730000
         XC    0(XMMHDRLN+4,R3),0(R3)                                   01740000
         MVC   0(4,R3),XMMID        SET XMM ID                          01750000
         LA    R3,4(,R3)                                                01760000
         ST    R3,0(R7)                 CHAIN TO PREVIOUS ELEMENT       01770000
         MODESET KEY=NZERO                                              01780000
*                                                                       01790000
****************************************************************        01800000
**  STEP 2A. CREATE THE XMM EXTENTION IN PRIVATE STORAGE                01810001
****************************************************************        01820000
*                                                                       01830000
INIT2A   EQU   *                                                        01840000
*DC      IOAXAGR GETMAIN,LV=XMMSLEN,BLOCKID=XMME XMM EXTENSION          01850000
*IS10188 CTSAXGR GETMAIN,LV=XMMSLEN,BLOCKID=XMME XMM EXTENSION          01860001
         CTSAXGR GETMAIN,LV=XMMSLEN,BLOCKID=XMME,              IS10188 >01861001
               LOC=ANY                 XMM EXTENSION           IS10188  01862001
         LR    R5,R1                    POINT TO XMM EXTENSION.         01870000
         USING XMM,R5                                                   01880000
         LA    R0,XMM                   RESET                           01890000
         LR    R14,R1                                                   01900000
         L     R1,=A(XMMSLEN)                                           01910000
         SR    R15,R15                                                  01920000
         MVCL  R0,R14                   CLEAR XMM SESSION  LIST         01930000
         MVC   XMMFRESS,=F'0'           NO FREE SESSIONS                01940000
         MVC   XMMACTSS,=F'0'           NO ACTIVE SESSIONS              01950000
         MVC   XMMCCT,CCTADDR           ADDRESS OF CCT                  01960000
*                                                                       01970000
****************************************************************        01980000
**  STEP 2B.  SKIP CROSS MEMORY IF XMS FLAG IS NO                       01990001
****************************************************************        02000000
*                                                                       02010000
         CLI   XMSSERV,C'N'        NO XMS ?                     *CTS2   02020000
         BE    INIT7               YES... INITIALIZE (NO XMS)   *CTS2   02030000
*                                                                       02040000
****************************************************************        02050000
**  STEP 3. SET AUTHORISATION INDEX TO ONE                              02060001
****************************************************************        02070000
*                                                                       02080000
INIT3    EQU   *                                                        02090000
         L     R1,PRMSTEP              SET STEP ID                      02100000
         MVC   0(4,R1),=CL4'0003'                                       02110000
         MODESET KEY=ZERO,MODE=SUP                                      02120000
         LA    R2,1                 AX=1                                02130000
         AXSET AX=(R2)                                                  02140000
         LTR   R15,R15                                                  02150000
         BNZ   ERRORINI                                                 02160000
         MODESET KEY=NZERO,MODE=PROB                                    02170000
         LTR   R15,R15                                                  02180000
         BNZ   ERRORINI                                                 02190000
*                                                                       02200000
****************************************************************        02210000
**  STEP 4. RESERVE A SYSTEM LX IF NOT ALREADY RESERVED                 02220001
****************************************************************        02230000
*                                                                       02240000
INIT4    EQU   *                                                        02250000
         L     R1,PRMSTEP              SET STEP ID                      02260000
         MVC   0(4,R1),=CL4'0004'                                       02270000
         MVC   XMMLXN,=F'1'         INDICATE ONE LX                     02280000
         CLC   XMMLXIND,=F'0'        IF LX ALREADY THERE?               02290000
         BE    INIT4RES             THEN                                02300000
         MVC   XMMLX,XMMLXIND         COPY IT FROM HEADER TO EXTENTION  02310000
         B     INIT5                                                    02320000
INIT4RES EQU   *                    ELSE RESERVE A NEW INDEX            02330000
         MODESET KEY=ZERO,MODE=SUP                                      02340000
         LXRES LXLIST=XMMLXP,SYSTEM=YES                                 02350000
         LTR   R15,R15                                                  02360000
         BNZ   ERRORINI                                                 02370000
         MVC   XMMLXIND,XMMLX                                           02380000
         MODESET KEY=NZERO,MODE=PROB                                    02390000
*                                                                       02400000
****************************************************************        02410000
**  STEP 5. CREATE THE ENTRY TABLE                                      02420001
****************************************************************        02430000
*                                                                       02440000
INIT5    EQU   *                                                        02450000
         L     R1,PRMSTEP              SET STEP ID                      02460000
         MVC   0(4,R1),=CL4'0005'                                       02470000
         MVC   XMMETN,=F'1'                                             02480000
         CTSAMOD TEST              IS IT XA ?                           02490000
         BZ    INIT51              ..NO - SKIP                          02500000
         OI    E0PROG,X'80'        PC0 TO EXECUTE IN AMODE(31)          02510000
         OI    E1PROG,X'80'        PC1 TO EXECUTE IN AMODE(31)          02520000
         OI    E2PROG,X'80'        PC2 TO EXECUTE IN AMODE(31)          02530000
         OI    E3PROG,X'80'        PC3 TO EXECUTE IN AMODE(31)          02540000
         OI    E4PROG,X'80'        PC4 TO EXECUTE IN AMODE(31)          02550000
         OI    E5PROG,X'80'        PC5 TO EXECUTE IN AMODE(31)          02560000
         OI    E6PROG,X'80'        PC6 TO EXECUTE IN AMODE(31)          02570000
         OI    E7PROG,X'80'        PC7 TO EXECUTE IN AMODE(31)          02580000
         OI    E8PROG,X'80'        PC8 TO EXECUTE IN AMODE(31)          02590000
         OI    E9PROG,X'80'        PC9 TO EXECUTE IN AMODE(31)  *CTS1   02600000
INIT51   DS    0H                                                       02610000
         MODESET KEY=ZERO,MODE=SUP                                      02620000
         ETCRE ENTRIES=ETLIST                                           02630000
         LTR   R15,R15                                                  02640000
         BNZ   ERRORINI                                                 02650000
         ST    R0,XMMETK            KEEP TOKEN                          02660000
         MODESET KEY=NZERO,MODE=PROB                                    02670000
*                                                                       02680000
****************************************************************        02690000
**  STEP 6. CONNECT ET TO LX                                            02700001
****************************************************************        02710000
*                                                                       02720000
INIT6    EQU   *                                                        02730000
         L     R1,PRMSTEP              SET STEP ID                      02740000
         MVC   0(4,R1),=CL4'0006'                                       02750000
         MODESET KEY=ZERO,MODE=SUP                                      02760000
         ETCON LXLIST=XMMLXP,TKLIST=XMMETP                              02770000
         LTR   R15,R15                                                  02780000
         BNZ   ERRORINI                                                 02790000
         MODESET KEY=NZERO,MODE=PROB                                    02800000
*                                                                       02810000
****************************************************************        02820000
**  STEP 7. ESTABLISH AN ESTAE ENVIRONMENT TO DISCONNECT WHEN WE FLY    02830001
****************************************************************        02840000
*                                                                       02850000
INIT7    EQU   *                                                        02860000
         L     R1,PRMSTEP              SET STEP ID                      02870000
         MVC   0(4,R1),=CL4'0007'                                       02880000
         ST    R3,XMMADDR              SAVE ADDRESS OF XMM HEADER       02890000
         L     R2,=A(ABNDEXIT)         ADDRESS OF ESTAE ROUTINE.        02900000
*SAS2IBMN ESTAE (R2),TERM=YES                                           02910001
         ESTAE (R2),TERM=YES,TOKEN=WSTOK                       SAS2IBMN 02911001
*                                                                       02920000
****************************************************************        02930000
**   INITIALIZATION OK. FREE XMM BLOCK AND EXIT.                        02940001
****************************************************************        02950000
*                                                                       02960000
XMIEXIT  EQU   *                                                        02970000
         MODESET KEY=ZERO                                               02980000
         MVC   XMMMNAME,JOBNAME    SET ENTRY NAME                       02990000
*                                                                       03000000
**   STORE ASCB TIME STAMP IN XMM HEADER                                03010001
*                                                                       03020000
         L     R15,PSAAOLD-PSA     POINT TO ASCB                        03030000
         USING ASCB,R15            ESTABLSIH ADDRESSABILTY              03040000
         MVC   XMMSTAMP,ASCBINTS   KEEP TIME STAMP                      03050000
         DROP  R15                                                      03060000
*                                                                       03070000
**   STORE ASVT ENTRY ADDRESS IN XMM HEADER                             03080001
*                                                                       03090000
         L     R2,CVTPTR           POINT TO CVT                         03100000
         L     R2,CVTASVT-CVT(R2)  POINT TO ASVT                        03110000
         L     R0,ASVTMAXU-ASVT(R2)  GET MAX ENTRIES                    03120000
         LA    R1,ASVTENTY-ASVT(R2)  POINT TO FIRST ASCB ADDRESS        03130000
         USING ASCB,R15                                                 03140000
ASCBLOOP EQU   *                                                        03150000
         ICM   R15,B'1111',0(R1)   GET ASCB ADDRESS                     03160000
         BM    NEXTASCB            EMPTY - NEXT                         03170000
         CLC   XMMSTAMP,ASCBINTS   IS IT OUR MONITOR ?                  03180000
         BNE   NEXTASCB            NO - NEXT                            03190000
         ST    R1,XMMASVTE         KEEP ASVT ENTRY ADDRESS              03200000
         B     FONDASCB            EXIT LOOP                            03210000
NEXTASCB EQU   *                                                        03220000
         LA    R1,4(R1)            SKIP TO NEXT ASCB                    03230000
         BCT   R0,ASCBLOOP         NEXT, IF ANY                         03240000
         DROP  R15                 DROP ADDRESSABILITY                  03250000
         B     NOASCB                                                   03260000
*                                                                       03270000
****************************************************************        03280000
*                                                                       03290000
****************************************************************        03300000
*                                                                       03310000
NOASCB   DS    0H                                                       03320000
         LA    R15,8                SET RC FOR ERROR MESSAGE            03330000
         B     ERRORINI             NOT FOUND - ERROR                   03340000
FONDASCB DS    0H                                                       03350000
         ST    R5,XMMEXTAD         POINT FROM HEADER TO EXTENTION       03360000
         MODESET KEY=NZERO                                              03370000
         SLR   R5,R5                SET RETURN CODE                     03380000
         B     DEQ@OUT                                                  03390000
*                                                                       03400000
****************************************************************        03410000
**   ERRORS - SET RETURN CODE IN PARM.                                  03420001
****************************************************************        03430000
*                                                                       03440000
ERRREUS  DS    0H                                                       03450000
         CTSMSG1 CODE=CTS321E,ROUT=WTO,                         *CTS1  X03460000
               PLANT=(8,JOBNAME,4,WSSSNAM)                      *CTS1   03470000
         LA    R5,4                                             *CTS1   03480000
         B     DEQ@OUT                                          *CTS1   03490000
*                                                                       03500000
ERRORINI EQU   *                                                        03510000
         LR    R7,R15               SAVE RETURN CODE                    03520000
         MODESET KEY=NZERO,MODE=PROB                                    03530000
         L     R5,PRMRC             R5 -> RETURN CODE AREA              03540000
         CVD   R7,WSEZ                                                  03550000
         UNPK  0(4,R5),WSEZ         SET RETURN CODE IN PARM.            03560000
         OI    3(R5),X'F0'                                              03570000
         LA    R5,4                 SET XMI RETURN CODE.                03580000
         B     DEQ@OUT                                                  03590000
*                                                                       03600000
**  FUNCTION CODE ERROR                                                 03610001
*                                                                       03620000
ERROR8   DS    0H                                                       03630000
         LA    R5,8                SET RC = 8.                          03640000
         B     EXINODEQ            OUT (NO DEQ).                        03650000
*                                                                       03660000
****************************************************************        03670000
**   DEQ AND OUT                                                        03680001
****************************************************************        03690000
*                                                                       03700000
DEQ@OUT  DS    0H                                                       03710000
         CLI   WSENQFLG,C'E'       ENQ PERFORMED?                       03720000
         BNE   EXINODEQ                                                 03730000
*WS10054 CALL  CTSARSV,(DEQ,QNAME,RNAME,RNAMEL,DDNAME,WAIT)             03740000
         CALL  CTSAENQ,(DBGFWD,DEQ,QNAME,RNAME,DDNAME,          WS10054X03741000
               EXCSHR,ENQRNL,RESFLG,REASONCD,SCOPE)             WS10054 03742000
         CTSADBG LEVEL=(DBGLEVEL,1),                            WS10013X03743000
               'CTSAXMS AFTER CTSAENQ DEQ. RSN=~',REASONCD      WS10054 03744000
EXINODEQ DS    0H                                                       03750000
         LR    R15,R5                  SET RETURN CODE                  03760000
         B     XMSEXIT                 RETURN                           03770000
*                                                                       03780000
****************************************************************        03790000
**   TERMINATE CROSS MEMORY ENVIRONMENT.                                03800001
****************************************************************        03810000
*                                                                       03820000
TERM0    DS    0H                                                       03830000
         CTSADBG LEVEL=(DBGLEVEL,1),                           SAS2IBMNX03831101
               'TERM0 - XMMADDR = ~',(XMMADDR)                 SAS2IBMN 03832001
         ICM   R3,15,XMMADDR            GET XMM HEADER ADDRESS          03840000
         BZ    XMTEXIT                  NO XMM HEADER, EXIT             03850000
         USING XMM,R5                                                   03860000
         USING XMMHDR,R3                                                03870000
         CTSADBG LEVEL=(DBGLEVEL,1),                           SAS2IBMNX03871001
               'TERM0 - XMMEXTAD = ~',(XMMEXTAD)               SAS2IBMN 03872001
         ICM   R5,15,XMMEXTAD           GET XMM EXTENTION ADDRESS       03880000
         BZ    XMTEXIT                  NO XMM EXTENTION, EXIT          03890000
*                                                                       03900000
**  RESET STAE ENVIRONMENT                                              03910001
*                                                                       03920000
*SAS2IBMN ESTAE  0                                                      03930001
         ESTAE 0,TOKEN=WSTOK          ENSURE WE DELETE OURS    SAS2IBMN 03930101
         CTSADBG LEVEL=(DBGLEVEL,1),                           SAS2IBMNX03930201
               'TERM0: ESTAE 0 - RC = #',(?R15)                SAS2IBMN 03931001
*                                                                       03940000
**  DISCONNECT XMM EXTENTION FROM HEADER                                03950001
*                                                                       03960000
         MODESET KEY=ZERO,MODE=SUP                                      03970000
         XC    XMMEXTAD,XMMEXTAD       DISCONNECT EXTENTION FROM HEADER 03980000
         MODESET KEY=NZERO,MODE=PROB                                    03990000
*                                                                       04000000
**  WAIT A BIT TO PERMIT PENDING PC CALLS TO TERMINATE                  04010001
*                                                                       04020000
         STIMER WAIT,BINTVL=SHORT                                       04030000
*                                                                       04040000
**  SKIP PC DISCONNECT IF OPCODE = 'TERMH'                              04050001
*                                                                       04060000
         CTSADBG LEVEL=(DBGLEVEL,1),                           SAS2IBMNX04061001
               'TERM0: XMSSERV = _',(XMSSERV,1)                SAS2IBMN 04062001
         CLI   XMSSERV,C'N'        XMS CELANUP ?                *CTS2   04070000
         BE    XMTEXIT             YES... TERM (NO XMS)         *CTS2   04080000
*                                                                       04090000
**  HOPE ALL PENDING PC CALLS ENDED, RESET XMEM ENVIRONMENT             04100001
*                                                                       04110000
         OC    XMMETK,XMMETK           IF ETCRE WAS ISSUED              04120000
         BZ    XMTEXIT                 THEN DESTROY ENTRY TABLE         04130000
         MODESET KEY=ZERO,MODE=SUP                                      04140000
         ETDES TOKEN=XMMETK,PURGE=YES                                   04150000
         MODESET KEY=NZERO,MODE=PROB                                    04160000
*                                                                       04170000
****************************************************************        04180000
**    ISSUE TERMINATION MESSAGE AND EXIT                                04190001
****************************************************************        04200000
*                                                                       04210000
XMTEXIT  DS    0H                                                       04220000
         XC    XMMADDR,XMMADDR     CLEAR THE XMMADDR                    04230000
         SLR   R15,R15             ZERO RC (OK FOR SHUTDOWN, PERCOLATE  04240000
*                                  WHEN CALLED FROM ABNDEXIT).          04250000
         B     XMSEXIT                                                  04260000
*                                                                       04270000
****************************************************************        04280000
**    EXIT                                                              04290001
****************************************************************        04300000
*                                                                       04310000
XMSEXIT  DS    0H                  RETURN                               04320000
         CTSADBG LEVEL=(DBGLEVEL,1),                            WS10013X04330000
               'CTSAXMS ENDS'                                           04340000
         CTSAAMD RESTORE,AMODSAV=AMODE                         IS10188  04341002
         SLR   R15,R15             ZERO RC (OK FOR SHUTDOWN, PERCOLATE  04350000
         BRTRN (15)                                                     04360000
         LTORG ,                                                        04370000
         DROP  ,                                               SAS2IBMN 04371000
*                                                                       04380000
****************************************************************        04390000
**    ESTAE RECOVERY ROUTINE                                            04400001
****************************************************************        04410000
*                                                                       04420000
* R13 -> SAVE AREA PROVIDED BY RTM.                                     04430000
*                                                                       04440000
*                                                                       04450000
ABNDEXIT DS    0H                                                       04460000
*SAS2IBMN DROP  R13                                                     04470001
         USING *,R15                                                    04480000
         STM   R14,R12,12(R13)     SAVE REGISTERS.                      04490000
         L     R14,BASEADDR        R14 -> CTSAXMS EP.                   04500000
*                                  SET THE SAVE AREA CHAIN:             04510000
         ST    R13,4(,R14)         CHAIN RTM SAVE AREA AS PREV.         04520000
         ST    R14,8(,R13)         CHAIN OUR SAVE AREA AS NEXT TO RTM.  04530000
         LR    R13,R14             R13 -> EP                            04540000
         LA    R10,4095(R13)                                    WS10013 04550000
         LA    R10,1(R10)                                       WS10013 04560000
         DROP  R15                                                      04570000
*WS10013 USING CTSAXMS,R13                                              04580000
         USING CTSAXMS,R13,R10                                  WS10013 04590000
         TESTAUTH STATE=YES,KEY=YES,FCTN=1,RBLEVEL=1           SAS2IBMN 04591001
         CTSADBG LEVEL=(DBGLEVEL,1),                           SAS2IBMNX04591101
               'ABNDEXIT: TESTAUTH RC = #',(?R15)              SAS2IBMN 04591201
         CHI   R15,0                                           SAS2IBMN 04592001
         BE    TERM0                                           SAS2IBMN 04593001
         CTSAATH AUTH=ON           TURN APF ON                PS0435    04600001
         B     TERM0               TERMINATE THE XMM ENVIRONMENT.       04610000
         DROP  ,                                               SAS2IBMN 04611000
*                                                                       04620000
****************************************************************        04630000
**   CONSTANTS                                                          04631001
****************************************************************        04632000
*                                                                       04633000
         LTORG ,                                                        04634000
BASEADDR DC    A(CTSAXMS)          BASE ADDRESS.                        04635000
JOBNAME  DC    CL8' '                                                   04636000
XMSSERV  DC    C'N'                XMS INIT/TERM FLAG           *CTS2   04637000
*                                                                       04638000
*                                                                       04639000
****************************************************************        04640000
**   PC ROUTINES TOKEN PARAMETER LIST                                   04650001
****************************************************************        04660000
*                                                                       04670000
TKLIST   DS    0F                                                       04680000
         DC    F'1'                ONE ENTRY                            04690000
TKVALUE  DC    F'0'                                                     04700000
*                                                                       04710000
XMMID    DC    C'XMM '             XMM IDENTIFIER                       04720000
XMMADDR  DS    A                   XMM ADDRESS FOR TERMINATION.         04730000
*                                                                       04740000
GETSUBS  DC    CL8'GETSUBS'                                             04750000
WSENQFLG DS    CL1                 INITIALIZATION FLAGS                 04760000
WSSSNAM  DS    CL4                 SUBSYSTEM NAME                       04770000
WSSSVTAD DS    A                   ADDRESS OF CURRENT SSVT              04780000
*SAS2IBMN WSSSCTAD DS    A         ADDRESS OF CURRENT SSCT              04790001
WSSWTAD  DS    A                   ADDRESS OF SWT (N/A).                04800000
WSDEBUG  DC    X'00'               DEBUG LEVEL                          04810000
WSCOMPFL DC    X'00'               DEBUG LEVEL (N/A)                    04820000
WSEXLEN  DS    F                   EXECUTOR'S LENGTH (N/A)              04830000
WSFDBK   DS    CL8                 EXECUTOR'S NAME (N/A)                04840000
WSBUFF   DS    XL256               MESSAGE BUFFER                       04850000
WSALLOC  DS    CL1                 DYN SUBSYSTEM ALLOC PERMITED         04860000
WSSMFID  DS    CL4                 SMFID                                04870000
CCTADDR  DS    A                                                        04880000
         DS    0D                                                       04890000
WSEZ     DS    XL8                  CVB/CVD AREA                        04900000
         DS    D                   LET IT BE ...                        04910000
WSASCBTM DS    CL8                 PSEUDO TIMESTAMP                     04920000
         DS    0F                                                       04930000
SHORT    DC    XL4'00000100'      SHORT WAIT INTERVAL                   04940000
CTSAINST DC    CL16'BMC_EE_CTSA_TOK      '                       WS2356 04950000
*                                                                WS2356 04960000
ICB_PTR  DS    AL4                   INSTALLATION CB TOKEN       WS2356 04970000
         DS    3F                                                WS2356 04980000
WSTOK    DS    F                                               SAS2IBMN 04981001
*                                                                WS2356 04990000
RC       DS    F                                                 WS2356 05000000
RAREA    DS    XL384              CTSAMSR WORK AREA                     05010000
******** PLEASE NOTE:  DO NOT MOVE THE FOLLOWING 3 LINES.      WS10054  05010100
DBGFWD   DS    0F                 DEBUG LEVEL AS A FULLWORD    WS10054  05011000
         DC    3X'00'             1ST 3 BYTES OF FWD DEBUG FLD WS10054  05012000
DBGLEVEL DC    XL1'0'                                          WS10013  05020000
******** PLEASE NOTE:  DO NOT MOVE THE PREVIOUS 3 LINES.       WS10054  05020100
EXCSHR   DC    CL1'E'             EXCLUSIVE OR SHARE = E       WS10054  05021000
ENQRNL   DC    CL1'Y'             ENQ SYSTEMS RNL=Y/N VALUE    WS10054  05022000
RESFLG   DS    XL1                RESERVE FLAG - NOT IN USE    WS10054  05023000
REASONCD DS    F                  REASON CODE                  WS10054  05024000
SCOPE    DC    F'4'               0 = SYSTEMS 4 = SYSTEM       WS10054  05025000
*                                                                       05030000
****************************************************************        05040000
*   ENQ PARAMETERS                                                      05050000
*       DO NOT CHANGE !!!                                               05060000
****************************************************************        05070000
*                                                                       05080000
DEQ      DC    CL8'DEQ'                                                 05090000
ENQ      DC    CL8'ENQ'                                                 05100000
TEST     DC    CL8'TEST'                                                05110000
WAIT     DC    CL8'WAIT'                                                05120000
HAVE     DC    CL8'HAVE'                                                05130000
QNDBG    DC    F'0'                                                     05140000
QNRSN    DC    F'0'                                                     05150000
QNAME    DC    CL8' '                                                   05160000
RNAME    DC    C'CTSA.SUBSYSTEM.'                                       05170000
RNAMEID  DC    CL4' '                                                   05180000
RNAMESS  DC    CL4' '                                                   05190000
         DC    CL(44-(L'RNAME+L'RNAMEID+L'RNAMESS))' '          WS10054 05191000
RNAMELN  EQU   *-RNAME                                                  05200000
RNAMEL   DC    AL1(RNAMELN)                                             05210000
DDNAME   DC    CL8'     '                                               05220000
AMODE    DC    A(0)                                            IS10188  05221002
*                                                                       05230000
****************************************************************        05240000
**    PC ROUTINES ENTRY LIST                                            05250001
****************************************************************        05260000
*                                                                       05270000
ETLIST   DS    0D                ET LIST HEADER                         05280000
         DC    X'00'               RESERVED - MUST BE ZERO              05290000
         DC    X'00'               RESERVED - MUST BE ZERO              05300000
         DC    H'10'               10 PC ROUTINES                       05310000
*                                                                       05320000
E0       DC    X'00'             XMEM POST ROUTINE                      05330000
         DC    X'C0'               SUPERVISOR STATE, SPACE SWITCH       05340000
         DC    H'0'                RESERVED - MUST BE ZERO              05350000
         DC    A(0)                                                     05360000
E0PROG   DC    V(CTSAPC0)                                               05370000
         DC    X'8000'             CALLER MUST BE IN KEY0               05380000
         DC    X'0080'             ROUTINE KEY = 8 OR CALLER KEY        05390000
         DC    F'0'                RESERVED - MUST BE ZERO              05400000
*                                                                       05410000
E1       DC    X'01'             XMEM SEND ROUTINE                      05420000
         DC    X'C0'               SUPERVISOR STATE, SPACE SWITCH COMPL 05430000
         DC    H'0'                RESERVED - MUST BE ZERO              05440000
         DC    A(0)                                                     05450000
E1PROG   DC    A(DUMMYPC)                                               05460000
         DC    X'FFFF'             CALLER CAN BE IN ANY KEY             05470000
         DC    X'0080'             ROUTINE KEY = 8 OR CALLER KEY        05480000
         DC    F'0'                RESERVED - MUST BE ZERO              05490000
*                                                                       05500000
E2       DC    X'02'             XMEM RECEIVE ROUTINE                   05510000
         DC    X'C0'               SUPERVISOR STATE, SPACE SWITCH COMPL 05520000
         DC    H'0'                RESERVED - MUST BE ZERO              05530000
         DC    A(0)                                                     05540000
E2PROG   DC    A(DUMMYPC)                                               05550000
         DC    X'FFFF'             CALLER CAN BE IN ANY KEY             05560000
         DC    X'0080'             ROUTINE KEY = 8 OR CALLER KEY        05570000
         DC    F'0'                RESERVED - MUST BE ZERO              05580000
*                                                                       05590000
E3       DC    X'03'             XMEM TS ROUTINE                        05600000
         DC    X'C0'               SUPERVISOR STATE, SPACE SWITCH COMPL 05610000
         DC    H'0'                RESERVED - MUST BE ZERO              05620000
         DC    A(0)                                                     05630000
E3PROG   DC    A(DUMMYPC)                                               05640000
         DC    X'FFFF'             CALLER CAN BE IN ANY KEY             05650000
         DC    X'0080'             ROUTINE KEY = 8 OR CALLER KEY        05660000
         DC    F'0'                RESERVED - MUST BE ZERO              05670000
*                                                                       05680000
E4       DC    X'04'             AUTHORIZATION ROUTINE                  05690000
         DC    X'80'               SUPERVIZOR STATE                     05700000
         DC    H'0'                RESERVED - MUST BE ZERO              05710000
         DC    A(0)                                                     05720000
E4PROG   DS    F                   DYNAMICALLY LOADED ROUTINE   WO0122  05730000
         DC    X'FFFF'             CALLER CAN BE IN ANY KEY             05740000
         DC    X'1000'             ROUTINE KEY = 8 OR CALLER KEY        05750000
         DC    F'0'                RESERVED - MUST BE ZERO              05760000
*                                                                       05770000
E5       DC    X'05'             XMEM ROUTINE FOR ALL CTOREQ REQUESTS   05780000
         DC    X'C0'               SUPERVISOR STATE, SPACE SWITCH       05790000
         DC    H'0'                RESERVED - MUST BE ZERO              05800000
         DC    A(0)                                                     05810000
E5PROG   DC    A(DUMMYPC)          ROUTINE ADDRESS                      05820000
         DC    X'FFFF'             CALLER CAN BE IN ANY KEY             05830000
         DC    X'0080'             ROUTINE KEY = 8 OR CALLER KEY        05840000
         DC    F'0'                RESERVED - MUST BE ZERO              05850000
*                                                                       05860000
E6       DC    X'06'             FOR FUTURE USE PC - CALL               05870000
         DC    X'C0'               SUPERVISOR STATE, SPACE SWITCH       05880000
         DC    H'0'                RESERVED - MUST BE ZERO              05890000
         DC    A(0)                                                     05900000
E6PROG   DC    A(DUMMYPC)          ROUTINE ADDRESS                      05910000
         DC    X'FFFF'             CALLER CAN BE IN ANY KEY             05920000
         DC    X'0080'             ROUTINE KEY = 8 OR CALLER KEY        05930000
         DC    F'0'                RESERVED - MUST BE ZERO              05940000
*                                                                       05950000
E7       DC    X'07'             FOR FUTURE USE PC - CALL               05960000
         DC    X'C0'               SUPERVISOR STATE, SPACE SWITCH       05970000
         DC    H'0'                RESERVED - MUST BE ZERO              05980000
         DC    A(0)                                                     05990000
E7PROG   DC    A(DUMMYPC)          ROUTINE ADDRESS                      06000000
         DC    X'FFFF'             CALLER CAN BE IN ANY KEY             06010000
         DC    X'0080'             ROUTINE KEY = 8 OR CALLER KEY        06020000
         DC    F'0'                RESERVED - MUST BE ZERO              06030000
*                                                                       06040000
E8       DC    X'08'               FIND CACHE BLOCK                     06050000
         DC    X'C0'               SUPERVISOR STATE, SPACE SWITCH       06060000
         DC    H'0'                RESERVED - MUST BE ZERO              06070000
         DC    A(0)                                                     06080000
E8PROG   DC    A(DUMMYPC)          ROUTINE ADDRESS                      06090000
         DC    X'FFFF'             CALLER CAN BE IN ANY KEY             06100000
         DC    X'0080'             ROUTINE KEY = 8 OR CALLER KEY        06110000
         DC    F'0'                RESERVED - MUST BE ZERO              06120000
*                                                                       06130000
E9       DC    X'09'               CTSA INTERCEPTOR NOTIFY              06140000
         DC    X'C0'               SUPERVISOR STATE, SPACE SWITCH       06150000
         DC    H'0'                RESERVED - MUST BE ZERO              06160000
         DC    A(0)                                                     06170000
E9PROG   DC    V(CTSAPC9)          ROUTINE ADDRESS                      06180000
         DC    X'8000'             CALLER MUST BE IN KEY ZERO           06190000
         DC    X'0080'             ROUTINE KEY = 8 OR CALLER KEY        06200000
         DC    F'0'                RESERVED - MUST BE ZERO              06210000
*                                                                       06220000
****************************************************************        06230000
**   DUMMY PC ROUTINE FOR UNUSED IOA ROUTINES              *            06240001
****************************************************************        06250000
*                                                                       06260000
DUMMYPC  DS    0D                                                       06270000
         XR    R15,R15                                                  06280000
         PT    R3,R14                                                   06290000
*                                                                       06300000
****************************************************************        06310000
**    MVS CONTROL BLOCKS                                    *           06320001
****************************************************************        06330000
*                                                                       06340000
*PS0001  IEFJSCVT                                                       06350000
*PS0001  IEFJESCT                                                       06360000
         IHAPSA                                                         06370000
         IKJTCB                                                         06380000
*WS10047 TIOT     DSECT                                                 06390000
*WS10047 IEFTIOT1                                                       06400000
         IHAASCB                                                        06410000
         IHAASVT                                                        06420001
*                                                                       06430000
         IEZJSCB ,                                             WS10047  06440000
*                                                                       06450000
CSCB     DSECT                                                 WS10047  06460000
         IEECHAIN ,                                            WS10047  06470000
*                                                                       06480000
*WS2356  COPY  CTSSSVT                                                  06490000
ICB      DSECT                                                   WS2356 06500000
         COPY  CTSICB                                            WS2356 06510000
         COPY  CTSAXMM                                                  06520000
*SAS2IBMN IEFJSCVT                                                      06530001
*SAS2IBMN IEFJESCT                                                      06540001
*                                                                       06550000
         IEESMCA                                                        06560000
CVT      CVT    PREFIX=YES,DSECT=YES,LIST=YES                           06570000
         END                                                            06580000
