         TITLE 'CTSAATC - ATTACH A PROGRAM / ROUTINE'
*
****************************************************************        00060000
****                                                        ****        00070000
****     CONTROL-SA  RELEASE 4.0.00                         ****        00080000
****                                                        ****        00090000
****     (C) COPYRIGHT 2015 SAILPOINT TECHNOLOGIES, INC.,   ****        00100000
****     ALL RIGHTS RESERVED.                               ****        00110000
****                                                        ****        00110000
****************************************************************        00120000
*
****************************************************************
*                                                              *
* TITLE            : ATTACH A PROGRAM                          *
*                                                              *
* FILE NAME        : CTSAATC                                   *
*                                                              *
* AUTHOR           : NURIT YAHALOM                             *
*                                                              *
* CREATION DATE    : 13/06/17                                  *
*                                                              *
* DESCRIPTION      : ATTACH A PROGRAM OR ROUTINE.              *
*                                                              *
* PARAMETERS       : 1. NAME OF PROGRAM OR ROUTINE TO ATTACH.  *
*                       (CL8) (I)                              *
*                                                              *
*                    2. PROGRAM TYPE:   (C) (I)                *
*                       P - PROGRAM                            *
*                       R - ROUTINE                            *
*                                                              *
*                    3. PARAMETERS TO PROGRAM OR ROUTINE: (I)  *
*                       - WHEN FLAG = P:                       *
*                         2 BYTES CONTAINING THE PARAMETER     *
*                         LENGTH FOLLOWED BY THE PARAMETER     *
*                         STRING.                              *
*                       - WHEN FLAG = R:                       *
*                         THE STANDARD PARAMETERS LIST FOR     *
*                         THE ROUTINE. THE LAST ADDRESS IN THE *
*                         PARAMETERS LIST NEEDS TO HAVE THE    *
*                         HIGH-ORDER BIT ON.                   *
*                                                              *
*                    4. SUBPOOL 0 SHARE OPTION: (C) (I):       *
*                       Y - YES                                *
*                       N - NO                                 *
*                                                              *
*                    5. DEBUG LEVEL (F) (I)                    *
*                                                              *
*                                                              *
*                    6. PROGRAM / ROUTINE RETURN OR ABEND CODE.*
*                       (F) (O)                                *
*                                                              *
*                    7. PROGRAM / ROUTINE REASON CODE.         *
*                       (F) (O)                                *
*                                                              *
*                    8. PROGRAM / ROUTINE ABEND TYPE (S / U)   *
*                       (C) (O)                                *
*                                                              *
*                                                              *
* RETURN CODES     :  0 - OK.                                  *        00240000
*                     4 - PARAMETERS ERROR.                    *        00250000
*                     8 - GETMAIN FAILED.                      *        00250000
*                    12 - ATTACH FAILED.                       *        00250000
*                    16 - DETACH FAILED.                       *        00250000
*                    20 - PROGRAM / ROUTINE ABENDED.           *        00250000
*                                                              *
*                                                              *
* !!! ATTENTION !!!                                            *
* WHEN THE ATTACHED PROGRAM RETURNS WITH A NON-ZERO RC, THIS   *
* ROUTINE RETURNS WITH RC=0. THE ATTACHED PROGRAM RETURN CODE  *
* IS RETURNED IN PARAMETER NUMBER 6 AND HAS TO BE VERIFIED     *
* BY THE CALLER, WHEN NEEDED.                                  *
*                                                              *
****************************************************************
*
****************************************************************
* MOD.ID   WHO      WHEN     DESCRIPTION                       *
* -------- -------- -------- --------------------------------- *
*          NURITY   13/06/17 NEW VERSION.                      *
* BS10084  SELIGT   28/03/18 NO CHANGE - JUST RT/PB            *
* WS10075  NURITY   15/07/19 ERROR IN PGM PARM HANDLING.       *
* IS10188  NURITY   06/10/24 MOVE OUR MODULES ABOVE 16M LINE   *
*                                                              *
****************************************************************
*
*--------------------------------------------------------------*
*        INITIALIZE
*--------------------------------------------------------------*
CTSAATC  CSECT
CTSAATC  RMODE ANY
CTSAATC  AMODE ANY
*
         USING CTSAATC,R15
         SAVE  (14,12),,*                                               00530000
         CTSLEVEL
*
         LR    R12,R15                 SET BASE REGISTER.
         DROP  R15
         USING CTSAATC,R12
*
**   ALLOCATE WORK AREA AND CHAIN SAVE AREAS.
*
         LR    R10,R1                  R10 -> PARMS LIST.
         USING PRM,R10                 R10 POINTS TO INPUT PARMS
*IS10188 GETMAIN RC,LV=WALEN
         GETMAIN RC,LV=WALEN,LOC=24    TO HAVE DBGAREA BELOW   IS10188
         CHI   R15,0
         BNE   RC8                     GETMAIN FAILED.
*
         XC    0(WACLNLEN,R1),0(R1)
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING WA,R13
*--------------------------------------------------------------------
**   PROCESS THE PARAMETERS
*--------------------------------------------------------------------
*
**   TAKE DEBUG LEVEL.
*
         MVI   DBGLEVEL,0              ZERO DEBUG LEVEL.
         L     R4,PRMDBG               R4 -> DEBUG LEVEL (4 BYTES)
         LA    R4,0(,R4)               CLEAR AMODE BIT.
         CHI   R4,0                    DEBUG LEVEL PROVIDED ?
         BE    NODEBUG
         L     R4,0(,R4)               R4 = DEBUG LEVEL
         CHI   R4,0                    VALID DEBUG LEVEL ?
         BNH   NODEBUG                 ..NO - NO DEBUG.
         STC   R4,DBGLEVEL             STORE DEBUG LEVEL (1 BYTE)
NODEBUG  DS    0H
*
**   RESET RETURN AND REASON CODES, IS REQUESTED.
*
         L     R4,PRMPGMRC             R4 -> AREA FOR RETURN CODE.
         LA    R4,0(,R4)               CLEAR HIGH-ORDER BYTE.
         CHI   R4,0                    REQUESTED ?
         BE    SETRS0                 ..NO - CHECK IF ABEND.
         LHI   R1,0
         ST    R1,0(,R4)               RESET RETURN CODE.
*
SETRS0   DS    0H
         L     R4,PRMPGMRS             R4 -> AREA FOR REASON CODE.
         LA    R4,0(,R4)               CLEAR HIGH-ORDER BYTE.
         CHI   R4,0                    REQUESTED ?
         BE    SETAT                   ..NO - RESET ABEND TYPE.
         LHI   R1,0
         ST    R1,0(,R4)               RESET REASON CODE.      WS10075
*
SETAT    DS    0H
         L     R4,PRMPGMAT             R4 -> AREA FOR REASON CODE.
         LA    R4,0(,R4)               CLEAR HIGH-ORDER BYTE.
         CHI   R4,0                    REQUESTED ?
         BE    TAKEPGM                 ..NO - RESET ABEND TYPE.
         MVI   0(R4),C' '              RESET ABEND TYPE.
*
**   TAKE PROGRAM NAME
*
TAKEPGM  DS    0H
         L     R4,PRMPGM               R4 -> PGMNAME.
         LA    R4,0(,R4)               CLEAR AMODE BIT.
         CTSADBG LEVEL=(DBGLEVEL,1),                                   X00885600
               'PRMPGM = ~ / _',(?R4,0(R4),8),                         X00885600
               RAREA=RAREA,DBGAREA=DBGAREA
         CHI   R4,0                    PGMNAME PROVIDED ?
         BE    RC4                     ..NO - ERROR.
         LR    R1,R4                   R1 -> PGMNAME (FOR LOOP)
         MVC   PGMNAME,BLANK8
         LA    R3,L'PGMNAME            R2 CONTAINS MAX LEN OF USERID
LOOPPGMN DS    0H
         CLI   0(R1),C' '              IS CHAR BLANK/X'00' OR LOWER?
         BNH   ENDPGMN                 ..YES - END OF PGMNAME.
         LA    R1,1(,R1)               ADVANCE PARM POINTER
         BCT   R3,LOOPPGMN             SUBTRACT 1 FROM COUNTER & RELOOP
ENDPGMN  DS    0H
         SR    R1,R4                   R1 = PGNNAME LENGTH.
         BNP   RC4                      ..NO PROGRAM NAME.
         AHI   R1,-1                   FOR EX.
         EX    R1,MVPGMN
         B     *+L'*+L'MVPGMN
MVPGMN   MVC   PGMNAME(*-*),0(R4)
         CTSADBG LEVEL=(DBGLEVEL,1),                                   X00885600
               'PGNMAME = _ ',(PGMNAME,8),                             X00885600
               RAREA=RAREA,DBGAREA=DBGAREA
*
**   TAKE PROGRAM TYPE FLAG
*
         L     R5,PRMFLAG              R5 -> FLAG.
         CTSADBG LEVEL=(DBGLEVEL,1),                                   X00885600
               'PRMFLAG = ~ / _',(?R5,0(R5),1),                        X00885600
               RAREA=RAREA,DBGAREA=DBGAREA
         LA    R5,0(,R5)               CLEAR AMODE BIT.
         CHI   R5,0                    FLAG PROVIDED ?
         BE    RC4                     ..NO - ERROR.
         CLI   0(R5),C'R'              ROUTINE ?
         BE    TAKPGMPR
         CLI   0(R5),C'P'              PROGRAM ?
         BNE   RC4
*
**   TAKE PROGRAM / ROUTINE PARAMETERS.
**   - ROUTINE - THE PARAMETER SHOULD POINT TO A VALID PARAMETERS
**               LIST.
**   - PGM - THE PARAMETER SHOULD POINT TO THE PARM= STRING AND SHOULD
**           BE PRECEDED BY A HALFWORD CONTAINING THE STRING LENGTH.
**           WE NEED TO PREPARE THE PARAMETER FOR THE ATTACH.
**           R1 -> X'80'+PARM ADDRESS -> H'LENGTH'C'STRING'
**           *** THE PARAMETER SHOULD BE BELOW THE LINE  ***   WS10075
**
*
TAKPGMPR DS    0H
         L     R4,PRMPARM              R4 -> PARM FOR PROGRAM / ROUTINE
         LA    R4,0(,R4)               CLEAR AMODE BIT.
         ST    R4,PGMPARM
         CLI   0(R5),C'R'              ROUTINE TYPE PARAMETERS ?
         BE    RTNPARM
         CHI   R4,0                    PGM PARM PROVIDED ?
         BE    NOPGMPRM                ..NO - SET EMPTY PARM.
         LH    R2,0(,R4)               FOR DIAG
         CTSADBG LEVEL=(DBGLEVEL,1),                                   X00885600
               'PGM PARMS = ~ -> ~ / _',                               X00885600
               (?R4,?R2,2(R4),?R2),                           WS10075  X
               RAREA=RAREA,DBGAREA=DBGAREA
*WS10075       (?R4,?R2,0(R4),?R2),                                   X
*WS10075 LR    R1,R4
*WS10075 B     SETPGMPR
         B     PREPPGMP                                        WS10075
NOPGMPRM DS    0H
*WS10075 LA    R1,EMPTYPRM
*   WS10075 - START
         LHI   R2,0
         LA    R4,EMPTYPRM
PREPPGMP DS    0H
         LA    R3,2+4(,R2)             R3 = PROG PARM AREA LEN WS10075
         ST    R3,PGMPALEN
         GETMAIN RC,LV=(R3),LOC=BELOW  L O C  = B E L OW !!!
         CHI   R15,0
         BNE   RC8                     GETMAIN FAILED.
         ST    R1,PGMPAREA             SAVE PROG PARM AREA ADDR.
         LR    R5,R1
         USING PGMPRMD,R5
         AHI   R2,2-1                  2 FOR LENGTN. -1 FOR EX.
         EX    R2,MVPARM
         B     *+L'*+L'MVPARM
MVPARM   MVC   PGMPPARM(0),0(R4)
         LA    R1,PGMPPARM
         OILH  R1,X'8000'
         ST    R1,PGMPADDR
         LR    R1,R5              R1 -> PARM.
*   WS10075 - END
*WS10075 SETPGMPR DS   0H
*WS10075 OILH  R1,X'8000'              TURN ON HIGH-ORDER BIT.
*WS10075 ST    R1,ATTPARM              PREPARE R1 FOR ATTACH.
         ST    R1,ATTPARM              PREPARE R1 FOR ATTACH.
         L     15,PGMPADDR             FOR DIAG                 WS10075
         LH    R2,PGMPPARM             FOR DIAG                 WS10075
         CTSADBG LEVEL=(DBGLEVEL,1),                            WS10075X00885600
               'PRMPGM = ~ -> ~ -> ~, _',                       WS10075X00885600
               (ATTPARM,?R15,?R2,2(R15),?R2),                   WS10075X
               RAREA=RAREA,DBGAREA=DBGAREA                      WS10075
         DROP  R5                                               WS10075
         B     DOATTACH
RTNPARM  DS    0H
         ST    R4,ATTPARM
         CTSADBG LEVEL=(DBGLEVEL,1),                                   X00885600
               'RTN PARMS = ~ ',(ATTPARM),                             X00885600
               RAREA=RAREA,DBGAREA=DBGAREA
*--------------------------------------------------------------------
**   ATTACH THE TASK
*--------------------------------------------------------------------
DOATTACH DS    0H
         MVC   ATTACHL(ATTACHML),ATTACHM MF=L
         LA    R8,TASKECB              R8 -> ECB R5,TSSECB
         L     R1,ATTPARM              R1 -> PARM TO ATTACH.
*
         L     R4,PRMS0
         LA    R4,0(,R4)
         CHI   R4,0                    SZERO PROVIDED ?
         BE    ATTS0YES                ..NO - DEFAULT IS YES.
         CLI   0(R4),C'Y'              SZERO = YES ?
         BE    ATTS0YES
*
         ATTACH EPLOC=PGMNAME,SZERO=NO,ECB=(R8),SF=(E,ATTACHL)
         CTSADBG LEVEL=(DBGLEVEL,1),                                   X00885600
               'ATTACH WITH SZERO=NO.  RC = #',(?R15),                 X00885600
               RAREA=RAREA,DBGAREA=DBGAREA
         B     ATTCHRC
ATTS0YES DS    0H
         ATTACH EPLOC=PGMNAME,SZERO=YES,ECB=(R8),SF=(E,ATTACHL)
         CTSADBG LEVEL=(DBGLEVEL,1),                                   X00885600
               'ATTACH WITH SZERO=YES.  RC = #',(?R15),                X00885600
               RAREA=RAREA,DBGAREA=DBGAREA
ATTCHRC  DS    0H
         LTR   R15,R15
         BNZ   RC12               ATTACH FAILED
         ST    R1,TASKTCB        SAVE @ TCB
*
**   WAIT FOR TASK TERMINATION.
*
         WAIT  ECB=TASKECB
*
**   RETURN TASK RETURN OR COMPLETION CODES.
*
         L     R4,PRMPGMRC             R4 -> AREA FOR RETURN CODE / 0.
         L     R7,TASKTCB
         USING TCB,R7
*WS10075 CTSADBG LEVEL=(DBGLEVEL,1),                                   X00885600
               'TASK RC = ~    TCBCMP = ~',(TASKECB,TCBCMP),           X00885600
               RAREA=RAREA,DBGAREA=DBGAREA
         CTSADBG LEVEL=(DBGLEVEL,1),                           WS10075 X00885600
               'TASK RC = ~    TCBCMP = ~  TCBFLGS8 = $',      WS10075 X
               (TASKECB,TCBCMP,TCBFLGS8,1),                    WS10075 X
               RAREA=RAREA,DBGAREA=DBGAREA                     WS10075
         TM    TCBFLGS8,TCBENDINGABNORMALLY TASK ABENDED ?     WS10075
         BZ    RETRC                   ..NO - RETURN RC.       WS10075  5
         L     R0,TCBCMP               TAKE COMPLETION CODE.
         NILH  R0,X'00FF'              CLEAR FLAGS.
*WS10075 CHI   R0,0                    ABENDED ?
*WS10075 BE    RETRC                   NO - RETURN TASK RC.
         LHI   R15,20                  SET 'TASK ABENDED' RETURN CODE.
         ST    R15,SAVERC
*
**   RETURN TASK ABEND CODE.
*
         CHI   R4,0                    RETURN CODE REQUESTED ?
         BE    DETACH                  ..NO - SKIP.
         LHI   R1,0
         SRDL  R0,12                   SHIFT YUSER CODE TO R1.
         TMLL  R0,X'0FFF'              SYSTEM ABEND CODE ?
         BNZ   RETSYSCD                SHIFT USER CODE TO THE RIGHT.
         SRL   R1,20
         ST    R1,0(,R4)               RETURN USER ABEND CODE.
         L     R4,PRMPGMAT
         CHI   R4,0
*WS10075 BZ    RETRS
         BE    RETRS                                           WS10075
         MVI   0(R4),C'U'              STE 'SYSTEM' ABEND.
         B     RETRS
RETSYSCD DS    0H
         ST    R0,0(,R4)
         L     R4,PRMPGMAT
         CHI   R4,0
*WS10075 BZ    RETRS
         BE    RETRS                                           WS10075
         MVI   0(R4),C'S'              STE 'SYSTEM' ABEND.
RETRS    DS    0H
         L     R4,PRMPGMRS
         CHI   R4,0                    REASON CODE REQUESTED ?
         BE    DETACH
         TM    TCBCMPF,TCBRV316        REASON CODE IS VALID ?
         BZ    DETACH                  ..NO - DO NOT TAKE IT.
*
         L     R1,TCBARC               R1 = REASON CODE.
         ST    R1,0(,R4)               RETURN REASON CODE.
         B     DETACH                                          WS10075
         DROP  R7
*
**   RETURN TASK RETURN CODE.
*
RETRC    DS    0H
         LHI   R15,0                   SET ROUTIN RETURN CODE.
         ST    R15,SAVERC              SAVE RETURN CODE.
*
         CHI   R4,0                    REASON CODE REQUESTED ?
         BE    DETACH                  ..NO - SKIP.
         L     R1,TASKECB              R1 = POST CODE + RETURN CODE.
         NILH  R1,X'00FF'              LEAVE ONLY RETURN CODE.
         ST    R1,0(,R4)               RETURN TASK RC.
*
**   DETACH THE TCB.
*
DETACH   DS    0H
         DETACH TASKTCB                DETACH THE TASK.
         CTSADBG LEVEL=(DBGLEVEL,1),                                   X00885600
               'DETACH: RC = #',(?R15),                                X00885600
               RAREA=RAREA,DBGAREA=DBGAREA
         CHI   R15,0                   DETACH OK ?
*WS10075 BNZ   RC16                    DETACH FAILED
         BNE   RC16                    DETACH FAILED           WS10075
         L     R15,SAVERC              TAKE SAVED RC.
         B     RETURN
*--------------------------------------------------------------------
**   SET RETURN CODE AND RETURN
*--------------------------------------------------------------------
RC4      DS    0H
         LHI   R15,4                   PARAMETERS ERROR.
         B     RETURN
*
RC8      DS    0H                      GETMAIN FAILED.
         LHI   R15,8
         B     OUT
*
RC12     DS    0H                      ATTACH FAILED.
         LHI   R15,12
         B     RETURN
*
RC16     DS    0H                      DETACH FAILED
         LHI   R15,16
         B     RETURN
*
RETURN   DS    0H
*  WS10075 - START
         LR    R5,R15
         L     R1,PGMPAREA
         CHI   R1,0                   ALLOCATED ?
         BE    AFTFREEM               ...NO - OUT.
         L     R0,PGMPALEN
         FREEMAIN RC,LV=(R0),A=(R1)
         CHI   R15,0
         BZ    AFTFREEM
         CTSADBG LEVEL=(DBGLEVEL,1),                                   X00885600
               'FREEMAIN FAILED:  RC = #',(?R15),                      X00885600
               RAREA=RAREA,DBGAREA=DBGAREA
AFTFREEM DS    0H
         LR    R15,R5
*  WS10075 - END
         CTSADBG LEVEL=(DBGLEVEL,1),                                   X00885600
               'RETURN: RC = #',(?R15),                                X00885600
               RAREA=RAREA,DBGAREA=DBGAREA
         LR    R5,R15                  SAVE RC
         LR    R1,R13                  R1 -> ALLOCTED AREA.
         L     R13,4(,R13)
         FREEMAIN RC,LV=WALEN,A=(R1)
         LR    R15,R5                  RESTORE RC.
*
OUT      DS    0H
         RETURN (14,12),RC=(15)
         DROP  ,
         LTORG ,
         DROP  ,
*--------------------------------------------------------------------
**   CONSTANTS
*--------------------------------------------------------------------
BLANK8   DC    CL8' '
EMPTYPRM DC    H'0'
*
ATTACHM  ATTACHX SF=L                  ATTACH MASK.
ATTACHML EQU   *-ATTACHM
         DROP  ,
*--------------------------------------------------------------------
**   DSECTS
*--------------------------------------------------------------------
*
**   WORK AREA
*
WA       DSECT
SA       DS    18F                     SAVE AREA.
DBGLEVEL DS    XL1                     DEBUG LEVEL
PGMNAME  DS    CL8                     PROGRAM NAME.
ATTPGMP  DS    F                       -> ATTACH PARM=          WS10075
PGMPARM  DS    F                       -> PARM= PARAMETER.
ATTPARM  DS    F                       R1 FOR ATTACH.
ATTACHL  ATTACHX SF=L                  AREA FR ATTACH MASK.
TASKECB  DS    F                       ECB TO WAIT ON FOR TASK TERM.
TASKTCB  DS    A                       -> TASK TCB.
SAVERC   DS    F
PGMPAREA DS    A                       -> PARM AREA.
PGMPALEN DS    A                       LENGTH OF PARM AREA.
*
WACLNLEN EQU   *-WA                    LENGTH OF AREA TO RESET.
*
         DS    0D
RAREA    DS    XL512                   USED BY CTSADBG.
DBGAREA  DS    XL2048                                                   01950100
WALEN    EQU   *-WA
*
**   PARAMETERS BLOCK.
*
PRM      DSECT                         PARAMETERS
PRMPGM   DS    A   1. (INPUT)    -> PROGRAM NAME.
PRMFLAG  DS    A   2. (INPUT)    -> FLAG (CL1: P(ROGRAM) / R(OUTINE))
PRMPARM  DS    A   3. (INPUT)    -> PARAMETERS BLOCK.
PRMS0    DS    A   4. (INPUT)    -> SZERO (CL1: Y / N)
PRMDBG   DS    A   5. (INPUT)    -> DEBUG LEVEL ( F )
PRMPGMRC DS    A   6. (OUTPUT)   -> PROGRAM RETURN / ABEND CODE.
PRMPGMRS DS    A   7. (OUTPUT)   -> PROGRAM REASON CODE.
PRMPGMAT DS    A   8. (OUTPUT)   -> ABEND TYPE.
*
*  WS10075 - START
PGMPRMD  DSECT
PGMPADDR DS    A                        -> PARM.
PGMPPARM DS    X                        PARM (LEN, PARM)
*  WS10075 - END
         CTSEQUR ,
*
*--------------------------------------------------------------------
**   CONTROL BLOCKS
*--------------------------------------------------------------------
         IKJTCB ,
         END
