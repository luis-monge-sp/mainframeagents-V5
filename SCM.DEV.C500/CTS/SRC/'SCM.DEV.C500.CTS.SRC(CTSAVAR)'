         START
*                                                                       00000901
****************************************************************        00000201
****                                                        ****        00000301
****     CONTROL-SA  RELEASE 1.3.0                          ****        00000401
****                                                        ****        00000501
****     LICENCED MATERIAL - NEW DIMENSION SOFTWARE LTD.    ****        00000601
****                                                        ****        00000701
****************************************************************        00000801
*                                                                       00000901
****************************************************************        00001001
*                                                              *        00001101
* TITLE            : CTSAVAR                                   *        00001201
*                                                              *        00001301
* FILE NAME        : CTSAVAR                                   *        00001401
*                                                              *        00001501
* AUTHOR           : DORON COHEN                               *        00001601
*                                                              *        00001701
* CREATION DATE    : 07/08/94                                  *        00001801
*                                                              *        00001901
* DESCRIPTION      : COMMAND PROCESSOR TO ACTIVATE CTSCVAR     *        00002001
*                                                              *        00002101
* RETURN CODES     : 100 - PARAMETER TOO LONG       IS10184    *        00002101
*                    OTHER - PARAMETER RETURNED BY THE         *        00002101
*                    CALLED PROGRAM.                           *        00002101
*                                                              *        00002101
* ASSUMPTIONS AND                                              *        00002201
*   CONSIDERATIONS :                                           *        00002301
*                                                              *        00002401
****************************************************************        00002501
*--------------------- CTS V 4.0.00 ---------------------------*
* SAS2IBMN 27.04.17 NY CHANGE RMODE TO 31.                     *
* WS10076  25.08.19 ST MANAGE PERMISSIONS AS ACCOUNT AND GROUP *
*                      ATTRIBUTES                              *
* IS10184  31/08/21 NY IMPROVE SCRIPTS PERFORMANCE             *
****************************************************************        00002501
*                                                              *        00002401
* CHANGES INCLUDED IN IS10184:                                 *        00002401
* - THE CODE IS CHANGED TO BE REUSABLE SO THAT WE CAN LOAD     *        00002401
*   IT ONCE AND THE SYSTEM WILL FIND IT IN JPQA INSTEAD OF     *        00002401
*   BRINGING IT FORM LIBRARY EACH TIME IS IT CALLED.           *        00002401
*                                                              *        00002401
* - SUPPORT CALLERS USING "ADDRESS TSO" AND "ADDRESS LINK"     *        00002401
*   THE PARAMETERS RECEIVED BY A PROGRAM CALLED WITH           *        00002401
*   "ADDDRESS TSO" OR "ADDRESS LINK" AND THE REXX ENVIRONMENT  *        00002401
*   TABLES ARE DESCRIBED IN "TSO/E REXX REFERENCE")                     00002401
*                                                              *        00002401
*                                                              *        00002401
* - WHEN CALLED WITH "ADDRESS LINK", FIND THE ADDRESS OF       *        00002401
*   IRXEXCOM (THE REXX SERVICE FOR HANDLING REXX VARIABLES)    *        00002401
*   IN THE REXX CONTORL BLOCKS AND PASS IT TO THE PROGRAM      *        00002401
*   THAT HS TO BE CALLED (CTSCVAR, CTSCGRO).                   *        00002401
*                                                              *        00002401
* - HANDLE A PROGRAMS LIST IN WHICH THE ADDRESSES OF THE       *        00002401
*   PROGRAMSTO BE CALLED ARE SAVED SO THAT WE CAN CALL THEM    *        00002401
*   INSTEAD OF LINKING TO THEM. THIS REQUIRES THAT THESE       *        00002401
*   PROGRAMS ARE WRITTEN AS REUSBLE AND ARE LOADED BY THE      *        00002401
*   PRORAM THAT INVOKES THE REXX SCRIPT, SO THAT WE CAN FIND   *        00002401
*   THEIR ADDRESS.                                             *        00002401
*                                                              *        00002401
* NOTE;                                                        *        00002401
* WITH THIS CHANGE THIS PROGRAM CANNOT BE CHANGED TO BE        *        00002401
* REENTRANT BECAUSE IT SAVED DATA (THE PROGRAMS LIST) INSIDE   *        00002401
* ITS CONSTANTS AREA.                                          *        00002401
*                                                              *        00002401
****************************************************************        00002501
*
CTSAVAR  CSECT
CTSAVAR  AMODE 31
*SAS2IBMN CTSAVAR  RMODE 24
CTSAVAR  RMODE 31                                              SAS2IBMN
*                                                                       00020001
**   INITIALIZE                                           *
*
         BEGIN
         CTSLEVEL
         LR    R10,R1                R10 ->
*                                      -  CPOL (TSO)
*                                      -  PARM (LINK)          IS10184
         XC    WA(WALEN),WA                                    IS10184
         ST    R0,ENVBLK             - TSO - N/A.              IS10184
*                                      -  REXX ENVBLOCK (LINK) IS10184
*
* * * * * * * *     IS10184 - START   * * * * * * *
*
**   IDENTIFY CALL TYPE: LINK / TSO
**
**   WHEN CALLED WITH "ADDRESS TSO", A TASK IS CREATED WHILE WHEN
**   CALLED WITH "ADDRESS LINK", AN RB IS CREATED UNDER THE EXISTING
**   TASK.
**   WE WILL IDENTIFY THE CALL TYPE BY CHECKING THE RB STRUCTURE:
**   IF THE RB POINTED BY THE TCB (THE LAST RB) IS THE FIRST RB
**   (IT POINTS TO THE TCB), IS MEANS THAT WE ARE THE ONLY RB FOR
**   THIS TASK -> ADDRESS TSO.
*
         L     R1,PSATOLD-PSA      R1 -> TCB
         L     R1,TCBRBP-TCB(,R1)  R1 -> OUR RB
         USING RBBASIC,R1
         TM    RBSTAB2,RBTCBNXT    PREV ONE IS THE TCB?
         BO    TSOPARM             YES... ADDRESS TSO.
*
**   LINK - TAKE PARAMETER ADDRESS AND LENGTH.
*
         MVI   CALLTYPE,#CTLINK
         CHI   R10,0                 PARAMETER EXISTS ?
         BE    ADDEXCOM              ..NO - ACTIVATE
         L     R3,0(R10)             R3 -> PARAMETERS ADDRESS.
         LA    R3,0(,R3)
         CHI   R3,0
         BE    ADDEXCOM
         L     R3,0(,R3)             R3 -> PARAMETERS.
         LA    R3,0(,R3)
         CHI   R3,0
         BE    ADDEXCOM
         L     R4,4(,R10)            R4 -> PARAMETER LENGTH.
         LA    R4,0(,R4)
         CHI   R4,0
         BE    ADDEXCOM
         L     R4,0(,R4)             R4 = PARAMETER LENGTH.
         CHI   R4,0
         BE    ADDEXCOM
*
         LA    R1,0(R4,R3)
         ST    R1,ENDOFBFR           SAVE END OF BUFFER ADDRESS WS10076
         B     PROCPARM
TSOPARM  DS    0H
         MVI   CALLTYPE,#CTTSO
* * * * * * * *     IS10184 - END     * * * * * * *
         USING CPPL,R10
*
**   TSO - SKIP COMMAND NAME.
*
*IS10184 XC    PARMLEN,PARMLEN
*
*IS10184 MVC   EPNAME,CTSCVAR        DEFAULT PGM NAME TO LINK TOWS10076
         L     R9,CPPLCBUF
         LA    R3,4(R9)              R3 -> START OF COMMAND
         AH    R3,2(R9)              R3 -> START OF PARAMETERS
         LR    R4,R9                 R4 -> START OF BUFFER
         AH    R4,0(R9)              R4 -> END OF BUFFER
         ST    R4,ENDOFBFR           SAVE END OF BUFFER ADDRESS WS10076
         SR    R4,R3                 R4 = LENGTH OF PARAMETERS
         LTR   R4,R4
         BNP   ACTIVATE
*IS10184 STH   R4,PARMLEN
         DROP  R10
*
**   PROCESS THE PARAMETERS:
**   - IF PARAMETER STARTS WITH PGM2CALL(NAME) TAKE THE NAME OF THE
**     PRORAM CALL. PARM FOR THE CALLED PROGRAM STARTS AFTER IT.
**     WHEN THIS PARAMETER DOES NOT EXIST, CTSCVAR IS CALLED.
**
**  WE CANNOT TRNSLATE THE PARAMETER HERE BECAUSE WE ARE CHANGING
**  THE PARAMETER PROVIDED BY REXX, AND MAY FAIL IF WE ARE NOT
**  ALLOWED TO CHANGE THIS AREA.
*
PROCPARM DS    0H                                              IS10184
*IS10184 LR    R8,R4                 COPY LENGTH OF PARMS HERE  WS10076
*IS10184 BCTR  R8,0                  DECREMENT FOR EX           WS10076
*IS10184 TR    0(*-*,R3),LWR2UPR     TRANSLATE TO UPPER-CASE    WS10076
*IS10184 EX    R8,*-6                TRANSLATE TO UPPER-CASE    WS10076
*IS10184 CLC   PGM2CALL,0(R3)        STARTS WITH THIS PARM?     WS10076
         CHI   R4,L'PGM2CALL         PARM LONG ENOUGH ?        IS10184
         BNH   CPYPARMS              ..TOO SHORT FOR PGM2CALL. IS10184
         MVC   PARMLINE(L'PGM2CALL),0(R3) COPY PARM BEGINNING  IS10184
         TR    PARMLINE(L'PGM2CALL),LWR2UPR UPPER-CASE.        IS10184
         CLC   PGM2CALL,PARMLINE     STARTS WITH PGM2CALL( ?   IS10184
         BNE   CPYPARMS              NO, CONTINUE THERE         WS10076
*                                    YES, WE COPY THE NAME OF   WS10076
*                                    'THE PGM TO LINK TO' TO    WS10076
*                                    THE EPNAME FIELD, WE       WS10076
*                                    UPDATE R3 (PTR TO PARM)    WS10076
*                                    AND R4 (PARM LEN), AND WE  WS10076
*                                    CONTINUE                   WS10076
****************************************************************WS10076
* FROM NOW ON, CTSAVAR MAY CALL CTSCVAR (AS IT USED TO BEFORE   WS10076
* THIS CHANGE) OR CTSCGRO (TO HANDLE ACF2 ACCOUNT AND GROUP     WS10076
* PERMISSIONS).   THE NEW INTERFACE TO CALL CTSBPBB ENABLES US  WS10076
* TO ADD OTHER PROGRAMS IN THE FUTURE IF THIS WILL BE REQUIRED. WS10076
****************************************************************WS10076
         MVC   EPNAME,=CL8' '        CLEAR THE EPNAME FIELD     WS10076
         LA    R5,9(R3)              POINT TO 1ST CHAR OF PGM   WS10076
         LA    R6,EPNAME             POINT TO 1ST CHAR OF EPNAMEWS10076
         LA    R7,9                  SET BCT 'OVERFLOW' VALUE   WS10076
         L     R1,ENDOFBFR           R1 -> END OF PARM          IS10184
         SR    R1,R5                 R1 = LENGTH OF PARAMETERS  IS10184
         CR    R1,R7                 PARM IS LONG ENOUGH ?      IS10184
         BH    LOOP                  ..YES - LOOP OVERFLOW IS OK.S10184
         LR    R7,R1                 ..NO - LOOP UNTIL END.     IS10184
LOOP     DS    0H                                               WS10076
         CLI   0(R5),C')'            DID WE REACH END OF NAME?  WS10076
         BE    UPDTR3R4              YES, CONTINUE THERE        WS10076
*IS10184 MVC   0(1,R6),0(R5)         NO, COPY THE NEXT CHAR     WS10076
         LLC   R1,0(,R5)             LOAD THE BYTE.             IS10184
         LA    R1,LWR2UPR(R1)        R1 -> CHAR IN UPPER.       IS10184
         MVC   0(1,R6),0(R1)         COPY NEXT CHAR IN UPPER.  IS10184
         LA    R5,1(R5)              INCREMENT SOURCE PTR       WS10076
         LA    R6,1(R6)              INCREMENT DESTINATION PTR  WS10076
         BCT   R7,LOOP               GO BACK UP TO CHK NEXT CHARWS10076
         LA    R15,32                EPNAME 'OVERFLOW' ERROR    WS10076
         B     RETURN                RETURN TO CALLER           WS10076
UPDTR3R4 DS    0H                                               WS10076
         XC    PARMLEN,PARMLEN       CLEAR PARMLEN              WS10076
         LA    R5,2(R5)              POINT TO START OF REAL PARMWS10076
         L     R4,ENDOFBFR           GET END OF BUFFER ADDRESS  WS10076
         SR    R4,R5                 R4 = LENGTH OF PARAMETERS  WS10076
         LTR   R4,R4                 ANY PARAMETERS?            WS10076
         BNP   ADDEXCOM              NO, JUST CALL THE PGM      WS10076
*IS10184 STH   R4,PARMLEN            YES, SET PARAMETER LENGTH  WS10076
         LR    R3,R5                 R3 SHOULD POINT TO PARMS   WS10076
*
**   COPY PARAMETERS
*
CPYPARMS DS    0H                                               WS10076
         CHI   R4,L'PARMLINE         ENOUGH SPACE FOR PARM ?    IS10184
         BH    PRM2LONG              ..NO - ERROR.              IS10184
         STH   R4,PARMLEN            YES, SET PARAMETER LENGTH  WS10076
         BCTR  R4,0
         EX    R4,MVPRM                                        IS10184
         B     *+L'*+L'MVPRM                                   IS10184
MVPRM    MVC   PARMLINE(*-*),0(R3)
*IS10184 EX    R4,*-6
*        THE NEXT STATEMENT NOT NEEDED BECAUSE WE ALREADY DID   WS10076
*        IT ABOVE                                               WS10076
*WS10076 TR    PARMLINE,LWR2UPR
         TR    PARMLINE,LWR2UPR        TRANSLATE HERE. WE CAN   IS10184
*                                      DO IT ONLY AFTER WE COPY IS10184
*                                      IT TO OUR AREA.          IS10184
         TR    PARMLINE,SUPNPRT
*
**   ADD CALLED WITH "LINK", ADD THE EXCOM PARAMETER WITH THE
**   IRXEXCOM ADDRESS.
*
ADDEXCOM DS    0H
* * * * * * * *     IS10184 - START   * * * * * * *
*
         CLI   CALLTYPE,#CTLINK        LINK ?
         BNE   ACTIVATE                ..NO - ACTIVATE.
*
         LH    R6,PARMLEN
         AHI   R6,L'EXCOM+L'EXCOMAD+1  R6 = NEW PARM LENGTH.
         CHI   R6,L'PARMLINE           ENOUGH SPACE FOR THIS ?
         BH    ACTIVATE                ..NO - DO NOT ADD IT.
*
         L     R11,ENVBLK                                      IS10184
         USING ENVBLOCK,R11
         CLC   ENVBLOCK_ID,=CL8'ENVBLOCK' VALIDATE THE BLOCK.
         BNE   ACTIVATE
         L     R11,ENVBLOCK_IRXEXTE    R11 -> REXX VECTOR OF
*                                             EXTERNAL ENTRY POINTS.
         CHI   R11,0
         BE    ACTIVATE
         DROP  R11
         L     R15,IRXEXCOM-IRXEXTE(R11)  R15 -> IRXEXCOM
         CHI   R15,0
         BE    ACTIVATE
         CTSAN2C EXCOMAD,MODE=HEX,RENT=YES  MAKE THE ADDRESS PRINTABLE.
         LH    R5,PARMLEN
         LA    R5,PARMLINE(R5)         R5 -> END OF PARM.
         MVC   0(L'EXCOM,R5),EXCOM     PUT...
         MVC   L'EXCOM(8,R5),EXCOMAD     ...EXCOM(ADDR)...
         MVI   L'EXCOM+L'EXCOMAD(R5),C')'   ...IN PARM.
         STH   R6,PARMLEN              SET NEW LENGTH (CALC ABOVE).
* * * * * * * *     IS10184 - START   * * * * * * *
*
**  SET DEFAULT EPNAME, IF NEEDED AND ACTIVATE
*
ACTIVATE DS    0H                                              IS10184
         CLI   EPNAME,C' '             PGM2CALL WAS SET ?      IS10184
         BH    GETPGMAD                ..YES - GET ITS ADDRESS.IS10184
         MVC   EPNAME,CTSCVAR          SET DEFAULT PROGRAM     IS10184
*
* * * * * * * *     IS10184 - START   * * * * * * *
*
**  GET PROGRAM ADDRESS
**
**  WE HANDLE A PROGRAMS LIST IN WHICH WE SAVE THE ADDRESS OF
**  EACH PROGRAM THAT WE NEED TO CALL, IF WE FIND IT IN THE JPQA
**  (WHICH MEANS, IT WAS LOADED BEFORE WE WERE CALLED).
**
**  BEFORE CALLING THE PROGRAM, WE LOOK IN THIS LIST FOR THE
**  PROGRAM. IF IT EXISTS, WE WILL TAKE ITS ADDRESS FROM ITS
**  ENTRY IN THE LIST AND CALL IT.
**  IF IT DOES NOT EXIST IN THE LIST, WE WILL LOOK FOR IT IN THE
**  JPQA. IF IT IS FOUND, WE'LL SAVE THE PROGRAM NAME AND ADDRESS
**  IN THE PROGRAMS LIST (TO BE USED NEXT TIME WE NEED TO CALL IT)
**  AND CALL THE PROGRAM.
**
**  IF WE DO NOT FIND THE PROGRAM IN JPQA (THE PROGRAM IS NOT
**  LOADED), WE'LL LINK TO IT.
**
*
GETPGMAD DS    0H
         LA    R3,PGMS
         LHI   R4,PGMS#
PGMLOOP  DS    0H
         CLI   0(R3),C' '              EMPTY ENTRY ?
         BE    QUERY
         CLC   0(8,R3),EPNAME
         BE    TAKEADDR
         LA    R3,12(,R3)
         BCT   R4,PGMLOOP
QUERY    DS    0H
         CSVQUERY INEPNAME=EPNAME,                                     >
               SEARCH=JPA,                                             >
               OUTEPA=EPA,                                             >
               OUTATTR2=EPATTR,                                        >
               MF=(E,CSQ)
         CHI   R15,0                   OK ?
         BNE   LINK                    ..NO - USE LINK.
         L     R15,EPA                 R15 = EPA.
         TM    EPATTR,B'00110000'      AMODE 31 OR ANY ?
         BZ    SETPGM
         OILH  R15,X'8000'             SET AMODE 31.
SETPGM   DS    0H
         CHI   R4,0                    PGMS TABLE IS FULL ?
         BE    CALL                    ..YES - DON'T SAVE, BUT CALL.
         MVC   0(8,R3),EPNAME
         ST    R15,12(,R3)
         B     CALL
TAKEADDR DS    0H                      PROGRAM IS IN LIST.
         L     R15,12(,R3)             TAKE THE ADDRESS FROM THE LIST.
CALL     DS    0H
         LA    R1,PARM
         BASSM R14,R15                 BRANCH TO THE PROGRAM.
         B     RETURN
*
LINK     DS    0H
* * * * * * * *     IS10184 - END     * * * * * * *
         LA    R1,PARM
*WS10076 LINK  EP=CTSCVAR
         LINK  EPLOC=EPNAME                                     WS10076
         B     RETURN                                          IS10184
*                                                                       08750000
**  FINISH                                                              08770000
*                                                                       08240000
* * * * * * * *     IS10184 - START   * * * * * * *
PRM2LONG DS    0H                    PARM RECEIVED IS TOO LONG.         S10184
*
***   THE CODE BELOW DOES NOT WORK - SHOLD BE CHECKED SHY
***   MEANWHILE, WE'LL JUST RETURN RC=100 WHEN PARM TOO LONG.
*
**   IF CALLED WITH LINK, ISSUE ERORR MESSAGE USING THE IRXSAY SERVICE.
*
**
**       CLI   CALLTYPE,#CTLINK        LINK ?
**       BNE   PRM2LRC                 ..NO - CAM'I ISSUE MSG.
**       L     R11,ENVBLK
**       USING ENVBLOCK,R11
**       CLC   ENVBLOCK_ID,=CL8'ENVBLOCK' VALIDATE THE BLOCK.
**       BNE   PRM2LRC
**       L     R11,ENVBLOCK_IRXEXTE    R11 -> REXX VECTOR OF
**                                            EXTERNAL ENTRY POINTS.
**       CHI   R11,0
**       BE    PRM2LRC
**       DROP  R11
**       L     R15,IRXSAY-IRXEXTE(R11)  R15 -> IRXSAY
**       CHI   R15,0
**       BE    PRM2LRC
**                                     SET IRXSAY PARAMETER BLOCK.
**       LA    R1,WRITE
**       ST    R1,SAYPRM
**       LA    R1,PRM2LERR
**       ST    R1,SAYPRM+4
**       LA    R1,PRM2LERL
**       ST    R1,SAYPRM+8
**       LA    R1,ENVBLK
**       ST    R1,SAYPRM+12
**       OI    SAYPRM+12,X'80'
**       LHI   R0,0
**       LA    R1,SAYPRM
**       BASR  R14,R15                 ISSUE THE ERROR MESSAGE.
**PRM2LRC  DS    0H
         LHI   R15,100               SET ERROR RC.
         B     RETURN
* * * * * * * *     IS10184 - END     * * * * * * *
*
RETURN   DS    0H                                               WS10076
         BRTRN (15)
*
***************************************************************
*                     CONSTANTS
***************************************************************
*
CTSCVAR  DC    CL8'CTSCVAR'          DEFAULT PGM NAME TO LINK TOWS10076
PGM2CALL DC    C'PGM2CALL('          PGM NAME TO LINK TO        WS10076
LWR2UPR  DC    256AL1(*-LWR2UPR)
         ORG   LWR2UPR+C'A'-X'40'
         DC    C'ABCDEFGHI'
         ORG   LWR2UPR+C'J'-X'40'
         DC    C'JKLMNOPQR'
         ORG   LWR2UPR+C'S'-X'40'
         DC    C'STUVWXYZ'
         ORG   ,
SUPNPRT  DC    256AL1(*-SUPNPRT)
         ORG   SUPNPRT
         DC    64C' '
         ORG   ,
PARM     DS    0D                                              IS10184
         DC    A(PARM1+X'80000000')                            IS10184
*                                      PARM END
         CTSAN2C WORK=YES,RENT=CONST                           IS10184
         CTSAN2C WORK=YES,RENT=VAR                             IS10184
*
PGMS     DC    0A                      PROGRAMS LIST           IS10184
         DC    CL8' ',A(0)             1                       IS10184
PGMSEL   EQU   *-PGMS                                          IS10184
         DC    CL8' ',A(0)             2                       IS10184
         DC    CL8' ',A(0)             3                       IS10184
         DC    CL8' ',A(0)             4                       IS10184
         DC    CL8' ',A(0)             5                       IS10184
         DC    CL8' ',A(0)             6                       IS10184
         DC    CL8' ',A(0)             7                       IS10184
         DC    CL8' ',A(0)             8                       IS10184
         DC    CL8' ',A(0)             9                       IS10184
         DC    CL8' ',A(0)             10                      IS10184
PGMS#    EQU   (*-PGMS)/PGMSEL                                 IS10184
*
EXCOM    DC    C' EXCOM('
PRM2LERR DC    C'CTSAVAR - THE PARAMETER PASSED IS TOO LONG'   IS10184
PRM2LERL DC    A(L'PRM2LERR)                                   IS10184
WRITE    DC    CL8'WRITE'                                      IS10184
         LTORG
***************************************************************
*                     WORK ARAA
***************************************************************
WA       DS    0X                                              IS10184
ENDOFBFR DS    A                                                WS10076
EPNAME   DS    CL8                     PROGRAM TO CALL.         WS10076
EPA      DS    A                       EP                      IS10184
EPATTR   DS    X                       EP ATTIRBUTES.          IS10184
         CSVQUERY MF=(L,CSQ)                                   IS10184
*IS10184 DS    H                                                WS10076
*IS10184   PARM     DS    0D
*IS10184 DC    A(PARM1+X'80000000')
*
CALLTYPE DS    X                       CALL TYPE (LINK / TSO ) IS10184
#CTTSO   EQU   X'01'                   ..TSO                   IS10184
#CTLINK  EQU   X'02'                   ..LINK                  IS10184
*
ENVBLK   DS    A                       -> REXX ENVBLOCK.       IS10184
*
PARM1    DS    0D                      PARM START
PARMLEN  DC    AL2(100)
PARMLINE DC    CL100' '
EXCOMAD  DS    CL8                                             IS10184
*
SAYPRM   DS    5A                      PARMLIST FOR IRXSAY.    IS10184
SAYRC    DS    A                       IRXSAY RC.              IS10184
WALEN    EQU   *-WA                                            IS10184
*
         CTSEQUR
***************************************************************
*                   CONTORL BLOCKS.
***************************************************************
         IKJCPPL
         IHAPSA DSECT=YES                                      IS10184
         IKJTCB DSECT=YES                                      IS10184
         IHARB DSECT=YES                                       IS10184
         IRXENVB ,                                             IS10184
         IRXEXTE ,                                             IS10184
         END
