         MACRO
&LABEL   CTSBGNR &LV=72,&SP=0,&SAVER1=R3,&ID=NO,&EQUR=NO,&GMTYPE=R,    *
               &CLEAR=YES,&ERRET=,&STACK=NO,&LOC=             IS10188
.*IS10188      &CLEAR=YES,&ERRET=,&STACK=NO
.*********************************************************************
.***                                                              ****
.***  REENTRANT ENTRY MACRO                                       ****
.***                                                              ****
.***  SA-AGENT RELEASE 4.0.XX                                     ****
.***                                                              ****
.***  (C) COPYRIGHT 1996-2004 BMC SOFTWARE, INC.                  ****
.***  ALL RIGHTS RESERVED.                                        ****
.***                                                              ****
.*********************************************************************
.*
.*      THIS MACRO WILL PROVIDE REENTRANT ENTRY LINKAGE AND OPTIONALLY
.*      MULTIPLE BASE REGISTERS. IF NO OPERANDS ARE CODED, R10 IS
.*      ASSUMED THE BASE. R1 IS SAVED IN R3
.*
.*       EXAMPLE:
.*
.*              SECTNAME CTSBGNR          = STANDARD REG 10 BASE
.*              SECTNAME CTSBGNR 5        = STANDARD, REG 5 BASE
.*              SECTNAME CTSBGNR LV=500,SP=230,R10,R11
.*                                        = REGS 10 AND 11 ARE BASES
.*                                        = WS=500BYTES IN SP 230
.*
.*       NEWS:
.*
.*              ERRET                     = ADDRESS OF ERROR EXIT
.*                                          FOR GMTYPE=RC
.*                                          NOT MANDATORY.      IS10188
.*                                          IF NOT SPECIFIED, A IS10188
.*                                          DEFAULT ROUTINE IS  IS10188
.*                                          DEFINED THAT ISSUES IS10188
.*                                          WTO AND ABEND WITH  IS10188
.*                                          USER 878 ABEND CODE IS10188
.*                                          AND BGNR (C1C7D5D9) IS10188
.*                                          REASON CODE.        IS10188
.*              STACK                     = YES/NO - USAGE OF STACKED
.*                                          SAVEARE INSTEAD OF GETMAIN
.*                                          (IN THE IOABRTR AS WELL)
.*              SAVER1                    = EMPTY VALUE - PREVENT R1
.*                                          SAVE/RESTORE
.*       IS10188
.*              LOC=24/31/RES             - FOR GMTYPE=RC ONLY.
.*
.*
.*
.*
.**********************************************************************
.* MOD.ID   WHO      WHEN     DESCRIPTION
.* -------- -------- -------- ----------------------------------------
.* IS10188  NURITY   06/10/24 MOVE OUR MODULES ABOVE 16M LINE
.**********************************************************************
         LCLA  &AA,&AB,&AC
*IS10188 GBLB  &PRORG,&INTPROC
         GBLB  &INTPROC                                        IS10188
&AC      SETA  4096
         AIF   (&INTPROC).INTPROC
&LABEL   CSECT
&INTPROC SETB  1
         AGO   .STM
.INTPROC ANOP
&LABEL   DS    0H
.STM     ANOP
         STM   R14,R12,12(R13)     SAVE REGISTERS
         AIF   ('&SAVER1' EQ '').NSAVER1                       *NS
         LR    &SAVER1,R1          SAVE PARM REGISTER
.NSAVER1 ANOP                                                  *NS
.*       AIF   (N'&SYSLIST NE 0).MUSING                        *NS
         AIF   (N'&SYSLIST NE 0 AND '&SYSLIST(1)' NE '').MUSING *NS
         LR    R10,R15
         USING &LABEL,R10          INFORM ASSEMBLER
         AGO   .MID
.MUSING  ANOP
         LR    &SYSLIST(1),R15     LOAD REQUESTED BASE REG
         USING &LABEL,&SYSLIST(1)  INFORM ASSEMBLER
&AA      SETA  2
.LOOP    ANOP
.*       AIF   (&AA GT N'&SYSLIST).MID                         *NS
         AIF   (&AA GT N'&SYSLIST OR '&SYSLIST(&AA)' EQ '').MID *NS
&AB      SETA  &AA-1
         LA    &SYSLIST(&AA),4095(&SYSLIST(&AB))  LOAD NEXT BASE REG
         LA    &SYSLIST(&AA),1(&SYSLIST(&AA))     LOAD NEXT BASE REG
         USING &LABEL+&AC,&SYSLIST(&AA) INFORM ASSEMBLER
&AC      SETA  &AC+4096
&AA      SETA  &AA+1
         AGO   .LOOP
.MID     ANOP
         AIF   ('&ID' EQ 'NO').NOID
         B     ID&SYSNDX           BRANCH AROUND
         DC    CL8'&LABEL'         CSECT NAME
PCH&SYSNDX DC  40A(0)              PATCH AREA
ID&SYSNDX  CNOP 0,4
.NOID    ANOP
.*       AIF   ('&LV' EQ '' OR '&LV' EQ '0').MEXIT             *NS
         AIF   ('&LV' EQ '' OR '&LV' EQ '0').STACK             *NS
         AIF   ('&GMTYPE' EQ 'R' AND '&LOC' NE '24').ERR01     IS10188
         B     GETM&SYSNDX
SIZE&SYSNDX DC AL1(&SP),AL3(&LV)
EYE&SYSNDX DC CL4'IOAS'   EYE CATCHER FOR GETMAIN              *IE
SECT&SYSNDX DC CL8'&LABEL' CSECT NAME                         *IE
GETM&SYSNDX EQU   *
.*IS10188 GETMAIN &GMTYPE,LV=&LV+16,SP=&SP CORE FOR SAVEAREA AND USER
         GETMAIN &GMTYPE,LV=&LV+16,SP=&SP,LOC=&LOC         IS10188
*                    CORE FOR SAVEAREA AND USER WORK AREA  IS10188
         AIF   ('&GMTYPE' NE 'RC').UNCOND                      *NS
.RETTEST ANOP                                                  *NS
.*       AIF   ('&ERRET' EQ '').UNCOND   *IE(WAS HERE .MEXIT)  *NS
.*IS10188 AIF   ('&ERRET' NE '').ERR01  ISSUE ERROR AND STOP   *NS
&ERT     SETC  '&ERRET'                                        IS10188
         LTR   15,15               RETURN CODE TEST            *NS
         AIF   ('&ERT' NE '').CHKRC    ERRET PROVIDED.         IS10188
         B     CHKRC&SYSNDX            SKIP THE ERROR ROUTINE. IS10188
ERT&SYSNDX DS  0H                                              IS10188
&WTOMSG  SETC '''&LABEL: CTSBGNR FAILED FOR &LV+16, SP=&SP, LOC=&LOC'''
         WTO   &WTOMSG                                         IS10188
         ABEND X'878',DUMP,,USER,REASON=X'C1C7D5D9'            IS10188
&ERT     SETC  'ERT&SYSNDX'                                    IS10188
.CHKRC   ANOP                          IS10188
CHKRC&SYSNDX   DS 0H                                           IS10188
.*IS10188 AIF   ('&ERRET'(1,1) EQ '(').REGRET                   *NS
.*IS10188 BNZ   &ERRET              GO TO ERROR ROUTINE         *NS
         AIF   ('&ERT'(1,1) EQ '(').REGRET                     IS10188
         BNZ   &ERT                GO TO ERROR ROUTINE         IS10188
         AGO   .UNCOND                                         *NS
.REGRET  ANOP                                                  *NS
 *IS10188 BCR   7,&ERRET(1)        GO TO ERROR ROUTINE         *NS
         BCR   7,&ERT(1)           GO TO ERROR ROUTINE         IS10188
         AGO   .UNCOND                                         *NS
.*
.UNCOND  ANOP                                                  *NS
.*
         MVC   0(4,R1),EYE&SYSNDX  SET EYE CATCHER             *IE
         MVC   4(4,R1),SIZE&SYSNDX KEEP SP AND SIZE            *IE
         MVC   8(8,R1),SECT&SYSNDX KEEP CSECT NAME             *IE
         LA    R1,16(,R1)          POINT TO SAVE AREA          *IE
.*
         ST    R1,8(R13)           SET FORWARD CHAIN
         AIF   ('&CLEAR' EQ 'NO').AFTCLR                       *IE
         AIF   ('&LV' EQ '72').CLRSMAL                         *IE
         LR    R14,R1              SAVE POINTER IN EVEN REG
         SR    R15,R15
         ICM   R15,B'0111',SIZE&SYSNDX+1 SET RECEIVING LENGTH
         LR    R0,R14              SET RECEIVING POINTER
         SR    R1,R1               SET PAD BYTE TO ZERO
         MVCL  R14,R0              RESET AREA WITH X'00'
         L     R1,8(R13)           RESTORE GETMAIN ADDRESS
         AGO   .AFTCLR                                         *IE
.CLRSMAL ANOP                                                  *IE
         XC    0(&LV,R1),0(R1)     CLEAR SAVE AREA             *IE
.AFTCLR  ANOP                                                  *IE
         ST    R13,4(R1)           SAVE BACK CHAIN
         LR    R13,R1              SET SAVEAREA POINTER
         AIF   ('&SAVER1' EQ '').STACK                         *NS
         LR    R1,&SAVER1          SAVE PARM REGISTER
.STACK   ANOP                                                  *NS
         AIF   ('&STACK' NE 'YES').MEXIT                       *NS
         ST    R13,72+4(R13)                                   *NS
         LA    R15,72(R13)                                     *NS
         LA    R13,72(R13)                                     *NS
         ST    R15,8(R13)                                      *NS
         AGO   .MEXIT                                          *NS
.********************                                          *NS
.* ERROR MESSAGES                                              *NS
.********************                                          *NS
.ERR01   ANOP                                                  *NS
.*IS10188MNOTE 12,'CTSBGNR: "ERRET" MUST BE CODED TO USE THE "GMTYPE=RC*
               " PARAMETER'                                    *NS
         MNOTE 12,'CTSBGNR: "LOC MUST BE 24 WHEN GMTYPE=R'     IS10188
.MEXIT   ANOP
         AIF   ('&EQUR' NE 'YES').MEX2
         CTSEQUR
.MEX2    ANOP
         MEND
