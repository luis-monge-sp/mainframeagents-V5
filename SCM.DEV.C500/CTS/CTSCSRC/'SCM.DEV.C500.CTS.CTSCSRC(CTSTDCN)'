 /**************************************************************
 *                                                             *
 * Title            : Delete a user to group connection (TSS)  *
 *                                                             *
 * File Name        : ctstdcn.c                                *
 *                                                             *
 * Author           : Alex Shvartsman                          *
 *                                                             *
 * Creation Date    : 10/07/96                                 *
 *                                                             *
 * Description      :                                          *
 *                                                             *
 * Assumptions and                                             *
 *   Considerations :                                          *
 *                                                             *
 **************************************************************/

 /**************************************************************
 * Mod.Id   Who      When     Description                      *
 * -------- -------- -------  -------------------------------- *
 * BS2429   YB       13/09/00 notify connection update         *
 * BS2678   AH       23/05/04 Memory leak during delete        *
 *                            connection                       *
 * IS10027  AL&SK    25/01/09 Memory leak S878 at BOFA.        *
 *                            >>>not using: user_info and      *
 *                                       ug_info and pair_info *
 *                            >>>only position of conn is used *
 * BS10052  NuritY   28/09/16 When delete connection, send 3   *
 *                            notifications to match CTSTSSX   *
 *                            procesisng.                      *
 * WS10061  Kailas   28/05/17 No error if user is deleted.     *
 **************************************************************/

 /*
  *   Standard include files
  */

 #include   <globs.h>
 #include   STDIO
 #include   STDLIB
 #include   STRING

 /*
  *   ESA include files
  */

 #include   ESA_API
 #include   ESA_DIAG
 #include   ESA_CTSAMSG
 #include   ESA_API_CODES
 #include   API_ADDINFO

 /*
  *   MVS include files
  */

 #include MVS_COMP

 #include MVS_ONLINE_INTERCEPTOR

 #include MVS_OS_MVS

 /*
  *   TSS include files
  */

 #include TSS
 #include TSS_XCNN
 #include TSS_CODES

 static char component[] = "CTSTDCN";

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : delu2ug                                    *
 *                                                             *
 * DESCRIPTION    :                                            *
 *                                                             *
 * INPUT          :                                            *
 *                                                             *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 ESA_RC CTSDelUserFromUG (U2UG_PARAMS_rec_typ  * u2ug_params,
                          ADDINFO_rec_typ      * addinfo,
                          ADMIN_PARAMS_rec_typ * admin_params,
                          ERR_STRUCT_rec_typ   * err)
 {

   static char     func[]="CTSDelUserFromUG";

   ESA_RC                     rc = ESA_OK;
   CTSAMSG_HANDLE_rec_ptr     msgs;
   CTSAMSG_DEST_TABLE_rec_ptr dest;
   TSS_CMD_BUF_rec_typ        cmd = { 0, 0, "" };
   int                        position;         /*BS10015
   TSS_TRAP_CNN_DATA_typ      pair_info;
   TSS_TRAP_CNN_BUF_rec_typ  *user_info = NULL;
   TSS_TRAP_CNN_BUF_rec_typ  *ug_info   = NULL; BS10015*/
   TSS_PARAMS_rec_typ * params_ptr = NULL;                  /*WS10061*/

  /*
   *   Initialize
   */

   ESA_DIAG_enter(ESA_COMP_DELU2UG, 1, func);

   msgs = admin_params->ctsamsg_handle;
   dest = admin_params->ctsamsg_dest;
   params_ptr = admin_params->apiinit_handle;               /*WS10061*/

  /*
   *  Check user, group existance
   */
   /* IS10027 >>> pre_set_cnn is not called
   rc = TSS_pre_set_cnn_proc(ESA_COMP_DELU2UG, u2ug_params, &pair_info,
                             &user_info, &ug_info, admin_params, err);
      IS10027 */
   /* IS10027 >>> do_pair_pos is called to return position of conn */
   rc = TSS_do_pair_pos(ESA_COMP_DELU2UG,
                        u2ug_params->user,u2ug_params->group,&position,
                        admin_params, err);
   if ( rc NE ESA_OK )
     goto exit;

   ESA_DIAG_printf(ESA_COMP_DELU2UG, 1,
      "User=%s Group=%s Position=%d",                       /*IS10027*/
      u2ug_params->user, u2ug_params->group,
      position );                            /* pair_info.pos IS10027*/
   /*IS10027 >>> pair_info not used - instead it position is used
   if ( pair_info.pos EQ TSS_CNN_POS_UNDEFINED ) {            IS10027*/

   /*IS10027 if ( pair_info.pos EQ TSS_CNN_POS_UNDEFINED ) {         */
   if ( position  EQ TSS_CNN_POS_UNDEFINED ) {              /*IS10027*/
   /* WS10061 starts */
      if (params_ptr->rssparm_MSG_CONNGRP_ERR[0] ==
                       MSG_CONNGRP_ERR_OFF)
         rc=ESA_OK;
       else {
         CTSAMSG_print(ERR_ALREADY_DISCONNECTED, msgs, NULL,
                      dest, u2ug_params->user, u2ug_params->group);
         rc = ESA_FATAL;
      }
      goto exit;
   } /* WS10061 ends */

   sprintf(cmd.buffer, "REMOVE(%s) PROFILE(%s) ",
           u2ug_params->user, u2ug_params->group);

   ESA_DIAG_printf(ESA_COMP_DELU2UG, 1, "1.cmd=%s", cmd.buffer);

   cmd.max_len = strlen(cmd.buffer);
   cmd.use_len = strlen(cmd.buffer);
   rc = TSS_issue_cmd(ESA_COMP_DELU2UG, &cmd,
                      u2ug_params->user, TYPE_CONNECTION,  /* BS2429 */
       /* BS10052 */  TSS_EVNT_ACTION_DELETE, admin_params);
   /* BS10052         TSS_EVNT_ACTION_UPDATE, admin_params);         */

  /*
   *   Finish
   */
   exit:;

  /* BS2678
   * Free traped user connections buffer
   *                                      Not needed        IS10027
   if ( user_info ) {
      TSS_free_cnn_trap_handle( ESA_COMP_DELU2UG,
         &user_info, dest, msgs);
   }

  /*
   * Free traped user group connections buffer
   *
   if ( ug_info ) {
      TSS_free_cnn_trap_handle( ESA_COMP_DELU2UG,
         &ug_info, dest, msgs);
   } /* BS2678 & IS10027 end */


   ESA_DIAG_exit(ESA_COMP_DELU2UG, 1, func, rc);

   return rc;

 }
