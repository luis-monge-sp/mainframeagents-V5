/**************************************************************
*                                                             *
* Title            : Get oe information (ACF2)                *
*                                                             *
* File Name        : ctstgoe.c                                *
*                                                             *
* Author           : Yishay Yovel                             *
*                                                             *
* Creation Date    : 20/05/97                                 *
*                                                             *
* Description      :                                          *
*                                                             *
* Assumptions and                                             *
*   Considerations :                                          *
*                                                             *
**************************************************************/

/**************************************************************
* Mod.Id   Who      When     Description                      *
* -------- -------- -------- -------------------------------- *
* SAS2IBMA AvnerL   17/07/16 SAS/C to IBM/C                   *
**************************************************************/

 /*
  *   Standard include files
  */

 #include   <globs.h>
 #include   STDIO
 #include   STDLIB
 #include   STRING
 /* #include   LCIO                 SAS2IBMA */

 /*
  *   ESA include files
  */

 #include   ESA_API
 #include   ESA_DIAG
 #include   ESA_CTSAMSG
 #include   ESA_API_CODES
 #include   API_ADDINFO


 /*
  *   MVS include files
  */

 #include MVS_COMP
 #include MVS_OS_MVS

 /*
  *   ACF2 include files
  */

 static char component[] = "CTSTGOE";

/****************************************************
 * Procedure Name: CTSGetOEs
 * Description   : Get oes
 * Input         : mode          - GET_ALL,
 *                                 GET_MANY (one or many),
 *                                 GET_WILD (wildcards)
 *                                 GET_FREE_HANDLE (see below)
 *                 max_oe        - # of elements in oe_params,
 *                                 objs_exist and addinfo arrays
 *                 num_oe_in     - # of elements in oe_params_in
 *                 oe_params_in  - array of num_oe_in, filled with
 *                                 OEs requested.
 *                 admin_params   -
 * Output        : actual_num   - # of OEs returned
 *                 have_more    - HAVE_MORE if more OEs, else NO_MORE
 *                 err          - error indication, message, etc.
 *                 objs_exist   - array of max_oe:
 *                                OBJ_EXIST if OE exists, else
 *                                OBJ_NOT_EXIST.
 *                 oe_params    - array of max_oe:
 *                                callee fills with OES returned
 *  Input/Output : addinfo      - array of max_OE pointers:
 *                                add.info per OE, Caller puts
 *                                requested keywords, callee returns
 *                                actual add.info.
 *                 handle       - NULL on first call, filled by callee,
 *                                used by callee to keep track.
 * Return Value  : ESA_RC
 * Side Effects  : The function may allocate memory for internal usage
 *                 and return pointer to it in *handle.
 *                 Memory will be freed when function returns
 *                 have_more==NO_MORE.
 *                 If caller stop calling the function before NO_MORE,
 *                 he MUST call the function with mode=GET_FREE_HANDLE
 *                 to free the memory.
 * Comments      : Caller must reset I/O params to their initial values
 *                 when using subsequent calls (if HAVE_MORE).
 ****************************************************/

 ESA_RC CTSGetOEs  (GET_OE_MODE            mode,
                    OE_typ                 oe,
                    short                  max_oe,
                    short                * actual_num,
                    HAVE_MORE_typ        * have_more,
                    void                ** handle,
                    short                  num_oe_in,
                    OE_PARAMS_rec_typ      oe_params_in[1],
                    OE_PARAMS_rec_typ      oe_params[1],
                    ADDINFO_rec_typ      * addinfo[1],
                    OBJ_EXISTS_typ         objs_exist[1],
                    ADMIN_PARAMS_rec_typ * admin_params,
                    ERR_STRUCT_rec_typ   * err)
{

 static char func[]="CTSGetOEs";

/*
 *   Variables
 */

 ESA_RC                       rc = ESA_OK ;
 CTSAMSG_HANDLE_rec_typ     * msgs;
 CTSAMSG_DEST_TABLE_rec_typ * dest;

/*
 *  Initialize
 */

 ESA_DIAG_enter(ESA_COMP_GETOES, 1, func );

 msgs = admin_params->ctsamsg_handle;
 dest = admin_params->ctsamsg_dest;

 *actual_num = 0;
 *have_more  = NO_MORE;

/*
 *  Finish
 */

 ESA_DIAG_exit(ESA_COMP_GETOES, 1, func, rc);

 return rc ;

}
