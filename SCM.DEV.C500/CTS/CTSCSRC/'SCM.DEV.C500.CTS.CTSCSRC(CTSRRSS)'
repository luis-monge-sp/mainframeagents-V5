/**************************************************************
*                                                             *
* Title            : oe related functions                     *
*                                                             *
* File Name        : ctsrrss.c                                *
*                                                             *
* Author           : Alexander Shvartsman                     *
*                                                             *
* Creation Date    : 09/10/96                                 *
*                                                             *
* Description      :                                          *
*                                                             *
* Assumptions and                                             *
*   Considerations :                                          *
*                                                             *
**************************************************************/
/**************************************************************
* Mod.Id   Who      When     Description                      *
* -------- -------- -------  -------------------------------- *
* ps0310   Alex     09/09/98 Common Offline Interceptor supp  *
* is0303   AvnerL   05/12/04 Update RACF version to 3.2.01.   *
* is0340   Eli M.Y. 08/02/06 Update RACF version to 3.2.01.100*
* IS10070  AvnerL   07/02/12 Update RACF agent ver to 3.3.01  *
*SAS2IBMN  NuritY   24/01/17 Update RACF agent ver to 4.0.01  *
**************************************************************/


 /*
  *   Standard include files
  */

 #include   <globs.h>
 #include   STRING

 /*
  *   ESA include files
  */

 #include   ESA_API
 #include   ESA_DIAG

/****************************************************
 * Procedure Name: CTSIsUserInOE
 * Description   : User belong to the OE
 * Input         : user_type    - User name.
 *                 oe_mask      - OE mask.
 *                 admin_params -
 * Output        :
 * Return Value  : ESA_OK     User in OE
 *                 ESA_EOF    User not in OE
 *                 ESA_ERR    on any other situation
 ***************************************************/

 ESA_RC CTSIsUserInOE(USER_typ               user,
                      OE_typ                 oe_mask,
                      ADMIN_PARAMS_rec_typ * admin_params,
                      ERR_STRUCT_rec_typ   * err)
{
    return ESA_NOT_SUPP;
}

/****************************************************
 * Procedure Name: CTSIsUGInOE
 * Description   : Group belong to the OE
 * Input         : ug_type      - Group name.
 *                 oe_mask      - OE mask.
 *                 admin_params -
 * Output        :
 * Return Value  : ESA_OK     Group in OE
 *                 ESA_EOF    Group not in OE
 *                 ESA_ERR    on any other situation
 ***************************************************/

 ESA_RC CTSIsUGInOE(UG_typ                 ug,
                    OE_typ                 oe_mask,
                    ADMIN_PARAMS_rec_typ * admin_params,
                    ERR_STRUCT_rec_typ   * err)
{
    return ESA_NOT_SUPP;
}

/****************************************************
 * Procedure Name: CTSIsOEInOE
 * Description   : OE belong to the OE
 * Input         : oe_name      - OE name.
 *                 oe_mask      - OE mask.
 *                 admin_params -
 * Output        :
 * Return Value  : ESA_OK     OE in OE
 *                 ESA_EOF    OE not in OE
 *                 ESA_ERR    on any other situation
 ***************************************************/

 ESA_RC CTSIsOEInOE(OE_typ                 oe_name,
                    OE_typ                 oe,
                    ADMIN_PARAMS_rec_typ * admin_params,
                    ERR_STRUCT_rec_typ   * err)
{
    return ESA_NOT_SUPP;
}

/****************************************************
 * Procedure Name: CTSIsMaskMatch
 * Description   : Object is matches a Mask
 * Input         : object.
 *                 .
 *                 admin_params -
 * Output        :
 * Return Value  : ESA_OK     Mask is Match
 *                 ESA_EOF    Mask is not Match
 *                 ESA_ERR    on any other situation
 ***************************************************/

 ESA_RC CTSIsMaskMatch(char                 * object  ,
                       char                 * mask,
                       OBJECT_TYPE_typ        object_type,
                       MASK_TYPE_typ          mask_type,
                       ADMIN_PARAMS_rec_typ * admin_params,
                       ERR_STRUCT_rec_typ   * err)

{

   ESA_RC  rc = ESA_OK;

   switch ( mask_type )  {
    case MASK_REGULAR :  /* Exactly match compare */
            /*
             *           ESA_DIAG_printf(ESA_COMP_GTUSERS, 8,
             *      "CTSIsMaskMatch: MASK_REGULAR: object=%s mask=%s",
             *       object, mask );
             */

                         if ( strcmp(object, mask ) EQ 0 )
                            rc = ESA_OK;
                         else
                            rc = ESA_EOF;
                         break;

    case MASK_WILD    :  /* Compare according wild mask */
            /*
             *           ESA_DIAG_printf(ESA_COMP_GTUSERS, 8,
             *     "CTSIsMaskMatch: MASK_WILD: object=%d/%s mask=%d/%s",
             *      strlen(object), object, strlen(mask),   mask );
             */
                         if ( strlen(object) LT strlen(mask) )
                            rc = ESA_EOF;
                         else {
                            if ( memcmp(object, mask, strlen(mask) )
                                                              EQ 0 )
                                rc = ESA_OK;
                            else
                                rc = ESA_EOF;
                         }
                         break;

    default           :  rc = ESA_ERR;
   }

   /*
    *     ESA_DIAG_printf(ESA_COMP_GTUSERS, 8,
    *                     "CTSIsMaskMatch: rc = %d", rc);
    */

    return rc;

}

/* ps0310 */
/****************************************************
 * Procedure Name: CTSTransactionEvent
 * Description   : Notify USAAPI of ESS transaction completion
 * Input         : Object type , container , user , group
 * Output        : None
 * Input/Output  : None
 * Return Value  : ESA_RC
 ***************************************************/

ESA_RC CTSTransactionEvent(INTERCEPT_obj_typ       object_type ,
                           OE_typ                  oe ,
                           USER_typ                user,
                           UG_typ                  ug ,
                           TRNSEVNT_UPCON_FLAG_typ connflag ,
                           ADMIN_PARAMS_rec_typ  * admin_params,
                           ERR_STRUCT_rec_typ    * err)
{

   return ESA_OK;

}

/****************************************************
 * Procedure Name : CTSVersion
 * Description    : return API version
 * Input          :
 * Output         : api_version
 * Return Value   : ESA_RC
 * Comments       : Platform-dependent operations to be performed
 *                  prior to any API call.     ws2531
 ***************************************************/
 ESA_RC CTSVersion (RSS_vers_typ  version)

 {

   ESA_RC rc = ESA_OK;
   /* strcpy (version, "3.2.01"); */                    /* is0303 */
   /* IS10070 strcpy (version, "3.2.01.100");           /* is0340 */
   /* SAS2IBMN strcpy (version, "3.3.01");               *IS10070*/
   strcpy (version, "4.0.01");                          /* SAS2IBMN */
   return (rc) ;

 }
