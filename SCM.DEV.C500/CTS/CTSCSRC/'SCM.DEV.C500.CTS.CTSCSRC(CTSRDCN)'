 /**************************************************************
 *                                                             *
 * Title            : Delete a user to group connection (RACF) *
 *                                                             *
 * File Name        : ctsrdcn.c                                *
 *                                                             *
 * Author           : Doron Cohen                              *
 *                                                             *
 * Creation Date    : 28/03/94                                 *
 *                                                             *
 * Description      :                                          *
 *                                                             *
 * Assumptions and                                             *
 *   Considerations :                                          *
 *                                                             *
 **************************************************************/

 /**************************************************************
 * Mod.Id   Who      When     Description                      *
 * -------- -------- -------  -------------------------------- *
 *                   dd/mm/yy                                  *
 *                                                             *
 * ws2549   Yonatan  09/11/05 New parm MSG_CONNGRP_ERR.        *
 * IS10002  AvnerL   31/01/07 Drop CTS3121E. WS2549 improvement *
 * IS10174  NuritY   31/12/17 Dynamic EXECOUT support.         *
 * WS10082  MauriC   07/11/22 Recompile for new ADDINFO macros *
 **************************************************************/

 #include <globs.h>

 /*
  *   Standard include files
  */

 #include   STDLIB
 #include   STDIO
 #include   STRING

 /*
  *   ESA include files
  */

 #include ESA_API
 #include ESA_DIAG
 #include ESA_API

 /*
  *   MVS include files
  */

 #include MVS_OS_CLI

 /*
  *   RACF include files
  */

 #include API_ADDINFO
 #include RACF

 /*
  *     MKT for REMOVE
  *         (Mandatory Keywords Table)
  */

 static ADDINFO_MKTE_rec_typ mkt[] = {
    "GROUP",
    ""         /* a null string indicate end-of-mkt */
  };

 /*
  *     RKT for DELU2UG
  *         (Reserved Keywords Table)
  */

 static ADDINFO_RKTE_rec_typ rkt[] = {
    "GROUP",
    ""         /* a null string indicate end-of-rkt */
  };
 /*
  *     KDT for REMOVE
  *         (Keyword Decscription Table)
  */

 static ADDINFO_KDTE_rec_typ kdt[] =      {

  /*                                                            */
  /* keyword             type   negative       value delimiters */
  /*                             value                          */
  /* =================== ====== ============== ================ */

   {"GROUP"              ,KDT_KEY ,""          ,"(" , ")" },
   {"OWNER"              ,KDT_KEY ,""          ,"(" , ")" },
   {""                   ,KDT_FLG ,"      "    ,""  , ""  }};

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : delu2ug                                    *
 *                                                             *
 * DESCRIPTION    :                                            *
 *                                                             *
 * INPUT          :                                            *
 *                                                             *
 *                                                             *
 * OUTPUT         : none                                       *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 ESA_RC CTSDelUserFromUG (U2UG_PARAMS_rec_typ  * u2ug_params,
                          ADDINFO_rec_typ      * addinfo,
                          ADMIN_PARAMS_rec_typ * admin_params,
                          ERR_STRUCT_rec_typ   * err)
 {

   static char     func[]="CTSDelUserFromUG";

   ESA_RC          rc, chk_rc;
   char            cmd[MAX_API_ST];
   ADDINFO_rec_ptr laddinfo = NULL;
   ADDINFO_rec_ptr addinfo_vec[2] = { NULL, NULL };

   CTSAMSG_HANDLE_rec_ptr msgs;
   CTSAMSG_DEST_TABLE_rec_ptr dest;
   RACF_PARAMS_rec_typ * params_ptr = NULL;               /* IS10002 */
   int             msg_flag;                              /* IS10002 */

  /*
   *   Initialize
   */

   ESA_DIAG_enter(ESA_COMP_DELU2UG, 1, func);
   msgs = admin_params->ctsamsg_handle;
   dest = admin_params->ctsamsg_dest;

  /*
   *   Check that Reserved Keywords were not used
   */

   if (ADDINFO_rkt_check(func,1,&addinfo,rkt,
                         dest, msgs) NE ESA_OK) {
      rc = ESA_FATAL;
      goto exit;
   }

  /*
   *   Check connection existance
   */

   ESA_DIAG_printf(ESA_COMP_DELU2UG, 1,
                  "Checking connection existance (%s/%s)",
                   u2ug_params->group, u2ug_params->user);

   /****************** IS10002 starts *******************/
   params_ptr = admin_params->apiinit_handle;
   if (params_ptr->rssparm_MSG_CONNGRP_ERR[0] == MSG_CONNGRP_ERR_OFF)
        msg_flag = FALSE;
   else msg_flag = TRUE;
   chk_rc = RACF_chk_conn(u2ug_params->user, u2ug_params->group,
                          OBJ_EXIST, msg_flag, dest, msgs,
                          admin_params);

   if ( chk_rc NE ESA_OK )
   {
      if (msg_flag) rc = ESA_FATAL;
      else          rc = ESA_OK;
      goto exit;
   }
   /****************** IS10002  ends *******************/

  /*
   *   Obtain a local addinfo buffer
   */

   if (ADDINFO_alloc(func, 5, &laddinfo, dest, msgs) NE ESA_OK) {
      rc = ESA_FATAL;
      goto exit;
   }

   addinfo_vec[0] = laddinfo;
   addinfo_vec[1] = addinfo;

  /*
   *   Add  reserved keywords to local addinfo
   */

   ESA_DIAG_printf(ESA_COMP_DELU2UG, 1,
                   "Inserting paramters to local addinfo");
   ADDINFO_insert(TYPE_1A, "GROUP", u2ug_params->group, laddinfo,
                  RCF_ADDINFO_KWD_LEN, RCF_ADDINFO_VAL_LEN,
                  UNIQUE);

  /*
   *  REMOVE command
   */

   sprintf(cmd,"REMOVE %s " ,u2ug_params->user);
   ESA_DIAG_printf(ESA_COMP_DELU2UG, 1,
                   "Command header prepared (%s)", cmd);
   rc = racfcmd(func, EXECOUT_DDNAME, admin_params->admin_uname,
                cmd, MAX_OK_RC_0,
                2, addinfo_vec, mkt, kdt,                /* IS10174 */
                admin_params,                            /* IS10174 */
                CMDOUT_YES, RACF_YES);
     /* IS10174 2, addinfo_vec, mkt, kdt, dest, msgs,    */

  /*
   *   Finish
   */
   exit:;

   ADDINFO_free(&laddinfo);

   ESA_DIAG_exit(ESA_COMP_DELU2UG, 1, func, rc);

   return rc;

 }
