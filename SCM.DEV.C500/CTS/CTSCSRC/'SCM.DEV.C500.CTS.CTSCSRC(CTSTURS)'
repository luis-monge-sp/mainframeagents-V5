 /**************************************************************
 *                                                             *
 * Title            : Update a resource (TSS)                  *
 *                                                             *
 * File Name        : ctsturs.c                                *
 *                                                             *
 * Author           : Alexander Shvartsman                     *
 *                                                             *
 * Creation Date    : 19/01/97                                 *
 *                                                             *
 * Description      :                                          *
 *                                                             *
 * Assumptions and                                             *
 *   Considerations :                                          *
 *                                                             *
 **************************************************************/

 /**************************************************************
 * Mod.Id   Who      When     Description                      *
 * -------- -------- -------- -------------------------------- *
 * PS0252   Guy      13/04/98 Common code changes              *
 * WS10082  MauriC   14/11/22 Recompile for new ADDINFO macros *
 **************************************************************/

 /*
  *   Standard include files
  */

 #include   <globs.h>
 #include   STDIO
 #include   STDLIB
 #include   STRING

 /*
  *   ESA include files
  */

 #include   ESA_API
 #include   ESA_DIAG
 #include   ESA_CTSAMSG
 #include   ESA_API_CODES
 #include   API_ADDINFO

 /*
  *   MVS include files
  */

 #include MVS_COMP

 #include MVS_ONLINE_INTERCEPTOR

 #include MVS_OS_MVS

 /*
  *   TSS include files
  */

 #include TSS
 #include TSS_XRES
 #include TSS_CODES

 /**************************************************************
 *                                                             *
 * PROCEDURE NAME : updres                                     *
 *                                                             *
 * DESCRIPTION    : Update a resource                          *
 *                                                             *
 * INPUT          : resource, addinfo, admin                   *
 *                                                             *
 * OUTPUT         : err                                        *
 *                                                             *
 * RETURN VALUE   : ESA_RC                                     *
 *                                                             *
 **************************************************************/

 ESA_RC CTSUpdRes (RES_PARAMS_rec_typ   * res_params,
            /*     ADDINFO_rec_typ      * addinfo_res,    PS0252 */
                   ADDINFO_rec_typ      * addinfo,
                   ADMIN_PARAMS_rec_typ * admin_params,
                   ERR_STRUCT_rec_typ   * err)
 {

  /*
   *    Variables
   */

   ESA_RC                      rc = ESA_OK;
   static char                 func[]="CTSUpdRes";
   TSS_GET_RES_HANDLE_typ    * get_handle = NULL;
   void                      * handle = NULL;
   TSS_RES_ITEM_typ          * res = NULL;
   char                      * res_name = NULL;
   ONE_FIELD_rec_ptr           pair;
   TSS_CMD_BUF_rec_typ         cmd = { 0, 0, "" };
   char                        acid[TSS_USER_NAME_LEN +1]="";
   CTSAMSG_HANDLE_rec_ptr      msgs;
   CTSAMSG_DEST_TABLE_rec_ptr  dest;

  /*
   *   Initialize
   */

   ESA_DIAG_enter(ESA_COMP_UPDRES, 1, func);

   msgs = admin_params->ctsamsg_handle;
   dest = admin_params->ctsamsg_dest;

   if (ESA_DIAG_get_debug_level(ESA_COMP_UPDRES) GE 5) {
       ESA_DIAG_printf(ESA_COMP_UPDRES,0, "addinfo");
       ADDINFO_dump(addinfo,1);
   }

  /*
   * Insure no update will be done for resource type ACID
   */

   if (strcmp(res_params->restype, "ACID") EQ 0) {
      rc = TSS_acid_restype_handling(ESA_COMP_UPDRES,
                                     res_params,
                                     addinfo,
                                     admin_params,
                                     err);
      goto exit;
   }

  /*
   *  Initialize res handle
   */

   rc = TSS_init_res_handle(ESA_COMP_UPDRES, &get_handle, &handle ,
                            admin_params, err );
   if ( rc NE ESA_OK )
     goto exit ;

   rc = TSS_get_res_list(ESA_COMP_UPDRES,
                         TSS_CMD_DEFAULT_MODE,
                         TSS_WHOOWNS_LIST_ONLY,
                         res_params, get_handle,
                         TSS_SAVE_UNIQ_RES_NAME_ONLY,
                         admin_params, err);
   if ( rc NE ESA_OK )
     goto exit;

  /*
   * Update res. Can be updated only OWNER
   * If OWNER not found what caused to send update transaction ?
   */

   pair = ADDINFO_search(TSS_RES_OWNER, TSS_ADDINFO_KWD_LEN,
                         addinfo->pair,addinfo->num_pairs);
   if ( pair EQ NULL )  { /* Resource does not have the owner */
     CTSAMSG_print(ERR_ADI_MANDATORY_MISS ,msgs, NULL, dest,
                   TSS_RES_OWNER);
     rc = ESA_FATAL;
     goto exit;
   }

   /*  Create command header */

   sprintf(cmd.buffer, "ADD(%s) %s(%s) ",
           pair->value,
           TSS_convert_restype(res_params->restype),
           res_params->resource);
   strcpy(acid, pair->value);

  /*
   *  Select resource
   */

   rc = TSS_select_res(ESA_COMP_UPDRES, get_handle, res_params,
                       &res, &res_name);

   ESA_DIAG_printf(ESA_COMP_UPDRES, 1,
                   "rc=%d res ptr=%x res_name ptr=%x",
                   rc, res, res_name );

   if ( rc EQ ESA_ERR ) {         /* Res not found */
     rc = ESA_OK;
     pair = ADDINFO_search("UNDERCUT",
                           TSS_ADDINFO_KWD_LEN,
                           addinfo->pair, addinfo->num_pairs);
     if ( pair NE NULL ) {
       if ( strcmp(pair->value, KWD_FLAG_ON ) EQ 0 )
         strcat(cmd.buffer, " UNDERCUT");
     }
   }
   else   /* Res found. change owner */
       strcat(cmd.buffer, " UNDERCUT");

   ESA_DIAG_printf(ESA_COMP_UPDRES, 1,"cmd.buffer=%s", cmd.buffer);

   cmd.max_len = strlen(cmd.buffer);
   cmd.use_len = strlen(cmd.buffer);

   rc = TSS_issue_cmd(ESA_COMP_UPDRES, &cmd,
                      acid, TYPE_IGNORE, /* UNKNOWN */
                      TSS_EVNT_ACTION_UPDATE, admin_params);
  /*
   *   Finish
   */

   exit:;

   if ( handle NE NULL )
      TSS_free_res_handle(ESA_COMP_UPDRES , &handle, dest, msgs);

   ESA_DIAG_exit(ESA_COMP_UPDRES, 1, func, rc );

   return rc;

 }

