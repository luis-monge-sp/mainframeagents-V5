/**************************************************************
*                                                             *
* Title            : Del oe information (TSS)                 *
*                                                             *
* File Name        : ctstdoe.c                                *
*                                                             *
* Author           : Alexander Shvartsman                     *
*                                                             *
* Creation Date    : 19/01/97                                 *
*                                                             *
* Description      :                                          *
*                                                             *
* Assumptions and                                             *
*   Considerations :                                          *
*                                                             *
**************************************************************/
/**************************************************************
* Mod.Id   Who      When     Description                      *
* -------- -------- -------  -------------------------------- *
**************************************************************/

 /*
  *   Standard include files
  */

 #include   <globs.h>
 #include   STDIO
 #include   STDLIB
 #include   STRING

 /*
  *   ESA include files
  */

 #include   ESA_API
 #include   ESA_DIAG
 #include   ESA_CTSAMSG
 #include   ESA_API_CODES
 #include   API_ADDINFO

 #include MVS_ONLINE_INTERCEPTOR


 /*
  *   TSS include files
  */

 #include TSS
 #include TSS_CODES

 static char component[] = "CTSTDUS";

/****************************************************
 * Procedure Name: CTSDelOE
 * Description   : Delete container
 * Input         : container, addinfo_data, admin_params.
 * Output        : None
 * Input/Output  : None
 * Return Value  : ESA_RC
 ***************************************************/

 ESA_RC CTSDelOE (OE_PARAMS_rec_typ    * oe_params,
                  ADDINFO_rec_typ      * addinfo_data,
                  ADMIN_PARAMS_rec_typ * admin_params,
                  ERR_STRUCT_rec_typ   * err)


{

   static char                   func[]="CTSDelOE";

  /*
   *     Variables
   */

   ESA_RC                        rc = ESA_OK;
   CTSAMSG_HANDLE_rec_typ      * msgs;
   CTSAMSG_DEST_TABLE_rec_typ  * dest;
   TSS_CMD_BUF_rec_typ           cmd = { 0, 0, "" };

   /*** For TSS_chk_acid ***/

   char                          real_acid_type[TSS_ACID_TYPE_LEN+1]="";
   OBJECT_TYPE_typ               real_obj_type = TYPE_IGNORE;


  /*
   *   Initialize
   */

   ESA_DIAG_enter(ESA_COMP_DELOE, 1, func);

   msgs = admin_params->ctsamsg_handle;
   dest = admin_params->ctsamsg_dest;

  /*
   *  Check user existance
   */

   rc = TSS_chk_acid(ESA_COMP_DELOE, oe_params->oe,
                     TSS_CONTAINER, TYPE_CONTAINER,
                     OBJ_EXIST, TRUE, real_acid_type, &real_obj_type,
                     admin_params, err);
   if (rc NE ESA_OK)
      goto exit;

  /*
   *  Create command
   */

   sprintf(cmd.buffer, "DELETE(%s) ", oe_params->oe);

   cmd.max_len = strlen(cmd.buffer);
   cmd.use_len = strlen(cmd.buffer);

   rc = TSS_issue_cmd(ESA_COMP_DELOE, &cmd,
                      oe_params->oe, TYPE_CONTAINER,
                      TSS_EVNT_ACTION_DELETE, admin_params);

  /*
   *   Finish
   */

   exit:;

   ESA_DIAG_exit(ESA_COMP_DELOE, 1, func, rc);
   return rc;

}
