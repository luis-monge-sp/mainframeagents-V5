 /**************************************************************
 *                                                             *
 * Title            : Revoke Reason Handling                   *
 *                                                             *
 * File Name        : ctsrrvr.c                                *
 *                                                             *
 * Author           : Nurit Yahalom                            *
 *                                                             *
 * Creation Date    : 29/09/13                                 *
 *                                                             *
 * Description      : Handle Revoke Reason.                    *
 *                                                             *
 * Assumptions and                                             *
 *   Considerations :                                          *
 *                                                             *
 **************************************************************/

 /**************************************************************
 * Mod.Id   Who      When     Description                      *
 * -------- -------- -------  -------------------------------- *
 * IS10100  NuritY   29/09/13 Initial version.                 *
 * WS10043  NuritY   06/01/14 Enhance locked accounts support  *
 *                            to display the revoke reason.    *
 * SAS2IBMT SeligT   09/10/16 SAS/C to IBM C Conversion Project*
 * SAS2IBMN NuritY   05/02/17 SAS/C to IBM C Conversion Project*
 * IS10182  AvnerL   17/07/19  S0C4/S0C1 due to DIAG vsprintf  *
 ***************************************************************/

 #include <globs.h>

 #include ESA_API
 #include ESA_DIAG

 #include MVS_OS_MVS

 #include RACF
 #include RACF_CODES

 #include   ESA_API_CODES
 #include   STDIO
 #include   STDLIB
 #include   STRING

 #define REVOKE_REASON_STR  "Revoke Reason"
/*
 *  Revoke Reason handling routine
 */
/* SAS2IBMT prototype changed for IBM C
extern int ctsfrvr(char *user,            // (I) userid              //
                   char *action,          // (I) action (U / R)      //
                   char *action_type,     // (I) action type (V / S) //
                   char *revoke_reason,   // (I) revoke reason,      //
                   char *cf_name,         // (I) custom field name   //
                   int  *debug_level,     // (I) debug level         //
                   char *update_done,     // (O) update done (S/D)   //
                   char *reason_set);     // (O) revoke reason set   */
extern int ctsfrvr();                                     /* SAS2IBMT */

/********************************************************************
 *
 * Procedure Name : RACF_Update_Revoke_Reason
 *
 * Description    : Set or remove the revoke reason and issue the
 *                  appropriate message.
 *
 * Input          : admin
 *
 * Input/Output   : user - userid
 *                : action - U(pdate) / R(evoke)
 *                : action_type - V(reVoke) / S(dreSume)
 *                : revoke_reason - revoke reason
 *                : cf_name - name of the custom field used to
 *                            hold the revoke reason.
 *
 * Return Value   : ESA_RC:
 *                  - ESA_OK - OK
 *                  - ESA_FATAL - error.
 *
 *
 * Side Effects   :
 *
 ********************************************************************/

 ESA_RC RACF_Update_Revoke_Reason(ESA_DIAG_COMP_typ      comp,
                                  char                  *user,
                                  char                   action,
                                  char                   update_type,
                                  char                   revoke_reason,
                                  char                  *cf_name,
                                  ADMIN_PARAMS_rec_typ  *admin_params)
{

  char          func[] = "RACF_Update_Revoke_Reason";
  ESA_RC        rc = ESA_OK ;
  CTSAMSG_HANDLE_rec_typ     * msgs;
  CTSAMSG_DEST_TABLE_rec_typ * dest;

  char        update_done;
  char        reason_set;
  char        reason_name[15];                           /* SAS2IBMN */
  int         frvr_rc;
  int         debug_level;
  /* WS10043 char     revoke_reason_name[20];                     */
  char        jobname[9];
  char        jobid[9];                 /* For OS_MVS_whoami      */
  char        userid[9];                /* For OS_MVS_whoami      */
  char        sysid[5];                 /* For OS_MVS_whoami      */
  void       *acee;                     /* For OS_MVS_whoami      */

  /*
   *  Initialization
   */
  admin_params->cs_func.DIAG_enter_ptr(comp, 1, func);

  msgs = admin_params->ctsamsg_handle;
  dest = admin_params->ctsamsg_dest;

  debug_level = admin_params->cs_func.DIAG_get_debug_level_ptr(comp);

  /*IS10182 admin_params->cs_func.DIAG_printf_ptr(comp, 5,*/
  ESA_DIAG_printf(comp, 5,                            /*IS10182*/
                "input: user=%s  action=%.1s/%.1s/%.1s  cf_name=%s",
                 user, &action, &update_type, &revoke_reason,
                 cf_name);

  OS_MVS_whoami(jobname, jobid, userid, sysid, &acee); /* get jobname
                                                          of ONI/OFI  */

  /*  Update revoke reason of the user
   *
   *  The routine returns:
   *    rc: 0 - OK
   *        4 - Error in parameters.
   *        8 - Error in RACF call or output.
   *    update_done - when return code is 0.
   *                  S - revoke reason was set.
   *                  D - revoke reason was deleted.
   *    reason_set - update_done is S:
   *                 The revoke reason set in the user recors.
   */
  /* SAS2IBMT
  frvr_rc = ctsfrvr(user,                // (I) - userid         */
  frvr_rc = (*(ASM_RTN_TYP *)&ctsfrvr)                    /* SAS2IBMT */
                   (user,                /* (I) - userid         */
                    &action,             /* (I) - action         */
                    &update_type,        /* (I) - R / U          */
                    &revoke_reason,      /* (I) - revoke reason  */
                    cf_name,             /* (I) - custom field   */
                    &debug_level,        /* (I) - debug level    */
                    &update_done,        /* (O) - update type    */
                    &reason_set);        /* (O) - revoke reason  */

  /*IS10182 admin_params->cs_func.DIAG_printf_ptr(comp, 5,*/
  ESA_DIAG_printf(comp, 5,                           /*IS10182*/
                "ctsfrvr returned:  rc=%d    update_done=%.1s/%.1s",
                 frvr_rc, &update_done, &reason_set);

  /*
   *   Issue message and set return code according to
   *   CTSFRVR return code and returned data.
   */
  if (frvr_rc EQ 0)
  {
    switch (update_done)
    {
      case 'S':                     /* Set                          */
        rc = ESA_OK;
        /* WS10043 - start */
        /*
        switch (reason_set)
        {
          case 'C':
            strcpy(revoke_reason_name, "COMMAND");
            break;
          case 'I':
            strcpy(revoke_reason_name, "INACTIVITY");
            break;
          case 'P':
            strcpy(revoke_reason_name, "PASSWORD");
            break;
          case 'D':
            strcpy(revoke_reason_name, "DATE");
            break;
          case '?':
            strcpy(revoke_reason_name, "UNKNOWN");
            break;
          default:
            revoke_reason_name[0] = NULL_CHAR;
            break;
        }
        admin_params->cs_func.MSG_printf_ptr (RACF_RVKRSN_UPDATE,
                         user, jobname, REVOKE_REASON_STR,
                         &reason_set, revoke_reason_name);   */
        /* SAS2IBMN - start */
        /*
        admin_params->cs_func.MSG_printf_ptr (RACF_RVKRSN_UPDATE,
                user, jobname, REVOKE_REASON_STR, &reason_set,
                RACF_Revoke_Reason_Code2Name(reason_set) );
        */
        RACF_Revoke_Reason_Code2Name(reason_set, reason_name);
        CTSAMSG_print(RACF_RVKRSN_UPDATE, msgs, NULL, dest,
                user, jobname, REVOKE_REASON_STR, &reason_set,
                reason_name);
        /* SAS2IBMN - end   */
        /* WS10043 - end */
        break;
      case 'D':                     /* Delete                       */
        rc = ESA_OK;
        /* SAS2IBMN
        admin_params->cs_func.MSG_printf_ptr (RACF_RVKRSN_DELETE,  */
        CTSAMSG_print(RACF_RVKRSN_DELETE, msgs, NULL, dest, /*SAS2IBMN*/
                         user, jobname, REVOKE_REASON_STR); /*SAS2IBMN*/
        break;
      case ' ':                     /* Nothing was done.            */
        rc = ESA_OK;
        break;
      default:
        rc = ESA_FATAL;
        break;
    }
  }
  else
    rc = ESA_FATAL;

  if (rc EQ ESA_FATAL)
  {
    /*IS10182 admin_params->cs_func.DIAG_printf_ptr(comp, 0,*/
    ESA_DIAG_printf(comp, 0,                          /*IS10182*/
                  "ctsfrvr returned:  rc=%d    update_done=%.1s/%.1s",
                  frvr_rc, &update_done, &reason_set);
    /* SAS2IBMN
    admin_params->cs_func.MSG_printf_ptr (RACF_RVKRSN_ERROR,  */
    CTSAMSG_print(RACF_RVKRSN_ERROR, msgs, NULL, dest,  /* SAS2IBMN */
                                     jobname, REVOKE_REASON_STR, user);
  }

  admin_params->cs_func.DIAG_exit_ptr(comp, 1, func, rc);
  return rc;

}  /* RACF_Update_Revoke_Reason  */

 /*  WS10043 - start */
/********************************************************************
 *
 * Procedure Name : RACF_Revoke_Reason_Code2Name
 *
 * Description    : Get the revoke reason name according to the
 *                  revoke reason code.
 *
 * Input          : code - 1 character revoke reason code.
 *
 * Return Value   : revoke reason name. Length: up to 20 characters.
 *
 * Side Effects   :
 *
 ********************************************************************/
/* SAS2IBMN char *  RACF_Revoke_Reason_Code2Name(char   code)  */
void    RACF_Revoke_Reason_Code2Name(char   code,        /* SAS2IBMN */
                                     char  *name)        /* SAS2IBMN */
{

  /* SAS2IBMN char   name[21];  */

  /*
   *  Initialization
   */

  switch (code)
  {
    case 'C':
      strcpy(name, "COMMAND");
      break;
    case 'I':
      strcpy(name, "INACTIVITY");
      break;
    case 'P':
      strcpy(name, "PASSWORD");
      break;
    case 'D':
      strcpy(name, "DATE");
      break;
    case '?':
      strcpy(name, "UNKNOWN");
      break;
    default:
      name[0] = NULL_CHAR;
      break;
  }

  /* SAS2IBMN return name;  */
  return;                                                /* SAS2IBMN */
}
 /*  WS10043 - end */
