 /**************************************************************
 * Mod.Id   Who      When     Description                      *
 * -------- -------- -------- -------------------------------- *
 * IS10161  MeirS    09/11/17 remove calling to CTSRVRS rtns   *
 * IS10184  NuritY   29/12/21 change to static.                *
 **************************************************************/

 #include   <globs.h>
 static char component[]="CTSRVRS";
 /* IS10184 void RACF_version_search()   */
 static void RACF_version_search()                        /* IS10184 */
 {
  static char func[]="this is an obsolete source module";
  return;
 }
/*                                                            *
/@*************************************************************
*                                                             *
* Title            : RACF Version programms                   *
*                                                             *
* File Name        : ctsrvrs.c                                *
*                                                             *
* Author           : A.Shvartsman                             *
*                                                             *
* Creation Date    : 11/06/95                                 *
*                                                             *
* Description      :                                          *
*                                                             *
* Assumptions and                                             *
*   Considerations :                                          *
*                                                             *
*************************************************************@/

/@*************************************************************
* Mod.Id   Who      When     Description                      *
* -------- -------- -------  -------------------------------- *
* WS2004   AS       13/05/97 RACF override version support    *
* ps0163   AS       28/07/97 RACF security server support     *
* ps0173   AS       04/08/97 Removed rss_type match RACF      *
*                            version checking                 *
* PS0300   AS       18/08/98 EXPIRED/NOEXPIRED KEYWORD SUPPORT*
*                            FOR RACF26                       *
* PS0379   GS       04/04/99 Changed default version to 2.5   *
* PS0389   YB       11/10/99 Support RACF 2.8 (treat as 2.6)  *
* PS0491   SK       18/11/01 Support RACF_version_at_least    *
* PS0499   SK       07/03/02 Support RACF for z/OS 1.3 RACFZ13*
* PS0511   SK       24/06/02 Support RACF for z/OS 1.4 RACFZ14*
* WS2532   AmirH    12/05/04 Support RACF for z/OS 1.5 RACFZ15*
* IS0272   Michael 10/06/04  Update RACF 3.2.0 with old fixes *
* IS0263   AvnerL   05/08/04 Fix RACF_version_get function.   *
*                        Add Support for RACF z/OS 1.6 RACFZ16*
* IS0283   AvnerL   24/08/04 Get diag from diag_lvl.          *
* IS0322   AvnerL   03/08/04 Support z/OS 1.7.                *
* IS0369   AvnerL   06/09/06 Support z/OS 1.8.                *
* WS10014  MeirS    11/11/07 RACF z/os 1.9 Support            *
* WS10018  AvnerL   07/07/08 RACF z/os 1.10 Support           *
* IS10061  AvnerL   12/09/11 Support zOS 1.11,1.12,1.13       *
* IS10070  AvnerL   07/02/11 Update RACF versions supported   *
* IS10080  AvnerL   24/01/13 Support zOS 2.1                  *
* IS10132  AvnerL   11/06/15 Support zOS 2.2                  *
* IS10134  AvnerL   14/06/15 Update support in zOS 2.2        *
* SAS2IBMT SeligT   09/10/16 SAS/C to IBM C Conversion Project*
* BS10053  AvnerL   27/10/16 Support zOS 2.2 with OA47956     *
*                            (Copied by Nurit from 3.3)       *
*************************************************************@/

#include   <globs.h>

/@
 *   Standard include files
 @/

#include   STDIO
#include   STDLIB
#include   STRING

/@
 *   CONTROL-SA include files
 @/

#include ESA_DIAG
#include ESA_CTSAMSG
#include MVS_COMP
#include RACF
#include RACF_CODES
**************************************************************

static char comp[]="CTSRVRS";

/@*************************************************************
 PS0491  move ctsfver  definition outside other local procs  @/
  /@ SAS2IBMT prototype changed for IBM C
  extern ESA_RC ctsfver(int         *debug_level,
                        char        *racf_real_nm_version);          @/
  extern ESA_RC ctsfver();                                /@ SAS2IBMT @/

/@*************************************************************
*PS0491                                                       *
*                                                             *
* PROCEDURE NAME : RACF_version_search (no EXTERNAL exposure) *
*                                                             *
* DESCRIPTION    : Search a RACF version in versions list     *
*                                                             *
* INPUT          : version                                    *
*                                                             *
* RETURN VALUE   : position in versions list                  *
*                                                             *
*************************************************************@/
static int        RACF_version_search( char       *version)
{
                       /@ reset versions per their order - IS10134 @/
static char *RACF_version[] = {/@RACF190, *** drop support for old
                                 RACF192, *** OS/390 versions
                                 RACF21,
                                 RACF22,
                                 RACF23,
                                 RACF24,
                                 RACF26,
                                 RACF28,   ** IS10061 **
                                 RACF210,  ** IS10070 **
                                 RACFZ12,
                                 RACFZ13,  ** IS10134 *@/
                                 RACFZ14,
                                 RACFZ15,   /@ WS2532 @/
                                 RACFZ16,   /@ is0263 @/
                                 RACFZ17,   /@ is0322 @/
                                 RACFZ18,   /@ is0369 @/
                                 RACFZ19,   /@ ws10018@/
                                 RACFZ10,   /@ ws10018@/
                                 RACFZ111,  /@ ws10061@/
                                 RACFZ112,  /@ ws10061@/
                                 RACFZ113,  /@ IS10061@/
                                 RACFZ21,   /@ IS10080 @/
                                 RACFZ22,   /@ IS10132 @/
                                 RACFZ22A,  /@ BS10053 @/
                                 NULL } ;   /@ last must be null @/
int i, RACF_version_index = 0;
for (i=0;RACF_version[i] NE NULL;i++) {
    if (strcmp(RACF_version[i],version) EQ 0)
       {RACF_version_index = i; break;}   }
return(RACF_version_index);
}
/@*************************************************************
*PS0491                                                       *
*                                                             *
* PROCEDURE NAME : RACF_version_at_least                      *
*                                                             *
* DESCRIPTION    : Determine if current version is at least   *
*                  input version                              *
*                                                             *
* INPUT          : version                                    *
*                                                             *
* OUTPUT         : YES if at current version is at least      *
*                  input version, otherwise NO                *
*                                                             *
************************* IS0322 ******************************
* Change the default returned value of routine from RACF_NO   *
* to RACF_YES. (from 0 to 1).                                 *
* Reason for change:                                          *
* The 2 existing calls to this routine are with RACF26&RACFZ12*
* RACF26 is a very old OS and is not supported by agent 3.2.01*
* RACFZ12 check is done for the UNIVERSAL GROUP feature.      *
*   If OS checked is not in the list, the only relevant       *
*   possibility is it's a new version and UNIVERSAL feature   *
*   is supported with this new OS.                            *
*************************************************************@/
ESA_RC RACF_version_at_least( char *version,
                              RACF_FLAG_typ* at_least)
{
  static char fn[]="RACF_version_at_least";
  ESA_RC rc = ESA_OK;                           /@ is0322 rc type @/
  int current_version_index = 0;
  int version_index = 0;
  int debug_level=0;
  char current_version[]=
       {NULL_CHAR, NULL_CHAR, NULL_CHAR, NULL_CHAR, NULL_CHAR, NULL_CHAR};

  ESA_DIAG_enter(ESA_COMP_RSS_CHECK, 1, fn);
  debug_level = ESA_DIAG_get_debug_level(ESA_COMP_RSS_CHECK); /@IS0283@/
  /@ SAS2IBMT
  rc=ctsfver(&debug_level,              // Input   debug level     @/
  rc=(*(ASM_RTN_TYP *)&ctsfver)                           /@ SAS2IBMT @/
            (&debug_level,              /@ Input   debug level     @/
             current_version );         /@ Output  real vers name  @/
  if ( rc NE 0 ) {
     rc = ESA_FATAL;
     goto exit;
  }
  ESA_DIAG_printf(ESA_COMP_RSS_CHECK , 5, /@ chg level to 6 IS0283 @/
     "current RACFver =%s param RACFver = %s",
      current_version, version);

  /@ chk whether version is supported (in the list) @/
  current_version_index = RACF_version_search(current_version);
  if ( current_version_index EQ 0 ) {
     /@ RACF version is not in the list of supported os - IS0322@/
     /@ IS0322 rc = ESA_FATAL; return ESA_OK even if it's not in list@/
     *at_least = RACF_YES; /@ IS0322 assume it's z/OS 1.2+ @/
     goto exit;
  }

  version_index = RACF_version_search(version);
  if ( version_index EQ 0 ) {
     /@ RACFZ12/RACF26 not in the list of supported os-can't be IS0322@/
     /@ IS0322 rc = ESA_FATAL; return ESA_OK even if it's not in list@/
     *at_least = RACF_YES; /@ IS0322 assume it's z/OS 1.2+ @/
     goto exit;
  }

  ESA_DIAG_printf(ESA_COMP_RSS_CHECK , 5,
     "index current RACFver =%d index param RACFver = %d",
      current_version_index, version_index);

  /@ if current_verion GE RACFZ12/RACF26,
       then at_least = RACF_YES (1)                          IS0322@/
  *at_least = (current_version_index GE version_index);
  rc = ESA_OK;
  exit:
    ESA_DIAG_exit(ESA_COMP_RSS_CHECK,1, fn, rc);
    return(rc);
}

/@*************************************************************
*                                                             *
* PROCEDURE NAME : RACF_version_get                           *
*                                                             *
* DESCRIPTION    : Retrive a RACF version/release             *
*                                                             *
* INPUT          : none                                       *
*                                                             *
* OUTPUT         : rss_type & racf version                    *
*                                                             *
* RETURN VALUE   : ESA_OK,  ESA_FATAL                         *
*                                                             *
*************************************************************@/

ESA_RC RACF_version_get( char       *rss_type_used, /@is0263@/
                         char       *version)

{
 /@
  *   Variables
  @/

  ESA_RC      rc = ESA_OK;
  int         arc ;

 /@
  *   Assembler module. Get RACF version/release
  @/

  int    debug_level=0;            /@ debug level       @/

  char   racf_real_nm_version[50];  /@ real version name @/

 /@
  *   Obtain RACF version
  @/

  debug_level = ESA_DIAG_get_debug_level(ESA_COMP_RSS_CHECK);/@IS0283@/
  /@ SAS2IBMT
  arc=ctsfver(&debug_level,           // Input   debug level     @/
  arc=(*(ASM_RTN_TYP *)&ctsfver)                          /@ SAS2IBMT @/
             (&debug_level,           /@ Input   debug level     @/
              racf_real_nm_version);  /@ Outp    real vers name  @/

  if ( arc NE 0 ) {
     rc = ESA_FATAL;
     goto exit;
  }

  racf_real_nm_version[4]=NULL_CHAR;  /@ real version name @/
  /@ is0263 return racf real version below, to be set in message @/
  strcpy( version, racf_real_nm_version); /@is0263@/
  /@ IS10061 drop old os/390 versions & change order-latest is 1st
  if ( memcmp( racf_real_nm_version, "109" , 3 ) EQ 0)
    strcpy( rss_type_used, RACF19_RSS_TYPE );
  else  if ( memcmp( racf_real_nm_version, "201" , 3 ) EQ 0)
    strcpy( rss_type_used, RACF21_RSS_TYPE );
  else  if ( memcmp( racf_real_nm_version, "202" , 3 ) EQ 0)
    strcpy( rss_type_used, RACF22_RSS_TYPE );
  else  if ( memcmp( racf_real_nm_version, "203" , 3 ) EQ 0)  *ps0163*
    strcpy( rss_type_used, RACF23_RSS_TYPE );                 *ps0163*
  else  if ( memcmp( racf_real_nm_version, "204" , 3 ) EQ 0)  *ps0163*
    strcpy( rss_type_used, RACF24_RSS_TYPE );                 *ps0163*
  else  if ( memcmp( racf_real_nm_version, "205" , 3 ) EQ 0)  *ps0300*
    strcpy( rss_type_used, RACF25_RSS_TYPE );                 *ps0300*
  else  if ( memcmp( racf_real_nm_version, "206" , 3 ) EQ 0)  *ps0300*
    strcpy( rss_type_used, RACF26_RSS_TYPE );                 *ps0300*
  else  if ( memcmp( racf_real_nm_version, "2608" ,4 ) EQ 0)  *ps0389*
    strcpy( rss_type_used, RACF26_RSS_TYPE ); *ps0389* IS10061@/
  /@ is0263 starts - add all latest racf versions, including Z16
   *                 and set rss_type as RACF (not RACF26)           @/
  if ( memcmp( racf_real_nm_version, "7780" ,4 ) EQ 0) /@1.13 IS10061@/
    strcpy( rss_type_used, RACF_RSS_TYPE ); /@ zOS 1.13 IS10061 @/
  else  if ( memcmp( racf_real_nm_version,"7790" ,4 ) EQ 0) /@IS10080 @/
    strcpy( rss_type_used, RACF_RSS_TYPE );       /@zOS 2.1  *IS10080 @/
  else  if ( memcmp( racf_real_nm_version,"77A0" ,4 ) EQ 0) /@IS10132 @/
    strcpy( rss_type_used, RACF_RSS_TYPE );       /@zOS 2.2  *IS10132 @/
  else  if ( memcmp( racf_real_nm_version,"7791" ,4 ) EQ 0) /@BS10053 @/
    strcpy( rss_type_used, RACF_RSS_TYPE );       /@zOS 2.2  *BS10053 @/
  else if ( memcmp( racf_real_nm_version, "7770" ,4 ) EQ 0) /@1.12@/
    strcpy( rss_type_used, RACF_RSS_TYPE ); /@ zOS 1.12 IS10061 @/
  else if ( memcmp( racf_real_nm_version, "7760" ,4 ) EQ 0) /@1.11@/
    strcpy( rss_type_used, RACF_RSS_TYPE ); /@ zOS 1.11 IS10061 @/
  /@ drop more old RACF versions                        IS10070
  else if ( memcmp( racf_real_nm_version, "7703" ,4 ) EQ 0)  *2.10*
    strcpy( rss_type_used, RACF_RSS_TYPE );  * os/390 2.10 (last os390)*
  else  if ( memcmp( racf_real_nm_version, "7705" ,4 ) EQ 0)  *Z12*
    strcpy( rss_type_used, RACF_RSS_TYPE );
  else  if ( memcmp( racf_real_nm_version, "7706" ,4 ) EQ 0)  *Z13*
    strcpy( rss_type_used, RACF_RSS_TYPE ); end of IS10070 *******@/
  else  if ( memcmp( racf_real_nm_version, "7707" ,4 ) EQ 0) /@Z14@/
    strcpy( rss_type_used, RACF_RSS_TYPE );
  else  if ( memcmp( racf_real_nm_version, "7708" ,4 ) EQ 0) /@Z15@/
    strcpy( rss_type_used, RACF_RSS_TYPE );
  else  if ( memcmp( racf_real_nm_version, "7709" ,4 ) EQ 0) /@Z16@/
    strcpy( rss_type_used, RACF_RSS_TYPE );                /@ps0389@/
  else  if ( memcmp( racf_real_nm_version, "7720" ,4 ) EQ 0) /@Z17@/
    strcpy( rss_type_used, RACF_RSS_TYPE );                 /@IS0322@/
  else  if ( memcmp( racf_real_nm_version, "7730" ,4 ) EQ 0) /@Z18@/
    strcpy( rss_type_used, RACF_RSS_TYPE );                 /@IS0369@/
  else  if ( memcmp( racf_real_nm_version,                  /@WS10014@/
                    "7740" ,4 ) EQ 0)           /@Z19@/     /@WS10014@/
    strcpy( rss_type_used, RACF_RSS_TYPE );                 /@WS10014@/
  else  if ( memcmp( racf_real_nm_version,                  /@WS10018@/
                    "7750" ,4 ) EQ 0)           /@Z1.10@/   /@WS10018@/
    strcpy( rss_type_used, RACF_RSS_TYPE );                 /@WS10018@/
  /@ is0263 main part ends. 1 more change below.                   @/
  else {
    /@ rc = ESA_FATAL;                     Removed by ps0163 @/
    /@ strcpy( version, RACF19_RSS_TYPE ); Removed by ps0163 @/
    rc = ESA_ERR;                      /@  Added   by ps0163 @/
    /@ strcpy( version, RACF25_RSS_TYPE );                   PS0379 @/
    /@is0263 strcpy( version, RACF26_RSS_TYPE );     * PS0389 @/
    strcpy( rss_type_used, RACF_RSS_TYPE );             /@ is0263 @/
  }

  exit:;

  return rc;

}

/@*********** Drop RACF_version_check routine by is0263 *******
*                                                             *
* PROCEDURE NAME : RACF_version_check                         *
*                                                             *
* DESCRIPTION    : Check   a RACF version/release             *
*                                                             *
* INPUT          : rss_type                                   *
*                  dest                                       *
*                  msgs                                       *
*                                                             *
* OUTPUT         : none                                       *
*                                                             *
* RETURN VALUE   : ESA_OK,  ESA_FATAL                         *
*                                                             *
*************************************************************@/
/@
ESA_RC RACF_version_check(RSS_typ                      rss_type,
                          CTSAMSG_DEST_TABLE_rec_typ * dest,
                          CTSAMSG_HANDLE_rec_typ     * msgs)
{

 /@
  *   Variables
  *

  static char fn[]="RACF_version_check";
  char   racf_version[5];  /@ real version name *
  char   rss_type_used[9];  /@ is0263 - used rss type *
  ESA_RC      rc; /@= ESA_OK; PS0491*

 /@
  *   Initialize
  *

  ESA_DIAG_enter(ESA_COMP_RSS_CHECK, 1, fn);

 /@
  *     Check version release
  *

  rc = RACF_version_get( rss_type_used,   /@ is0263 add 2nd parm *
                         racf_version );
  /@ if ( rc NE ESA_OK ) {                 Removed by ps0163 *
  if ( rc EQ ESA_FATAL ) {             /@  Added   by ps0163 *
     CTSAMSG_print(RACF_NOT_ACTIVE,msgs, NULL, dest);
     rc = ESA_FATAL;
     goto exit;
  }

  ESA_DIAG_printf(ESA_COMP_RSS_CHECK , 1, /@is0263 add parm to diag*
                 "rss_type =%s racf_version=%s rss_type_used=%s",
                  rss_type, racf_version,rss_type_used);

 /@
  *   Compare obtained rss_type and current running RACF version
  @/

  /@
   *  Deleted by  WS2004
   *    if ( strcmp(rss_type, racf_version) NE 0 ) {
   @/

  /@
   * Removed by ps0173
   * if ( strcmp(rss_type, racf_version) GT 0 ) {      /. ws2004 ./
   *   CTSAMSG_print(RACF_VERSION_ERR, msgs, NULL, dest, rss_type,
   *                 racf_version );
   *   rc = ESA_FATAL;
   * }
   @/

 /@
  *       Finish
  *

  exit:;

  ESA_DIAG_exit(ESA_COMP_RSS_CHECK,1, fn, rc);
  return rc;

}
 * end of is0263 which drops RACF_version_check routine @/
*/
