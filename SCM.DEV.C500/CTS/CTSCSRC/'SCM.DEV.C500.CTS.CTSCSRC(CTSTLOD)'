 /**************************************************************
 *                                                             *
 * Title            : Return TSS  api function pointers        *
 *                                                             *
 * File Name        : ctstlod.c                                *
 *                                                             *
 * Author           : Alexander Shvartsman                     *
 *                                                             *
 * Creation Date    : 15/01/97                                 *
 *                                                             *
 * Description      :                                          *
 *                                                             *
 * Assumptions and                                             *
 *   Considerations :                                          *
 *                                                             *
 **************************************************************/

 /**************************************************************
 * Mod.Id   Who      When     Description                      *
 * -------- -------- -------- -------------------------------- *
 * PS0295   Guy      12/08/98 Common code changes for 3.0.0 GA *
 * ps0310   Alex     09/09/98 Common Offline interceptor supp  *
 * ws2380   Yoni     15/02/01 CTSversion added                 *
 * SAS2IBMT SeligT   12/07/16 SAS/C to IBM C Conversion Project*
 * SAS2IBMA AvnerL   18/07/16 SAS/C to IBM C                   *
 **************************************************************/

 #include   <globs.h>

 /*
  *   Standard include files
  */

 #include   STDIO
 #include   STDLIB
 #include   STRING
 /* #include   DYNAM                                         SAS2IBMT */

 #include   ESA_API
 #include   ESA_CTSAMSG
 #include   ESA_API_CODES

 static char func[] = "CTSAPILoad";

 /****************************************************
 * Procedure Name: apiload
 * Description   : Main api racf routine
 * Input         : ptr to api_functions
 * Output        : none
 * Input/Output  :
 * Return Value  : ESA_OK
 * Side Effects  :
 *
 * Comments      :
 *
 ****************************************************/

 /* SAS2IBMT ESA_RC _dynamn (RSS_typ               rss_name,         */
 ESA_RC initrptr (RSS_typ                rss_name,        /* SAS2IBMT */
                  FUNC_PTR_rec_typ     * func_ptr ,
                  RSS_LIMITS_rec_typ   * rss_limits_ptr,
                  ADMIN_PARAMS_rec_typ * admin_params,
                  ERR_STRUCT_rec_typ   * err)
 {


  /*
   *   Variables
   */

   ESA_RC rc = ESA_OK ;
   CTSAMSG_HANDLE_rec_typ     * msgs;
   CTSAMSG_DEST_TABLE_rec_typ * dest;
   /* SAS2IBMA typedef __local void (*LOCAL_FUNC_PTR_typ)(); */
   typedef void (*LOCAL_FUNC_PTR_typ)(); /*SAS2IBMA*/

  /*
   *  Initialize
   */

   msgs = admin_params->ctsamsg_handle;
   dest = admin_params->ctsamsg_dest;

  /*
   *  Create API functions addresses structure
   */

   func_ptr->apiinit_ptr       = &CTSAPIInit;
   func_ptr->apiterm_ptr       = &CTSAPITerm;
   func_ptr->strsprm_ptr       = &CTSSetRSSParams;
   func_ptr->adduser_ptr       = &CTSAddUser;
   func_ptr->upduser_ptr       = &CTSUpdUser;
   func_ptr->deluser_ptr       = &CTSDelUser;
   func_ptr->revuser_ptr       = &CTSRevokeUser;
   func_ptr->updpass_ptr       = &CTSUpdPassword;
   func_ptr->addug_ptr         = &CTSAddUG;
   func_ptr->updug_ptr         = &CTSUpdUG;
   func_ptr->delug_ptr         = &CTSDelUG;
   func_ptr->addu2ug_ptr       = &CTSAddUserToUG;
   func_ptr->updu2ug_ptr       = &CTSUpdUserToUG;
   func_ptr->delu2ug_ptr       = &CTSDelUserFromUG;
   func_ptr->addace_ptr        = &CTSAddACE;
   func_ptr->delace_ptr        = &CTSDelACE;
   func_ptr->updace_ptr        = &CTSUpdACE;
 /* PS0295 - delete RG functions
   func_ptr->addrg_ptr         = &CTSAddRG;
   func_ptr->delrg_ptr         = &CTSDelRG;
   func_ptr->updrg_ptr         = &CTSUpdRG;
   func_ptr->adrs2rg_ptr       = &CTSAddResToRG;
   func_ptr->dlrs2rg_ptr       = &CTSDelResFromRG;
   func_ptr->uprs2rg_ptr       = &CTSUpdResToRG;
   func_ptr->cnus2rg_ptr       = &CTSConUserToRG;
   func_ptr->dsus2rg_ptr       = &CTSDisUserFromRG;
   func_ptr->cnug2rg_ptr       = &CTSConUGToRG;
   func_ptr->dsug2rg_ptr       = &CTSDisUGFromRG;
 */
   func_ptr->addres_ptr        = &CTSAddRes;
   func_ptr->updres_ptr        = &CTSUpdRes;
   func_ptr->delres_ptr        = &CTSDelRes;
   func_ptr->gtrsprm_ptr       = &CTSGetRSSParams;
   func_ptr->gtusers_ptr       = &CTSGetUsers;
   func_ptr->getugs_ptr        = &CTSGetUGs;
   func_ptr->gtug2uc_ptr       = &CTSGetConns;
   func_ptr->getres_ptr        = &CTSGetRes;
   func_ptr->gtrsacl_ptr       = &CTSGetResACL;
 /* PS0295 - delete RG functions
   func_ptr->getrgs_ptr        = &CTSGetRGs;
 */
   func_ptr->rss_login_ptr     = &CTSRSSLogin;
   func_ptr->rss_logout_ptr    = &CTSRSSLogout;
   func_ptr->rss_check_ptr     = &CTSRSSCheck;
   func_ptr->rss_start_intercept_ptr = &CTSInterceptorStart;

   func_ptr->addoe_ptr         = &CTSAddOE;
   func_ptr->updoe_ptr         = &CTSUpdOE;
   func_ptr->deloe_ptr         = &CTSDelOE;
   func_ptr->getoes_ptr        = &CTSGetOEs;
   func_ptr->isuserinoe_ptr    = &CTSIsUserInOE;
   func_ptr->isuginoe_ptr      = &CTSIsUGInOE;
   func_ptr->isoeinoe_ptr      = &CTSIsOEInOE;
   func_ptr->ismaskmatch_ptr   = &CTSIsMaskMatch;

   func_ptr->trnsevnt_ptr      = &CTSTransactionEvent; /* ps0310 */

   func_ptr->apiversion_ptr    = &CTSVersion;          /* ws2380 */

  /*
   *  Set API limits
   */

   rss_limits_ptr->max_pwd_len          =  TSS_PASSWD_LEN;
   rss_limits_ptr->max_restype_len      =  TSS_RESTYPE_NAME_LEN;
   rss_limits_ptr->max_user_len         =  TSS_USER_NAME_LEN;
   rss_limits_ptr->max_ace_user_len     =  TSS_USER_NAME_LEN;
   rss_limits_ptr->max_oe_len           =  TSS_OE_NAME_LEN;
   rss_limits_ptr->max_ace_oe_len       =  TSS_OE_NAME_LEN;
   rss_limits_ptr->max_ug_len           =  TSS_UG_NAME_LEN;
   rss_limits_ptr->max_ace_ug_len       =  TSS_UG_NAME_LEN;
   rss_limits_ptr->max_resource_len     =  TSS_RESOURCE_NAME_LEN;
   rss_limits_ptr->max_addinfo_kwd_len  =  TSS_ADDINFO_KWD_LEN;
   /* WS10082K - Increase the limits to 500K */
   rss_limits_ptr->max_addinfo_val_len  =  ADDINFO_LARGE_VAL_LEN;
 /*rss_limits_ptr->max_addinfo_val_len  =  TSS_ADDINFO_VAL_LEN;*/
   /* WS10082K */
  /*
   *   Finish
   */

   return rc ;

  }
