  /*rexx*/
  /****************************************************************/
  /* Compare old & new parmameters, like RSSPARM & CTSPARM.       */
  /* Input for this rexx is:                                      */
  /*    old_pds - old pds of parm member                          */
  /*    new_pds - new pds of parm member                          */
  /*    old_mbr - old parm member                                 */
  /*    new_mbr - new parm member                                 */
  /* Output is a report with differences between parameters.      */
  /*                                                              */
  /* An example for a job calling CTSCMP  rexx program may be:    */
  /*                                                              */
  /* //N99TST JOB  0,CLIST,CLASS=A,MSGCLASS=X                     */
  /* //T  EXEC PGM=IKJEFT01,REGION=4M                             */
  /* //SYSTSPRT  DD  SYSOUT=*                                     */
  /* //SYSPROC DD DISP=SHR,DSN=N99.REXX                           */
  /* //SYSTSIN DD *                                               */
  /*  PROFILE NOPREFIX                                            */
  /*  %CTSCMP  XXX.OLD.PARM             XXX.NEW.PARM       +      */
  /*           RSSPARM                  RSSPARM                   */
  /* //                                                           */
  /****************************************************************/
  /* trace all  */
  arg old_pds new_pds old_mbr new_mbr
  SAY '****************************************************************'
  SAY '* This report compares old & new parameters.                   *'
  SAY '* Old parameters are in:' old_pds'('old_mbr')                  *'
  SAY '* New parameters are in:' new_pds'('new_mbr')                  *'
  SAY '* Report shows parameters when one of the following exists:    *'
  SAY '*                                                              *'
  SAY '* 1. Parmeter exists in old&new but with different values.     *'
  SAY '* 2. Parmeter exists in old but not in new.                    *'
  SAY '****************************************************************'
  SAY '*                                                               '
  SAY '* OLD-PARAMETER            OLD-VALUE                 NEW-VALUE  '
  SAY '* -------------            ---------                 ---------  '
  ADDRESS TSO
  "PROF NOPREF"

  "ALLOC DA("old_pds"("old_mbr")) F(INDD1) SHR REUSE"
  "ALLOC DA("new_pds"("new_mbr")) F(INDD2) SHR REUSE"
  "EXECIO * DISKR INDD1(finis STEM in1."
  "EXECIO * DISKR INDD2(finis STEM in2."

  IF RC > 0 THEN
    DO
      SAY 'Allocation error, leave program.'
      EXIT RC
    END
  blanks = '                                                   '
  /****************************************************************/
  /* Compare parms                                                */
  /****************************************************************/
  diff_was_found = 0
  DO i = 1 to in1.0                /* search all old parms */
    IF SUBSTR(in1.i,1,1) ^= '*' THEN
      DO
        old_prm = WORD(in1.i,2)    /* parm in old parms */
        old_val = WORD(in1.i,3)    /* value in old parms */
        old_eq_new = 0             /* clear indication */
        old_ne_new = 0             /* clear indication */
        DO j = 1 to in2.0 /* search all new parms */
          IF SUBSTR(in2.j,1,1) ^= '*' THEN
            DO
              new_prm = WORD(in2.j,2) /* parm in new parms */
              new_val = WORD(in2.j,3) /* value in new parms */
              IF old_prm = new_prm THEN /* parm exists in both old&new */
                IF old_val ^= new_val THEN
                  DO               /* values of parm are different */
                    /***         prepare for report              ***/
                    CALL pad old_prm 24
                    old_prm = var
                    CALL pad old_val 25
                    old_val = var
                    CALL pad new_val 23
                    new_val = var
  SAY '* 'old_prm' 'old_val' 'new_val'  '
  SAY '*                                                               '
                    old_ne_new = 1 /* indicate values are diff */
                    diff_was_found = 1  /* ind values are diff */
                    LEAVE
                  END
                ELSE DO            /* same value for old&new parm */
                      old_eq_new = 1 /* indicate values are equale */
                   /* SAY 'For parameter ' old_prm 'values are eq:'*/
                   /* SAY old_val ' and ' new_val ' . (debug only)'*/
                      LEAVE
                     END
            END
        END  /* loop all new parms */
        IF old_eq_new = 0 & old_ne_new = 0 THEN
          DO
            CALL pad old_prm 24
            old_prm = var
            CALL pad old_val 25
            old_val = var
  SAY '* 'old_prm' 'old_val' NONE                        '
            diff_was_found = 1               /* ind values are diff */
        /*SAY 'Parameter ' old_prm 'does not appear in new ' new_mbr*/
/*SAY '*'old_prm'            'old_val'          NONE                  */
  SAY '*                                                               '
          END
      END /* end of IF */
  END /* end of old parms loop */
  IF diff_was_found = 0 THEN
    DO
      SAY '***********************************************'
      SAY '* No difference between parameters was found. *'
      SAY '***********************************************'
    END
  "FREE F(INDD1) "
  "FREE F(INDD2) "
exit 0
/***********************************************/
/***         prepare for report              ***/
/***********************************************/
pad:
  blanks = '                                                   '
  pad_bl = ''
  arg var len
  l = len - length(var)
  if l > 0 then pad_bl = left(blanks,l)
  var = var || pad_bl
  return
